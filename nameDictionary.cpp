#include "nameDictionary.h"

//Names, A (baby) name database from erh@xs4all.nl

//TODO
//ciLessLibC is a comparitor object that will enable user input from
//the searchDictionary function to be found regardless of case i.e
//it provisions case insensitive functionality for the std::map find function 
/*struct ciLessLibC : public std::binary_function<string, string, bool> {
    bool operator()(const string &lhs, const string &rhs) const {
        return strcasecmp(lhs.c_str(), rhs.c_str()) < 0 ;
    }
}; */

std::multimap<std::string,std::string> namesDictionary;
std::multimap<std::string,std::string>::const_iterator hunter;
std::multimap<std::string,std::string>::iterator editor;

void welcomeScreen(){
 std::cout<<"\n\n\n"<<std::setfill('*') << std::setw(29)<<"\n"; //Note: setfill doesn't function with double quotation marks "" 
//the compiler takes "" to be a string literal
  std::cout<<"WELCOME TO THE NAME DATABASE"<<"\n"<< std::setw(29)<<"\n";
}

void instructions(){
//TODO Add colour to the console
std::cout<<"Type"<<std::setfill(' ')<<std::setw(10)<<":man"<<" "<<"To view manual\n";
std::cout<<"Type"<<std::setw(10)<<":ename"<<" "<<"To add names or meanings\n";
//TODO Find out issue with two setw below... Why isn't it working?
//std::cout<<"Type"<<std::setw(10)<<":sname"<<std::setw(10)<<"To search the name dictionary\n";
std::cout<<"Type"<<std::setw(10)<<":sname"<<" "<<"To search the name dictionary\n";
std::cout<<"Type"<<std::setw(10)<<":q"<<" "<<"To quit\n\n";
}

std::string searchDictionary(std::string query)
{
	std::string result;	
	boost::to_upper(query); //Ensures all characters in query argument are in uppercase before performing find  
	hunter=namesDictionary.find(query);
	if(hunter!=namesDictionary.end()){
	result="\nMeaning:\t";
	int Number=namesDictionary.count(query);
	for(int i=0; i<Number;i++)
	{
		result.append(hunter->second);
		result.append(", ");
		++hunter;
	}
	  }
	else
	  result="Not found\n";
	return result;
}

std::string manipulateDictionary()
{
	std::string name, meaning;
	std::cout<<"\nEnter Name:\n";
	std::getline(std::cin, name);
	std::cout<<"\nEnter Meaning:\n";
	std::getline(std::cin, meaning);
	boost::to_upper(name); 
	namesDictionary.insert(std::pair<std::string,std::string>(name,meaning));
	return "Dictionary updated\n";
}


void populateDictionary(){
	namesDictionary.insert(std::pair<std::string,std::string>("AARON","To sing"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABBIE","From the name ABIGAIL"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABBOTT","Father"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABBRA","Example"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABBRA","Lesson"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABBY","From the name ABIGAIL"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABE","From the name ABRAHAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABEL","A Breath"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABENI","Girl Prayed For (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABIA","Great"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABIBA","Child born after grandmother Died (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABIE","From the name ABRAHAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABIGAIL","Father of Joy"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABNER","Father of Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABRAHAM","Father of a Multitude"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABRAM","High Father"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABRIANNA","Mother of Many Nations"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABRIENDA","Opening (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABRIL","April (Lt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABSOLOM","My Father is Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("ABU","Father (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ACACIA","Thorny"));
	namesDictionary.insert(std::pair<std::string,std::string>("ACE","Unity"));
	namesDictionary.insert(std::pair<std::string,std::string>("ACE","One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADA","From the name ADELAIDE"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADAH","Beautiful Addition"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADAIR","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADAIR","Exalted"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADALIA","God is my Refuge"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADAM","The Earth"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADAMINA","Fem. form of ADAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADAMMA","Beautiful Child"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADARA","Chaste One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADDISON","Son of Adam"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADE","Crown, Royal (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADELA","Noble and Serene"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADELAIDE","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADELAIDE"," Kind"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADELE","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADELE"," Kind"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADELINE","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADELINE"," Kind"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADELIO","Father of the Noble Prince (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADELLE","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADELLE"," Kind"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADEM","Red Earth (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADEN","Fiery One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADERES","Clothes Worn on Outside"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADIE","Decoration"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADIEL","Goat (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADILA","Just, Fair (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADINA","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADINA"," Adorned"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADITA","Basket (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADLAI","My Witness"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADLI","Just"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADLI"," Wise"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADOLFO","From the name ADOLPH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADOLPH","Wolf"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADONAI","My Lord (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADONIA","From ADONIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADORA","Beloved One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADRIAN","(M)Dark"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADLI"," Rich"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADRIANA","From the name ADRIENNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADRIANO","Native of Adria (Greek City)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADRIENNE","(F)Dark"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADLI"," Rich"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADY","From the name ADELAIDE"));
	namesDictionary.insert(std::pair<std::string,std::string>("AELAN","Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("AFFRICA","From the name AFRICA"));
	namesDictionary.insert(std::pair<std::string,std::string>("AFRA","Female Deer"));
	namesDictionary.insert(std::pair<std::string,std::string>("AFRIC","Pleasant"));
	namesDictionary.insert(std::pair<std::string,std::string>("AFRICA","Pleasant"));
	namesDictionary.insert(std::pair<std::string,std::string>("AFTON","From the Afton River"));
	namesDictionary.insert(std::pair<std::string,std::string>("AGAMEMNON","Resolute"));
	namesDictionary.insert(std::pair<std::string,std::string>("AGATHA","Good"));
	namesDictionary.insert(std::pair<std::string,std::string>("AGGIE","From the name AGATHA"));
	namesDictionary.insert(std::pair<std::string,std::string>("AGNES","Pure"));
	namesDictionary.insert(std::pair<std::string,std::string>("AH CY","Lovely (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AHAVA","Cherished One (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AI","Love (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AIDA","Helper"));
	namesDictionary.insert(std::pair<std::string,std::string>("AIDAN","Little Fire"));
	namesDictionary.insert(std::pair<std::string,std::string>("AIKO","Beloved One (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AILEEN","Form of EILEEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("AILIS","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADLI"," Kind (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AILISH","Form of ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("AIMEE","From the name AMY"));
	namesDictionary.insert(std::pair<std::string,std::string>("AINE","Joy, Ardent"));
	namesDictionary.insert(std::pair<std::string,std::string>("AINSLEY","My Own Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("AISLING","Vision"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADLI"," Dream (ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AISLINN","A Dream (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AIZZA","Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("AJA","Goat"));
	namesDictionary.insert(std::pair<std::string,std::string>("AJANI","He Who Wins the Struggle (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AJAY","From A.J.or Nat.Am name meaning Unconquerable"));
	namesDictionary.insert(std::pair<std::string,std::string>("AKILI","Wisdom"));
	namesDictionary.insert(std::pair<std::string,std::string>("AKUJI","Dead and Awake (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AL","From the name ALBERT"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALAIR","Cheerful"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADLI","Merry"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALAKE","One to be Honored (Af"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALAN","Handsome"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALANA","Fair"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADLI"," Beautiful"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALANNA","Form of ALANA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALASTAIR","From the name ALEXANDER (Br)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALAURA","From LAURA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALBAN","White"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALBANY","White"));
	namesDictionary.insert(std::pair<std::string,std::string>("ADLI"," Fair"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALBERT","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALBERT"," Bright"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALBERTA","From the name ALBERT"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALBERTO","Form of ALBERT (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALBIN","White (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALBINA","White-Skinned"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALDA","Long Lived"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALDAN","Of Old Age"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALDEN","Of Old Age"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALDON","Of Old Age"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALDONA","Old (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALEC","From the name ALEXANDER"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALEJANDRO","Protector"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALEM","Worl (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALENA","Form of HELEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALETA","From the name ALETHEA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALETHA","Truth"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALETHEA","Truthful One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALETTA","Winged One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALEX","From the name ALEXANDER"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALEXA","From the name ALEXANDER"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALEXANDER","Protector of Men"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALEXANDRA","From the name ALEXANDER"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALEXANDRIA","Defender of Mankind"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALEXIA","Defender of Mankind"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALEXIS","From the name ALEX"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALFONSO","From the name ALPHONSE"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALFRED","Counselor"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALGERON","Bearded One (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALI","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALI"," Sublime"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALIA","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALIA"," Descender"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALICE","Truth"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALICE"," Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALICIA","Truthful"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALIJAH","FROM ELIJAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALIKA","Truthful"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALIMA","Heart Sings & Dances"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALINA","Form of ADELINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALISHA","From the name ALICE"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALISON","Of Noble Birth"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALISSA","From the name ALICE"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALIZE","One who charms"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALKA","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALKA"," Brilliant (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALLEGRA","Cheerful"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALLEGRA"," Full of Energy"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALLEN","From the name ALAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALLENE","Attractive"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALLENE"," Peaceful"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALLIE","From the name ALISON"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALLISON","From the name ALISON"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALLYSON","From the name ALICE"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALMA","Soul"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALMEDA","Ambitious"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALOHILANI","Shining Star from Heaven"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALPHONSE","Eager"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALPHONSE"," Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALSATIA","From Alsace-Loraine area of France"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALTHEA","Healer"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALVA","Fair Complected"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALVIN","Noble Friend"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALYN","Fem. form of ALAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALYSON","From the name ALICE"));
	namesDictionary.insert(std::pair<std::string,std::string>("ALYSSA","From the name ALICE"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMADEUS","Love of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMADOR","Lover"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMALIA","Hardworking"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMALIE","Hard Worker"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMAN","Trustworthy (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMANA","Faithful"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMANDA","Worthy of Love"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMANDLA","Power (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMARA","Eternal"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMARANTA","Flower that Never Fades"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMARANTE","Flower that Never Fades"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMARANTH","Immortal"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMARIS","Promised by God"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMARYLLIS","Species of Flowers"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMAYA","Night Rain"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMBER","Red"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMBROSE","Immortal (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMELIA","Work of the Lord"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMENA","Honest Woman"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMI","Friend"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMIEL","God of my People (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMINA","From the name AMENA"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMIR","From the Top of the Tree OR Prince"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMIRI","Prince (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMITY","Friendship"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMMA","Godlike"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMORINA","Love"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMOS","To Be Troubled"));
	namesDictionary.insert(std::pair<std::string,std::string>("AMY","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("AN","Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANA","Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANAIS","Graceful"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANALIESE","FROM ANNA & LISA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANALISE","From ANALIESE"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANANA","Soft"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANANA","Gentle (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANANDO","Bliss (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANASTASIA","Resurrection"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANATOLA","From the East (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANATOLE","East"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANDE","Pillar (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANDRA","Strong & Courageous"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANDRALYN","FROM ANDRA & LYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANDRE","From the name ANDREW (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANDREA","From the name ANDREW"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANDREAS","Fisherman"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANDRES","From the name ANDREW (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANDREW","Manly"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANDREW"," Courageous"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANDY","From the name ANDREW"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANEMONE","Breath"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANEVAY","Superior (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANGEL","Angelic"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANGELA","Angelic (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANGELICA","Angelic (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANGELINA","Angelic (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANGELO","Angelic (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANGIE","From ANGELA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANGUS","Unique Strength"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANI","Beautiful (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANIKA","Very Beautiful"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANILA","Children of the Wind (Hn)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANISA","Joy"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANISA"," Pleasure (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANITA","Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANITRA","Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANJA","Grace of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANLON","Great Champion"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANN","From the name ANNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANNA","Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANNALISE","Gracious & Consecreted to God"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANNAMIKA","Grace"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANNAMIKA"," New Moon"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANNE","From the name ANNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANNEKE","Little Ann"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANNETTE","Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANNICE","From AGNES"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANNICK","Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANNIS","From AGNES"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANNISSA","From the name ANN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANNORA","With Honor"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANTHEA","Flowerlike (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANTHONY","Worthy of Praise"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANTIONETTE","From the name ANTONIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANTOINETTE","Flourishing"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANTOINETTE"," Praiseworthy"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANTONIA","Fem. form of ANTHONY"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANTONIE","Fem. form of ANTHONY"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANTONY","Praiseworthy"));
        namesDictionary.insert(std::pair<std::string,std::string>("ANTONY"," Flourishing"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANWAR","The Brightest (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ANYA","From the name ANNA (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AOKO","Outside (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AOLANI","Cloud from Heaven (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("APHRODITE","Goddess of Love"));
	namesDictionary.insert(std::pair<std::string,std::string>("APOLLO","God of the Sun (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("APPOLLO","Manly Beauty (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("APRIA","From the Apricot"));
	namesDictionary.insert(std::pair<std::string,std::string>("APRIL","Opening (as in Spring)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARABELA","Beautiful Altar"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARABELLA","Beautiful Altar"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARAM","High"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARAM"," Exalted"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARAN","Forest (Tk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARCHIBALD","Very Bold"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARCHIE","From the name ARCHIBALD"));
	namesDictionary.insert(std::pair<std::string,std::string>("AREN","Eagle"));
	namesDictionary.insert(std::pair<std::string,std::string>("AREN"," Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("AREN"," Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARETHA","The Best"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARGUS","Vigilant"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARGUS"," Watchful (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARI","From the name ARIEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARIA","Melody"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARIANA","Like A Beautiful Melody"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARIEL","Ethereal"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARIELLA","Lioness of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARIELLE","Lioness of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARIEN","Enchanted"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARISSA","Sowing the Fields"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARISTA","Sowing the Fields"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARIZA","Doors of Cedar"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARLEN","Pledge"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARLENE","Pledge"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARLO","Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARLYNDA","Pledge"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARMAND","Of the Army"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARMANDE","From the name ARMAND (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARMANDO","From the name ARMAND"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARMINA","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARNAUD","Ruler of Eagles"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARNE","Eagle"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARNIE","From the name ARNE OR ARNOLD"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARNOLD","Strong as an Eagle"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARON","From the name AARON"));
	namesDictionary.insert(std::pair<std::string,std::string>("ART","A Rock"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARTEMIS","Goddess of the Moon"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARTHUR","A follower of Thor"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARTIE","From the name ARTHUR"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARTY","From the name ARTHUR"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARVID","Eagle Tree (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ARVIN","Friend to All (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASA","Starting Life at Dawn"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASABI","One of Select Birth (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASALIE","Starting Life at Dawn"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASASIA","alt form of Acacia"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASH","From the name ASHLEY"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASHA","Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASHBY","Ash Tree Farm"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASHLEY","From the Ash Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASHLING","Dream, Vision"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASHLYN","ROOTS  ASHLEY&LYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASHTON","Ash Tree Settlement"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASHTYN","From the Ash Tree Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASIS","Sun (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASLI","Original, Pure (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASNEE","Lightning"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASTA","Bright as a Star"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASTHORE","Loved One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASTIN","Starlike"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASTRA","Star"));
	namesDictionary.insert(std::pair<std::string,std::string>("ASTRID","Divine Strength"));
	namesDictionary.insert(std::pair<std::string,std::string>("ATALO","Youthful (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ATHALIA","God is Exalted (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ATHENA","Goddess of Wisdom & War"));
	namesDictionary.insert(std::pair<std::string,std::string>("ATIRA","Prayer"));
	namesDictionary.insert(std::pair<std::string,std::string>("AUBERTA","Noble, Bright"));
	namesDictionary.insert(std::pair<std::string,std::string>("AUBREY","Noble, Bright"));
	namesDictionary.insert(std::pair<std::string,std::string>("AUBRIANNA","Noble, Strong One"));
	namesDictionary.insert(std::pair<std::string,std::string>("AUDI","Last Daughter (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AUDRA","From AUDREY"));
	namesDictionary.insert(std::pair<std::string,std::string>("AUDREY","Noble Strength"));
	namesDictionary.insert(std::pair<std::string,std::string>("AUGUST","From the name AUGUSTUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("AUGUSTIN","Revered, Exalted"));
	namesDictionary.insert(std::pair<std::string,std::string>("AUGUSTUS","Revered, Exalted"));
	namesDictionary.insert(std::pair<std::string,std::string>("AULII","Delicious (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AURE","Soft Air, Breeze (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AURELIA","Golden"));
	namesDictionary.insert(std::pair<std::string,std::string>("AURORA","Dawn"));
	namesDictionary.insert(std::pair<std::string,std::string>("AURORETTE","FROM AURORA"));
	namesDictionary.insert(std::pair<std::string,std::string>("AUSTIN","From the name AUGUSTIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("AUTUMN","Fall Season"));
	namesDictionary.insert(std::pair<std::string,std::string>("AVA","Like a Bird"));
	namesDictionary.insert(std::pair<std::string,std::string>("AVALON","Island"));
	namesDictionary.insert(std::pair<std::string,std::string>("AVEL","Breath (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AVELINE","Hazel"));
	namesDictionary.insert(std::pair<std::string,std::string>("AVERY","From the name ALFRED (Br)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AVI","Lord of Mine"));
	namesDictionary.insert(std::pair<std::string,std::string>("AVIS","Birds"));
	namesDictionary.insert(std::pair<std::string,std::string>("AVIV","Youth (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AVIVA","Joyful Spring"));
	namesDictionary.insert(std::pair<std::string,std::string>("AVONGARA","To Tie (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AXEL","Source of all Life (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AXELLE","Father of Peace (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AYA","Bird"));
	namesDictionary.insert(std::pair<std::string,std::string>("AYAME","Iris (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AYANNA","Innocent"));
	namesDictionary.insert(std::pair<std::string,std::string>("AYLA","The Oak Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("AYOKA","One who Causes Joy (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AYSHA","Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("AZANA","Ultimate (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AZIZA","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("AZIZE","Highly Valued"));
	namesDictionary.insert(std::pair<std::string,std::string>("AZRA","Pure"));
	namesDictionary.insert(std::pair<std::string,std::string>("AZRIEL","God is My Aid"));
	namesDictionary.insert(std::pair<std::string,std::string>("AZUKA","Past Glory (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("AZURA","Sky Blue"));
	namesDictionary.insert(std::pair<std::string,std::string>("BABA","Born on Thursday"));
	namesDictionary.insert(std::pair<std::string,std::string>("BABETTE","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("BAHARI","Sea Man (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BAILEY", "Bailiff, Steward"));
	namesDictionary.insert(std::pair<std::string,std::string>("BAIRD","The Minstrel"));
	namesDictionary.insert(std::pair<std::string,std::string>("BAIRN","Scottish name for a child"));
	namesDictionary.insert(std::pair<std::string,std::string>("BAKULA","Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("BALLARD","A Dancing Song"));
	namesDictionary.insert(std::pair<std::string,std::string>("BALTHASAR","One of the 3 Kings (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BAMBI","Child"));
	namesDictionary.insert(std::pair<std::string,std::string>("BANJI","Second Born of Twins (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARAKE","God's Blessing (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARB","From the name BARBARA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARBARA", "Strange, Foreign"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARBIE","From the name BARBARA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARCLAY","From the meadow of the Birch Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARKE","Blessings (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARNABAS","Son of a Prophecy"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARNARD","From the name BERNARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARNEY","From the name BERNARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARNY","From the name BERNARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARR","From the name BARRETTA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARRAN","Little Top"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARRETTA","A Cap"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARRY","Son of HARRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("BART","From the name BARTHOLEMEW"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARTH","From the name BARTHOLEMEW"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARTHOLEMEW", "Hill, Furrow"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARTON","Bart's Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARUCH","Blessed (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BARY","From the name BARRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("BASH","Forerunner (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BASIL","Like a King"));
	namesDictionary.insert(std::pair<std::string,std::string>("BAST","Of the City of Bubastis (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BASTIEN","Venerable, Revered"));
	namesDictionary.insert(std::pair<std::string,std::string>("BAXTER","A Baker"));
	namesDictionary.insert(std::pair<std::string,std::string>("BAYARD","With Red-Brown Hair"));
	namesDictionary.insert(std::pair<std::string,std::string>("BAYEN","From Ban"));
	namesDictionary.insert(std::pair<std::string,std::string>("BAYLEE","Bailiff"));
	namesDictionary.insert(std::pair<std::string,std::string>("BAYO","Joy is Found"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEA","From the name BEATRICE"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEATA","Happy"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEATE","The One Who Brings Joy"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEATRICE","Bringer of Joy"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEATRIZ","Blessed"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEAU","From the name BEAUREGARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEAUREGARD","Beautiful, Handsome"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEBE","Baby"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEBHIN","Sweet, Melodious"));
	namesDictionary.insert(std::pair<std::string,std::string>("BECCA","From the name REBECCA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BECK","The Brook"));
	namesDictionary.insert(std::pair<std::string,std::string>("BECKA","From the name REBECCA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BECKY","From the name REBECCA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEL","Sacred Wood"));
	namesDictionary.insert(std::pair<std::string,std::string>("BELA","She of Porcelain Skin"));
	namesDictionary.insert(std::pair<std::string,std::string>("BELAY","Above, Superior (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BELDEN","From the Fair Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("BELINDA","Beautiful Snake"));
	namesDictionary.insert(std::pair<std::string,std::string>("BELITA","Beautiful"));
	namesDictionary.insert(std::pair<std::string,std::string>("BELL","From the name BELLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("BELLA","From the name BELLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("BELLE","Beauty"));
	namesDictionary.insert(std::pair<std::string,std::string>("BELLINI","From the name BELLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEN","From the name BENEDICT, BENJAMIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BENA","Pheasant"));
	namesDictionary.insert(std::pair<std::string,std::string>("BENARD","FROM BERNARD (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BENEDICT","Blessed"));
	namesDictionary.insert(std::pair<std::string,std::string>("BENEN","Kind"));
	namesDictionary.insert(std::pair<std::string,std::string>("BENITA","Fem. form of BENEDICT"));
	namesDictionary.insert(std::pair<std::string,std::string>("BENJAMIN","Son of My Right Hand"));
	namesDictionary.insert(std::pair<std::string,std::string>("BENJY","From the name BENJAMIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BENNETT","Little Blessed One"));
	namesDictionary.insert(std::pair<std::string,std::string>("BENNY","From the name BENJAMIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BENSON","Son of BENJAMIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERDINE","Bright Maiden (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERKE","From the name BURKE"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERN","From the name BERNARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERNADETTE","From the name BERNARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERNADINE","From the name BERNARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERNARD","Bold As A Bear"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERNE","From the name BERN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERNICE","Brings Victory"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERNIE","From the name BERNARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERNY","From the name BERNARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERT","Bright,nobility"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERTHA","Shining"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERTILLE","Heroine"));
	namesDictionary.insert(std::pair<std::string,std::string>("BERYL","Dazzling Jewel"));
	namesDictionary.insert(std::pair<std::string,std::string>("BESS","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("BESSIE","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("BETH","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("BETHAN","Consecrated to God (Wl)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BETHANY","House of Figs"));
	namesDictionary.insert(std::pair<std::string,std::string>("BETSY","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("BETTE","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("BETTY","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEULAH","Married"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEVAN","Son of Evan"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEVERLY","Near the Meadow of the Beavers"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEVIS","Bowman"));
	namesDictionary.insert(std::pair<std::string,std::string>("BEYLA","By God!"));
	namesDictionary.insert(std::pair<std::string,std::string>("BIANA","Secretive"));
	namesDictionary.insert(std::pair<std::string,std::string>("BIANCA","From the name BLANCHE"));
	namesDictionary.insert(std::pair<std::string,std::string>("BIBIANE","Lively"));
	namesDictionary.insert(std::pair<std::string,std::string>("BIDELIA","High One"));
	namesDictionary.insert(std::pair<std::string,std::string>("BIKITA","Anteater (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BILEN","Pupil of an Eye"));
	namesDictionary.insert(std::pair<std::string,std::string>("BILL","From the name WILLIAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("BILLY","From the name WILLIAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("BIN","From the name BINGHAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("BINA","Freshness (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BING","Pet form of BINGHAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("BINGHAM","Crib"));
	namesDictionary.insert(std::pair<std::string,std::string>("BIRCH","Birch Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("BISBEE","Location Name"));
	namesDictionary.insert(std::pair<std::string,std::string>("BISHOP","A Bishop (Br)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BITON","Born after Long Wait (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BJORN","Bear"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLADE","Knife, Sword"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLAINE","The Source of a River"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLAIR","Field or Plain"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLAKE","White"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLANCHE","White"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLAZE","A Flame"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLENDA","From the name BELINDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLINDA","From the name BELINDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLISS","Perfect Joy"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLITHE","From the name BLYTHE"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLODWYN","Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLOSSOM","Flower-like"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLUM","Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLUMA","A Flower, Bloom"));
	namesDictionary.insert(std::pair<std::string,std::string>("BLYTHE","Happy"));
	namesDictionary.insert(std::pair<std::string,std::string>("BO","Most Treasured"));
	namesDictionary.insert(std::pair<std::string,std::string>("BOAZ","Swift, Strong"));
	namesDictionary.insert(std::pair<std::string,std::string>("BOB","From the name ROBERT"));
	namesDictionary.insert(std::pair<std::string,std::string>("BONA","A Builder"));
	namesDictionary.insert(std::pair<std::string,std::string>("BONAVENTURE","Good Luck"));
	namesDictionary.insert(std::pair<std::string,std::string>("BOND","To Bind"));
	namesDictionary.insert(std::pair<std::string,std::string>("BONITA","Pretty, Beautiful"));
	namesDictionary.insert(std::pair<std::string,std::string>("BONNIE","From the name BONITA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BONO","All Good"));
	namesDictionary.insert(std::pair<std::string,std::string>("BOONE","Good"));
	namesDictionary.insert(std::pair<std::string,std::string>("BORIS","Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("BOWEN","Son of OWEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BOWIE","From the name BOWEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BOYD","Yellow Haired"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRACHA","A Blessing (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRAD","Broad Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRADEN","Broad"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRADFORD","A Broad Ford"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRADLEY","A Broad Lea, Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRAEDEN","From the Dark Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRAIMA","Father of Multitudes (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRAN","From the name BRAND"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRAND","From the name BRIAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRANDEE","Brandy, After Dinner Drink"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRANDIE","From BRANDY"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRANDON","From the name BRENDAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRANT","From the name BRAND"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRAXTON","Brock's Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRAYDEN","Brave"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRAZIL","Strife"));
	namesDictionary.insert(std::pair<std::string,std::string>("BREANNA","Strong, Virtuous, Honorable"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRECKIN","Freckled"));
	namesDictionary.insert(std::pair<std::string,std::string>("BREDE","The Glaciar (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BREE","Broth"));
	namesDictionary.insert(std::pair<std::string,std::string>("BREIN","Fairy Palace"));
	namesDictionary.insert(std::pair<std::string,std::string>("BREND","From the name BRENDAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRENDA","Feminine form of BRENDAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRENDAN","A Raven"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRENNA","Little Raven"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRENNAN","Raven-like"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRENT","A Steep Climb"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRETT","Briton, British"));
	namesDictionary.insert(std::pair<std::string,std::string>("BREWSTER","One Who Brews Beer"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIAN","Strong One"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIANA","Strong, Virtuous, Honorable"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIANNA","(F) See BRIAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIANNE","(F) See BRIAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIAR","From the name BRIAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRICE","The Son of RICE"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRICK","From the name BRICE"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIDGET","Strong"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIDGIT","From the name BRIDGET"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIELLE","Region in France"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIER","Heather"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIGHAM","Covered Bridge"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIGHTON","A Brit"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIGIT","Strong"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIGITTE","From the name BRIDGET"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRILANE","From Brigham Lane"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRILLIANT","To Sparkle"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRINA","From SABRINA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRINLY","Virtuous, Princess"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRIT","From the name BRITANNIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRITA","From the name BRITTANIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRITAIN","From the name BRITTANIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRITANNIA","From the name BRITTANIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRITANY","From the name BRITTANIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRITTANIA","From Brittain, British"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRITTANY","From the name BRITTANIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRITTNEE","From Britain"));
	namesDictionary.insert(std::pair<std::string,std::string>("BROCK","A Badger"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRODY","Root BRODERICK"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRONE","Sorrow"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRONSON","Strong, Fierce One"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRONWEN","Dark and Pure (Wl)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BROOKE","Brook, Stream"));
	namesDictionary.insert(std::pair<std::string,std::string>("BROOKLYN","Brook, Stream"));
	namesDictionary.insert(std::pair<std::string,std::string>("BROOKS","Running Water"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRUCE","Woods"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRUNO","Brown Haired"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRYAN","Strong One"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRYANNE","Strong One"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRYANT","Strong, Honorable"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRYCE","From the name BRICE"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRYGID","Strength (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRYNN","Small Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRYONY","Vine with Small Blossoms"));
	namesDictionary.insert(std::pair<std::string,std::string>("BRYTON","A Brit"));
	namesDictionary.insert(std::pair<std::string,std::string>("BUCK","Deer"));
	namesDictionary.insert(std::pair<std::string,std::string>("BUD","Messenger, Friend"));
	namesDictionary.insert(std::pair<std::string,std::string>("BUDDY","Friend"));
	namesDictionary.insert(std::pair<std::string,std::string>("BUFFY","From the name BUNNY"));
	namesDictionary.insert(std::pair<std::string,std::string>("BUNNY","Little Rabbit"));
	namesDictionary.insert(std::pair<std::string,std::string>("BURDETTE","Courageous"));
	namesDictionary.insert(std::pair<std::string,std::string>("BURKE","From the fortress"));
	namesDictionary.insert(std::pair<std::string,std::string>("BURT","From the name BURTON"));
	namesDictionary.insert(std::pair<std::string,std::string>("BURTON","Fortress"));
	namesDictionary.insert(std::pair<std::string,std::string>("BUTTERFLY","A Butterfly"));
	namesDictionary.insert(std::pair<std::string,std::string>("BUZZ","From a Nickname"));
	namesDictionary.insert(std::pair<std::string,std::string>("BYRD","Like a Bird"));
	namesDictionary.insert(std::pair<std::string,std::string>("BYRON","Bear or Cottage"));
	namesDictionary.insert(std::pair<std::string,std::string>("CADE","Pure"));
	namesDictionary.insert(std::pair<std::string,std::string>("CADEE","Pure"));
	namesDictionary.insert(std::pair<std::string,std::string>("CADENCE","To Fall"));
	namesDictionary.insert(std::pair<std::string,std::string>("CADY","Simple Happiness"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAEL","Victorious People"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAELAN","Victorious People"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAESAR","From the name CESAR"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAI","Fair Sex"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAILEAN","The Child"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAIMILE","A Family is Born (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAIN","Spear"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAINE","From the name CAIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAIRBRE","Strong Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAIRO","City of Pharohs"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAIS","Rejoicer"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAITLIN","From the name CAITLYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAITLYN","From the name CATHERINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAL","Short for names beginning with CAL"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALA","Castle (Ar)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALAIS","City in France"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALANDRA","Singing Bird"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALANTHA","Like a Lovely Blossom"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALDER","Stream"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALE","Form of Caleb"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALEB","Faithful, Bold"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALEY","Brave Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALHOUN","Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALIX","Very Handsome"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALIXTE","Very Beautiful"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALLA","Beauty"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALLIA","Beautiful (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALLIOPE","One With Beautiful Voice"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALLISTA","Most Beautiful"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALLUM","Dove"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALVIN","Bald"));
	namesDictionary.insert(std::pair<std::string,std::string>("CALVINE","From the name Calvin"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAM","From the name CAMERON"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAMDYN","Winding Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAMERON","Bent Nose"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAMILLA","From the name CAMILLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAMILLE","Virginal, Unblemished Character"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAMLIN","Crooked line"));
	namesDictionary.insert(std::pair<std::string,std::string>("CANA","Beloved (Tk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CANDACE","Fire White, Pure"));
	namesDictionary.insert(std::pair<std::string,std::string>("CANDICE","From the name CANDACE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CANDIDA","Dazzling White"));
	namesDictionary.insert(std::pair<std::string,std::string>("CANDIDE","Dazzling White"));
	namesDictionary.insert(std::pair<std::string,std::string>("CANDIE","From the name CANDACE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CANDY","From the name CANDACE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARA","Sweet Melody"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARALEE","From CARA and LEE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARESSE","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARHA","A Pillar stone"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARINA","Dear Little One"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARL","Contraction of CHARLES"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARLA","Fem. form of CARL"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARLETON","Carl's Town or Farmer's Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARLISLE","Carl's Island"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARLOS","From the name CARL (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARLOTA","From the name CHARLOTTE or CAROLINE (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARLOTTA","Feminine form of CHARLES"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARLTON","From the name CARLETON"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARLY","From the name CARLOTTA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARMEL","A Vineyard"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARMELA","From the name CARMEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARMELITA","From the name CARMEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARMEN","Song"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARMINE","Song"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAROL","Melody, Song"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAROLENA","Little and Womanly"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAROLINE","From the name CAROL AND LINDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAROLYN","From the name CAROL AND LINDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARON","Contraction of CAROLINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARR","From the name KERR"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARRICK","A Rock"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARRIE","From the name CAROL"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARRIEANN","Gracious and Womanly"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARSON","Son of Carr"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARSYN","Son of Carr"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARTER","Driver of a Cart"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARVER","Wood Carver"));
	namesDictionary.insert(std::pair<std::string,std::string>("CARY","From the name CARR"));
	namesDictionary.insert(std::pair<std::string,std::string>("CASEY","Brave"));
	namesDictionary.insert(std::pair<std::string,std::string>("CASHLIN","Little Castle"));
	namesDictionary.insert(std::pair<std::string,std::string>("CASIMIR","Peacemaker"));
	namesDictionary.insert(std::pair<std::string,std::string>("CASONDRA","Not to be believed"));
	namesDictionary.insert(std::pair<std::string,std::string>("CASPAR","From the name CASPER"));
	namesDictionary.insert(std::pair<std::string,std::string>("CASPER","Treasurer"));
	namesDictionary.insert(std::pair<std::string,std::string>("CASSANDRA","She who is Ignored"));
	namesDictionary.insert(std::pair<std::string,std::string>("CASSIA","Spicy Cinnamon"));
	namesDictionary.insert(std::pair<std::string,std::string>("CASSIDY","Clever"));
	namesDictionary.insert(std::pair<std::string,std::string>("CASSIUS","Vain"));
	namesDictionary.insert(std::pair<std::string,std::string>("CATHERINE","Pure, Virginal"));
	namesDictionary.insert(std::pair<std::string,std::string>("CATHY","From the name CATHERINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CATRIN","Pure (Wl)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CAYLA","From the name CATHERINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CEANA","God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("CEARO","Sorrow"));
	namesDictionary.insert(std::pair<std::string,std::string>("CECE","From the name CECILIA (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CECIL","Blind"));
	namesDictionary.insert(std::pair<std::string,std::string>("CECILE","Blind"));
	namesDictionary.insert(std::pair<std::string,std::string>("CECILIA","Blind"));
	namesDictionary.insert(std::pair<std::string,std::string>("CECILY","From the name CECILIA (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CEDRIC","Chief"));
	namesDictionary.insert(std::pair<std::string,std::string>("CELESTE","From the Sky"));
	namesDictionary.insert(std::pair<std::string,std::string>("CELESTYN","Heaven (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CELIA","Blind"));
	namesDictionary.insert(std::pair<std::string,std::string>("CELINA","Moon"));
	namesDictionary.insert(std::pair<std::string,std::string>("CELINE","Moon"));
	namesDictionary.insert(std::pair<std::string,std::string>("CERISE","Cherry (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CESAR","Long Haired"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHAD","Battle, Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHAELA","Who is Like God?"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHAELI","Who is Like God?"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHAILYN","Life, Waterfall"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHAIM","To Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHALSIE","Seaport"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHANA","Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHANCE","Chancellor"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHANCELLOR","Keeper of Records, Secretary"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHANDLER","Candle Maker"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHANDRA","Moon-Like, Great Goddess"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHANNON","From the name SHANNON"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHANTAL","Rocky Land or Singer"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHANTEL","Rocky Land or Singer"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHARIS","From the name CHARISSE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHARISSE","Grace, Beauty, Kindness"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHARITY","Charity, Kindness"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHARLA","From CHARLOTTE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHARLEE","FROM CHARLES"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHARLEIGH","Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHARLENE","From the name CHARLES"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHARLES","Manly, Full Grown"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHARLOT","From the name CHARLOTTE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHARLOTTE","Little and Womanly"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHARMAINE","Bountiful Orchard"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHARO","From the name CAROL"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHARS","From the name CHARLES"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHAS","From the name CHARLES"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHASE","Hunter"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHASTITY","Purity"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHAUNCEY","Chancellor"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHAVA","Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHAVI","Female Child"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHAYLSE","Seaport"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHECHE","Small Thing (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHELSA","Harbor"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHELSEA","Port of Ships"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHELSI","Seaport"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHELSIA","From CHELSEA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHEN","Great (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHENEY","Little Great One"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHENOA","Bird of Peace (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHER","From the name CHERYL"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHERI","From the name CHERYL"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHERIE","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHERLIN","From CHER and LIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHERRY","From the name CHERYL"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHERYL","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHESNA","Bringing Peace, Calm"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHESTER","A Fortress, Camp"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHET","From the name CHESTER"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHEYENNE","People of Alien Speech (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHEYNE","Form of SHANE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHEZARINA","From the name Cesar"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHHAYA","Season's Beginning"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHICK","From the name CHARLES"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHICO","From the name FRANCIS (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHILL","From the name CHILTON"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHILTON","A Town By the River"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHIMELU","Made of God (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHINA","From China"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHIP","Chipping Sparrow"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHIPO","A Gift (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHLOE","Blooming"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHLORIS","Pale"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHRIS","From the name CHRISTOPHER"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHRISSY","From the name CHRISTOPHER"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHRISTA","From the name CHRISTOPHER"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHRISTIAN","From the name CHRISTOPHER"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHRISTIANA","Christian, Annointed"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHRISTINA","Christian, Annointed"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHRISTINE","From the name CHRISTOPHER"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHRISTOPHER","Christ-bearer"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHRISTY","From the name CHRISTOPHER"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHUCK","From the name CHARLES"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHUMANI","Dew Drop (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHUN","Nature's Renewal (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHYNA","From the name CHINA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CHYNNA","From the name CHINA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CIAN","Ancient"));
	namesDictionary.insert(std::pair<std::string,std::string>("CIANNA","God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("CIARA","Saint (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CICELY","From the name CECILIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CICERO","The Historian"));
	namesDictionary.insert(std::pair<std::string,std::string>("CICILY","From the name CECILIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CID","Lord"));
	namesDictionary.insert(std::pair<std::string,std::string>("CIEL","From Heaven, Heavenly"));
	namesDictionary.insert(std::pair<std::string,std::string>("CINDY","From the name CYNTHIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CIRA","Sun (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CIRILA","Ladylike"));
	namesDictionary.insert(std::pair<std::string,std::string>("CIRO","From the name CECERO"));
	namesDictionary.insert(std::pair<std::string,std::string>("CIROCCO","Ancient Egyptian Wind"));
	namesDictionary.insert(std::pair<std::string,std::string>("CISSY","From the name CECILIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLAIRE","From the name CLARA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLARA","Clear,Bright"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLARAL","Clear, Bright"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLARE","From the name CLARA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLARENCE","Clear, Luminous"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLARISSA","Brilliant"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLARK","Clergyman"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLARKE","From the name CLARK"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLAUDE","Lame"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLAUDIA","Feminine form of CLAUDE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLAY","From the name CLAYTON"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLAYLAND","From the name CLAYTON"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLAYTON","Town on Clay Land"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLEA","From the name CLEO"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLEANTHA","In Praise of Flowers"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLEATUS","Illustrious"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLEAVANT","A Steep Bank"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLEAVE","From the name CLEAVON"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLEAVON","From the name CLEAVANT"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLEM","From the name CLEMENT"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLEMENS","From the name CLEMENT"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLEMENT","Gentle, Merciful"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLEMENTINE","Merciful"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLEO","To Praise, Acclaim"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLETA","Dim. of CLEOPATRA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLEVELAND","Land of High Cliffs"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLIFF","From the name CLIFFORD"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLIFFORD","From a Steep Cliff"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLIFTON","From a Town near a Cliff"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLINT","From the name CLINTON"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLINTON","Town on a Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLIO","From the name CLEO"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLITUS","General"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLIVE","Cliff"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLODIA","Form of CLAUDIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLORIS","From the name CHLORIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLOVE","A Nail"));
	namesDictionary.insert(std::pair<std::string,std::string>("CLOVER","Meadow Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("COCHETA","That You Cannot Imagine (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CODY","A Cushion"));
	namesDictionary.insert(std::pair<std::string,std::string>("COLE","From the name NICHOLAS"));
	namesDictionary.insert(std::pair<std::string,std::string>("COLETTE","From the name NICOLE (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("COLIGNY","From COLOGNE (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("COLIN","Child, Also form of NICHOLAS"));
	namesDictionary.insert(std::pair<std::string,std::string>("COLISTA","Most Beautiful"));
	namesDictionary.insert(std::pair<std::string,std::string>("COLLEEN","Girl"));
	namesDictionary.insert(std::pair<std::string,std::string>("COLLICE","Form of COLLEEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("COLLIN","From the name COLIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("COLM","Dove"));
	namesDictionary.insert(std::pair<std::string,std::string>("COLMAN","Little Dove"));
	namesDictionary.insert(std::pair<std::string,std::string>("COLTON","Coal Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("COLUMBIA","A Dove"));
	namesDictionary.insert(std::pair<std::string,std::string>("COMFORT","To Strengthen Greatly"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONAN","From the name CONNOR"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONLAN","Hero"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONLEY","Hero"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONNER","Wise"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONNIE","From the name CONSTANCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONNLEY","Hero"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONNOR","Knowledgeable"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONOR","From the name CONNOR"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONRAD","Bold, Wise Counselor"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONSTANCE","To Be Knowledgable"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONSTANTINE","Firm, constant"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONSUELA","Consolation"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONSUELO","Consolation (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONTENT","Satisfied"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONWAY","Hound of the plain"));
	namesDictionary.insert(std::pair<std::string,std::string>("CONYERS","City in Georgia"));
	namesDictionary.insert(std::pair<std::string,std::string>("COOPER","Barrel Maker"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORA","Heart, Maiden"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORAL","Small Stone"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORALIA","Like Coral (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORALIE","Little Maiden"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORBIN","A Raven"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORBY","Dark as a Raven"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORDELIA","Daughter of the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORENTINE","Little Cora"));
	namesDictionary.insert(std::pair<std::string,std::string>("COREY","Helmet"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORIN","A Maiden"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORINA","Maiden"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORINE","From the name CORINNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORINNA","Maiden"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORINNE","Maiden"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORLISS","From the name CARL or CARLISLE (Br)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORNELIA","From the name CORNELIUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORNELIUS","Horn-Colored"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORNELL","From the name CORNELIUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORT","Bold or Short"));
	namesDictionary.insert(std::pair<std::string,std::string>("CORY","Helmet"));
	namesDictionary.insert(std::pair<std::string,std::string>("COSETTE","Victorious People"));
	namesDictionary.insert(std::pair<std::string,std::string>("COSIMA","Universe, Harmony"));
	namesDictionary.insert(std::pair<std::string,std::string>("COSMO","The Universe"));
	namesDictionary.insert(std::pair<std::string,std::string>("COTY","Small Slope"));
	namesDictionary.insert(std::pair<std::string,std::string>("COURTNEY","From the Court"));
	namesDictionary.insert(std::pair<std::string,std::string>("COY","Quiet, Still"));
	namesDictionary.insert(std::pair<std::string,std::string>("COYE","From the name COY"));
	namesDictionary.insert(std::pair<std::string,std::string>("CRAIG","From the Crag"));
	namesDictionary.insert(std::pair<std::string,std::string>("CREIGHTON","Near the creek"));
	namesDictionary.insert(std::pair<std::string,std::string>("CREOLA","Native to the Land, Creole"));
	namesDictionary.insert(std::pair<std::string,std::string>("CRESCENT","To Grow"));
	namesDictionary.insert(std::pair<std::string,std::string>("CRETE","Dim. of LUCRETIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CREVAN","Fox"));
	namesDictionary.insert(std::pair<std::string,std::string>("CRISPIN","Curly Haired"));
	namesDictionary.insert(std::pair<std::string,std::string>("CRISTY","From the name CHRISTOPHER"));
	namesDictionary.insert(std::pair<std::string,std::string>("CRYSTAL","A Clear, Brilliant Glass"));
	namesDictionary.insert(std::pair<std::string,std::string>("CULLEN","Handsome"));
	namesDictionary.insert(std::pair<std::string,std::string>("CURRY","A Marsh or an herb"));
	namesDictionary.insert(std::pair<std::string,std::string>("CURT","From the name CURTIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("CURTIS","Courteous"));
	namesDictionary.insert(std::pair<std::string,std::string>("CUTHBERT","Brilliant"));
	namesDictionary.insert(std::pair<std::string,std::string>("CUTLER","Knife Maker"));
	namesDictionary.insert(std::pair<std::string,std::string>("CUTTER","Gem Cutter"));
	namesDictionary.insert(std::pair<std::string,std::string>("CY","From the name CYRIL"));
	namesDictionary.insert(std::pair<std::string,std::string>("CYBELE","Mother"));
	namesDictionary.insert(std::pair<std::string,std::string>("CYBIL","Soothsayer"));
	namesDictionary.insert(std::pair<std::string,std::string>("CYBILL","Soothsayer"));
	namesDictionary.insert(std::pair<std::string,std::string>("CYD","A Public Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("CYMA","Flourish (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CYNDI","From the name CYNTHIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("CYNTHIA","The Moon Personified"));
	namesDictionary.insert(std::pair<std::string,std::string>("CYRAH","Enthroned (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("CYRIL","Lordly"));
	namesDictionary.insert(std::pair<std::string,std::string>("CYRUS","Sun"));
	namesDictionary.insert(std::pair<std::string,std::string>("D'LORAH","Harold backwards"));
	namesDictionary.insert(std::pair<std::string,std::string>("DA-XIA","Long Summer (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DACEY","Down Below"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAFYDD","Beloved (Wl)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAGAN","The Earth"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAGMAR","Glorious"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAHLIA","Flower named for botanist A. Dahl"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAISY","Daisy Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAKOTA","Native American Tribal Name"));
	namesDictionary.insert(std::pair<std::string,std::string>("DALE","From the name DALTON"));
	namesDictionary.insert(std::pair<std::string,std::string>("DALIA","A Branch, bough"));
	namesDictionary.insert(std::pair<std::string,std::string>("DALILA","Water Bearer"));
	namesDictionary.insert(std::pair<std::string,std::string>("DALIT","Draw Water (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DALLAS","Wise"));
	namesDictionary.insert(std::pair<std::string,std::string>("DALLIN","From the Dale"));
	namesDictionary.insert(std::pair<std::string,std::string>("DALTON","The Town Near the Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("DALVA","Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAMIAN","Taming (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAMITA","Baby Princess (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAMON","Day (Bt) or Constant (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAN","From the name DANIEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANA","Mother of Gods"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANAE","God is my Judge (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANE","God is my Judge or From Denmark"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANI","My Judge"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANICA","Morning Star"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANIEL","God is my Judge"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANIELA","God is My Judge"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANIELLE","From the name DANIEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANIKA","Morning Star"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANIL","Form of DANIEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANNIELL","God is my Judge"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANNY","From the name DANIEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANTE","Lasting"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANTON","From the name DANTE"));
	namesDictionary.insert(std::pair<std::string,std::string>("DANYL","From the name Daniel"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAPHNE","Laurel Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARA","Compassion"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARAY","Dark"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARBY","Free Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARCY","Dark"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARD","Son of ZEUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARIA","Queenly"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARIAN","From the name DARIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARIN","Precious Present"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARIO","Affluent"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARLA","Dear, Loved One"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARLENE","Little Darling"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARNELL","Hidden Nook"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARRELL","From the name DARRYL"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARREN","Great"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARRIN","From the name DARREN"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARRION","From the name Darren"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARRIUS","He who Upholds the Good"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARRYL","From the name DARYL"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARSHAN","A Hindu God"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARWIN","Dear Friend"));
	namesDictionary.insert(std::pair<std::string,std::string>("DARYL","Dear, Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("DASAN","Ruler (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DASHA","Divine Display (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAVAN","Fem. form of DAVID (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAVE","From the name DAVID"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAVID","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAVIDA","From the name DAVID"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAVIN","Finnish"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAVINA","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAVIS","Son of DAVID"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAVU","The Beginning (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAWN","Dawn"));
	namesDictionary.insert(std::pair<std::string,std::string>("DAYTON","Bright and Sunny Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEA","Goddess"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEAN","Head, Leader"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEANDRA","From the name DIANA"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEANNA","Divine, Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEANNE","Divine"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEBBIE","From the name DEBORAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEBBY","From the name DEBORAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEBORAH","To Speak Kind Words"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEBRA","From the name DEBORAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEIDRA","Sorrowful, Wanderer"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEIONDRE","Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEIRDRA","Sorrowful, Wanderer"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEITER","Army of the People"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEJAH","Before"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEKA","Pleasing"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEL","Short for names beginning with DEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("DELAINE","Descendent of the Challenger"));
	namesDictionary.insert(std::pair<std::string,std::string>("DELANEY","Descendant of the Challenger"));
	namesDictionary.insert(std::pair<std::string,std::string>("DELBERT","Bright Like Daytime"));
	namesDictionary.insert(std::pair<std::string,std::string>("DELFINA","Dolphin"));
	namesDictionary.insert(std::pair<std::string,std::string>("DELIA","From the name CORDELIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("DELILA","Hair or Poor"));
	namesDictionary.insert(std::pair<std::string,std::string>("DELILAH","Hair or Poor"));
	namesDictionary.insert(std::pair<std::string,std::string>("DELIZ","From DEAN and LIZ"));
	namesDictionary.insert(std::pair<std::string,std::string>("DELLA","Of the Nobility"));
	namesDictionary.insert(std::pair<std::string,std::string>("DELORES","From the name DOLORES"));
	namesDictionary.insert(std::pair<std::string,std::string>("DELPHINE","From the Flower (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DELTA","Mouth of a River"));
	namesDictionary.insert(std::pair<std::string,std::string>("DELU","The Only Girl (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEMBE","Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEMETRIA","From Demeter (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEMETRIUS","Goddess of Fertility"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEMI","Half, Small"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEMITRIUS","Lover of the Earth"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEMPSTER","Judge"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEN'E","Beautiful One"));
	namesDictionary.insert(std::pair<std::string,std::string>("DENA","Valley or Vindicated (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DENALI","Great One"));
	namesDictionary.insert(std::pair<std::string,std::string>("DENIS","From the name DENNIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("DENISE","Feminine form of DENNIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("DENNA","Glen, Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("DENNIS","Wild, Frenzied"));
	namesDictionary.insert(std::pair<std::string,std::string>("DENVER","Green Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEO","Godlike"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEON","Divine Quieen"));
	namesDictionary.insert(std::pair<std::string,std::string>("DERBY","From the Village of Danes"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEREK","Famous Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEREX","From the name DEREK"));
	namesDictionary.insert(std::pair<std::string,std::string>("DERICA","Beloved Leader"));
	namesDictionary.insert(std::pair<std::string,std::string>("DERMOT","Envy Free"));
	namesDictionary.insert(std::pair<std::string,std::string>("DERORA","Running Streams (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DERRICK","From the name DEREK"));
	namesDictionary.insert(std::pair<std::string,std::string>("DERRON","Great"));
	namesDictionary.insert(std::pair<std::string,std::string>("DERRY","From DERICA"));
	namesDictionary.insert(std::pair<std::string,std::string>("DES","Short for names beginning with DES"));
	namesDictionary.insert(std::pair<std::string,std::string>("DESANA","Longed For"));
	namesDictionary.insert(std::pair<std::string,std::string>("DESDEMONA","Of the Devil"));
	namesDictionary.insert(std::pair<std::string,std::string>("DESI","From the name DESIDERIO"));
	namesDictionary.insert(std::pair<std::string,std::string>("DESIDERIO","Desire (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DESIREE","Desired"));
	namesDictionary.insert(std::pair<std::string,std::string>("DESMOND","The World"));
	namesDictionary.insert(std::pair<std::string,std::string>("DESSA","Roaming"));
	namesDictionary.insert(std::pair<std::string,std::string>("DESTINY","One's Fate"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEVA","Celestial Spirit"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEVAKI","A God"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEVI","Goddess of Power (Hn)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEVIN","Poet"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEVON","Poet"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEVORAH","From the name DEBORAH (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEVORIT","Form of DEBORAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEWEY","From the name DAVID (Wl)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEWITT","Blond"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEXTER","Dexterous"));
	namesDictionary.insert(std::pair<std::string,std::string>("DEXTRA","Form of DEXTER"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIALLO","Bold (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIANA","Divine"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIANE","From the name DIANA"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIANNE","From the name DIANA"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIANTHA","Divine Flower (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIANTHE","Flower of the Gods"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIATA","Lion (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DICK","Powerful, Rich Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIDIER","Desire"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIDRIKA","Leader of the People (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIEGO","St. James (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DILLAN","Form of DILLON"));
	namesDictionary.insert(std::pair<std::string,std::string>("DILLIAN","An Idol"));
	namesDictionary.insert(std::pair<std::string,std::string>("DILLON","Faithful"));
	namesDictionary.insert(std::pair<std::string,std::string>("DINA","From the name DEAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("DINAH","From the name DEAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("DINO","Little Sword"));
	namesDictionary.insert(std::pair<std::string,std::string>("DION","From the name DIONYSIUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIONNE","From DIANA"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIONYSIUS","God of Wine & Revelry"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIONYSUS","From the name DENNIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIOR","Golden"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIRK","From the name DEREK"));
	namesDictionary.insert(std::pair<std::string,std::string>("DIXIE","From the South in the U.S."));
	namesDictionary.insert(std::pair<std::string,std::string>("DIXON","Richard's Son"));
	namesDictionary.insert(std::pair<std::string,std::string>("DMITRI","From the name DEMITRIUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOANE","Dune Dweller"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOCTOR","The 7th son of the 7th son"));
	namesDictionary.insert(std::pair<std::string,std::string>("DODA","Aunt"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOI","Mountain"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOLLY","From the name DOROTHY or DOLORES"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOLORES","Lady of Sorrows (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOLPH","From the name RANDOLPH"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOM","From the name DOMINICK"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOMANI","Belonging to the Lord"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOMINIC","From the name DOMINICK"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOMINICK","Belonging to God"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOMINIQUE","Of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOMINY","From the name DOMINICK"));
	namesDictionary.insert(std::pair<std::string,std::string>("DON","From the name DONALD"));
	namesDictionary.insert(std::pair<std::string,std::string>("DONAGH","Brown Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("DONAHI","Big Soul"));
	namesDictionary.insert(std::pair<std::string,std::string>("DONAL","World Mighty"));
	namesDictionary.insert(std::pair<std::string,std::string>("DONALD","Brown Stranger"));
	namesDictionary.insert(std::pair<std::string,std::string>("DONAT","Given"));
	namesDictionary.insert(std::pair<std::string,std::string>("DONELLE","Form of DONAL"));
	namesDictionary.insert(std::pair<std::string,std::string>("DONNA","Lady, Woman"));
	namesDictionary.insert(std::pair<std::string,std::string>("DONNEL","A Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("DONNICA","Lady"));
	namesDictionary.insert(std::pair<std::string,std::string>("DONNY","From the name DONALD OR DONNEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("DONOVAN","Dark Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("DORA","Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("DORCAS","A Gazelle"));
	namesDictionary.insert(std::pair<std::string,std::string>("DORE","A Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("DORI","From the name DORE"));
	namesDictionary.insert(std::pair<std::string,std::string>("DORIA","From the name DORIAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("DORIAN","From the name DORE"));
	namesDictionary.insert(std::pair<std::string,std::string>("DORIE","From the name DORIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("DORINDA","Talented (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DORIS","A Shiny Knife"));
	namesDictionary.insert(std::pair<std::string,std::string>("DORIT","From the name DORIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOROTHEA","From the name DOROTHY (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOROTHY","Gift of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("DORSET","A Tribe"));
	namesDictionary.insert(std::pair<std::string,std::string>("DORSEY","From the name DORSET"));
	namesDictionary.insert(std::pair<std::string,std::string>("DORY","From the name DOROTHY"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOT","From the name DOROTHY"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOTTY","From the name DOROTHY"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOUG","From the name DOUGLAS"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOUGAL","From the name DOUGLAS"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOUGLAS","Black Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOUGLASS","From the name DOUGLAS"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOYLE","Dark Foreigner"));
	namesDictionary.insert(std::pair<std::string,std::string>("DOYT","From the name DWIGHT"));
	namesDictionary.insert(std::pair<std::string,std::string>("DRAKE","Dragon"));
	namesDictionary.insert(std::pair<std::string,std::string>("DREAMA","Joyous Music"));
	namesDictionary.insert(std::pair<std::string,std::string>("DREW","Trustworthy"));
	namesDictionary.insert(std::pair<std::string,std::string>("DRU","Form of DREW"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUANE","From the name WAYNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUC","Moral, Good (Vt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUDLEY","From the Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUENA","Protect the Companion (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUFF","Baker (Br)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUGAN","Dark-Colored"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUKA","All (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUKE","Leader"));
	namesDictionary.insert(std::pair<std::string,std::string>("DULCE","From the name DULCEA"));
	namesDictionary.insert(std::pair<std::string,std::string>("DULCEA","Sweet"));
	namesDictionary.insert(std::pair<std::string,std::string>("DULCINA","Rose"));
	namesDictionary.insert(std::pair<std::string,std::string>("DULCINEA","Sweet"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUMI","The Inspirer (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUNCAN","Dark Skinned Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUNIXI","God of Wine"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUNJA","Fruit Quince"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUNN","Brown"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUNNE","From the name DUNN"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUSCHA","Divine Spirit (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUSTIN","Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("DUSTY","From the name DUSTIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("DWAYNE","The Way"));
	namesDictionary.insert(std::pair<std::string,std::string>("DWIGHT","White, fair one"));
	namesDictionary.insert(std::pair<std::string,std::string>("DYAN","From the name DIANE"));
	namesDictionary.insert(std::pair<std::string,std::string>("DYANI","Gazelle (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("DYANNE","From the name DIANE"));
	namesDictionary.insert(std::pair<std::string,std::string>("DYLAN","From the name DILLON"));
	namesDictionary.insert(std::pair<std::string,std::string>("DYLLIS","Sincere"));
	namesDictionary.insert(std::pair<std::string,std::string>("DYRE","Dear Heart"));
	namesDictionary.insert(std::pair<std::string,std::string>("DYSIS","Sunset"));
	namesDictionary.insert(std::pair<std::string,std::string>("EADOIN","Blessed with Many Friends (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("EAMON","Form of EDMUND"));
	namesDictionary.insert(std::pair<std::string,std::string>("EARL","Pledge, Nobleman"));
	namesDictionary.insert(std::pair<std::string,std::string>("EARLENE","Pledge"));
	namesDictionary.insert(std::pair<std::string,std::string>("EARNEST","Form of ERNEST"));
	namesDictionary.insert(std::pair<std::string,std::string>("EASTER","From the Holiday"));
	namesDictionary.insert(std::pair<std::string,std::string>("EAVAN","Fair Form"));
	namesDictionary.insert(std::pair<std::string,std::string>("EBONY","Dark Strength"));
	namesDictionary.insert(std::pair<std::string,std::string>("ECHO","Sound Returned (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ED","From the name EDWARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDALENE","Noble, King"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDALINE","Noble, King"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDANA","Tiny Flame"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDDA","With Clear Goals"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDDIE","From the name EDWARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDDY","From the name EDWARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDELINE","High Born"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDEN","Paradise"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDENA","Form of EDNA (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDGAR","Great Spearman"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDIE","From the name EDITH"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDISON","Son of Ed"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDITA","From the name EDITH (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDITH","Happy"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDMUND","Protector"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDNA","Desired"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDRIC","Prosperous Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDWARD","Happy Guardian"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDWARDO","From the name EDWARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDWIN","Prosperous Friend"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDWINA","Fem. form of EDWIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("EDYTHE","From the name EDITH"));
	namesDictionary.insert(std::pair<std::string,std::string>("EFFIE","Melodious Tlak"));
	namesDictionary.insert(std::pair<std::string,std::string>("EFRAT","Honored, Distinguished"));
	namesDictionary.insert(std::pair<std::string,std::string>("EFREM","From the name EPHRAIM"));
	namesDictionary.insert(std::pair<std::string,std::string>("EGAN","Little Fire"));
	namesDictionary.insert(std::pair<std::string,std::string>("EILEEN","From the name EVELYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("EILIS","Noble, Kind (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("EITAN","Form of ETHAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELA","From ELLA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELAINE","Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELAN","Form of HELEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELANA","A Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELANI","Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELATA","Elavated"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELDA","Old"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELDEN","Older"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELDON","Of Old Age"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELDORA","Golden (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELEANOR","Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELECTRA","The Shining One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELENA","From the name ELEANOR"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELEPHTERIA","Freedom"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELGIN","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELI","From the name ELIJAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELIA","Form of ELIJAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELIAS","From the name ELIJAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELIE","From the name ELEANOR"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELIJAH","The Lord is My God"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELIN","Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELIORA","God Is My Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELIOT","Form of ELIJAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELISE","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELISHA","God is Salvation"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELITA","The Chosen One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELIZA","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELIZABETH","God's Oath"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELJAH","Form of ELIJAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELKAN","Belonging to God"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELKE","Form of ALEXANDRA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELLA","From the name ELEANOR"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELLARD","Nobly Brave"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELLE","Woman, Girl"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELLEMA","Milking a Cow (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELLEN","From the name ELEANOR"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELLERY","Elder Tree Island"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELLIE","From the name ELEANOR"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELLIOT","From the name ELIJAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELLIOTT","From the name ELLIOT"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELLIS","From the name ELIJAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELMO","Protector"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELOISE","From the name LOIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELSA","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELSIE","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELSPETH","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELTON","The Old Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELU","Full of Grace (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELVIN","Friend of Elves"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELVINA","Fem. form of ELVIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELVIRA","Impartial Judgement"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELVIS","All Wise"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELY","Form of ELI"));
	namesDictionary.insert(std::pair<std::string,std::string>("ELYSIA","The Blessed Home"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMANUEL","God is With Us"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMANUELE","God in Humankind"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMELE","From the name AMELIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMENE","Don't Do Harm (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMERA","Industrious"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMERALD","A Bright Green Gem"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMERY","Ruler of Work"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMIL","To Emulate, Copy"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMILIA","From the name EMILIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMILIE","Ambitious, Industrious"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMILIO","Form of EMIL (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMILY","Industrious, Flatterer"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMMA","From the name EMILIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMMANUEL","From the name EMANUEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMMET","Industrious"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMMETT","Truth"));
	namesDictionary.insert(std::pair<std::string,std::string>("EMMLY","Flatterer"));
	namesDictionary.insert(std::pair<std::string,std::string>("ENID","Quiet Woman"));
	namesDictionary.insert(std::pair<std::string,std::string>("ENNIS","Short for DENNIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("ENOS","Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("ENRICO","Form of HENRY (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("EOLANDE","Land Where Dawn Appears"));
	namesDictionary.insert(std::pair<std::string,std::string>("EPHRAIM","Very Fruitful"));
	namesDictionary.insert(std::pair<std::string,std::string>("EPIFANIO","One Who Gives Light (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ER","Guardian"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERASMUS","To Love"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERI","My Guardian"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERIC","Honorable Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERICA","Honorable Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERIK","From the name ERIC"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERIKA","From the name ERICA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERIMENTHA","Collector of Thoughts, Determined Protector"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERIN","Ireland"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERIS","Goddess of Strife"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERLAND","Honorable"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERMA","From the name IRMA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERME","Form of ERMIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERMIN","Universal, Whole"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERNA","Earnest"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERNEST","Earnest"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERNIE","From the name ERNEST"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERNO","Form of ERNEST"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERON","Peace, Enlightened"));
	namesDictionary.insert(std::pair<std::string,std::string>("EROS","Love"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERRIN","From the name ERIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERROL","To Wander"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERV","From the name IRVING"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERVIN","From the name IRVING"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERWIN","From the name IRVING"));
	namesDictionary.insert(std::pair<std::string,std::string>("ERYK","Ever Powerful (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ESBEN","God (Nd)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ESHE","Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("ESMA","Form of ESMERALDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ESMERELDA","Emerald, Jewel"));
	namesDictionary.insert(std::pair<std::string,std::string>("ESTEBAN","Crown of Victory (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ESTELLE","Star (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ESTER","From the name ESTHER (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ESTHER","Star"));
	namesDictionary.insert(std::pair<std::string,std::string>("ESTRALITA","From the name STAR (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ETAN","Form of ETHAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ETANA","Determination (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ETERNITY","Everlasting"));
	namesDictionary.insert(std::pair<std::string,std::string>("ETHAN","Firm, Strong"));
	namesDictionary.insert(std::pair<std::string,std::string>("ETHEL","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ETHELDA","Noble in Counsel"));
	namesDictionary.insert(std::pair<std::string,std::string>("ETTA","Dim. of Names ending in ETTA"));
	namesDictionary.insert(std::pair<std::string,std::string>("EUDORA","Honored Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("EUGENE","Born Lucky"));
	namesDictionary.insert(std::pair<std::string,std::string>("EULALIA","Well Spoken"));
	namesDictionary.insert(std::pair<std::string,std::string>("EULALIE","Sweet Talk"));
	namesDictionary.insert(std::pair<std::string,std::string>("EUPEMIA","Spoken Well Of"));
	namesDictionary.insert(std::pair<std::string,std::string>("EUPHEMIA","Spoken Well Of"));
	namesDictionary.insert(std::pair<std::string,std::string>("EURIDICE","Justice"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVA","From the name EVE"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVAN","Young Warrior Also see JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVANE","Gracious, Bearer of Good News"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVANGELINE","Like an Angel"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVANIA","Tranquil (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVE","Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVELIA","Hazelnut"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVELIEN","Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVELYN","From the name EVE AND LINDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVERETT","Wild Boar, Strong"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVETTE","From the name EVE"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVIE","Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVITA","From the name EVE"));
	namesDictionary.insert(std::pair<std::string,std::string>("EVONNE","From the name EVE AND ANNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("EWA","Life (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("EYAL","Strength (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("EYDIE","Rich Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("EZEKIEL","Strength of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("EZRA","Helper"));
	namesDictionary.insert(std::pair<std::string,std::string>("FABIAN","Bean Grower"));
	namesDictionary.insert(std::pair<std::string,std::string>("FABIENNE","Bean Grower (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FABIOLA","Bean Grower"));
	namesDictionary.insert(std::pair<std::string,std::string>("FABRIZIO","One with Skillful Hands (Lt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FABUNNI","God has Given Me This (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FAIRFAX","Fair Haired"));
	namesDictionary.insert(std::pair<std::string,std::string>("FAIRLY","The Far Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("FAITH","To Trust"));
	namesDictionary.insert(std::pair<std::string,std::string>("FALA","A Crow (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FALE","House"));
	namesDictionary.insert(std::pair<std::string,std::string>("FALLON","Of a Ruling Family"));
	namesDictionary.insert(std::pair<std::string,std::string>("FANCHON","Betrothed, Whimsical"));
	namesDictionary.insert(std::pair<std::string,std::string>("FARICA","Chief of Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("FARIS","Horseman, Knight"));
	namesDictionary.insert(std::pair<std::string,std::string>("FARLEY","Sheep's Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("FARRAH","A Wild Donkey"));
	namesDictionary.insert(std::pair<std::string,std::string>("FARRELL","Of Proven Courage (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FATIMA","Daughter of the Prophet"));
	namesDictionary.insert(std::pair<std::string,std::string>("FAUSTA","Fortunate (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FAUSTINE","Lucky"));
	namesDictionary.insert(std::pair<std::string,std::string>("FAVIAN","Brave Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("FAWN","Young Deer"));
	namesDictionary.insert(std::pair<std::string,std::string>("FAY","Fairy or Elf"));
	namesDictionary.insert(std::pair<std::string,std::string>("FAYE","Fairy or Elf"));
	namesDictionary.insert(std::pair<std::string,std::string>("FAYLINN","Fairy Kingdom"));
	namesDictionary.insert(std::pair<std::string,std::string>("FEDORA","Divine Gift (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FEIVEL","God Assists (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FELETI","Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("FELICIA","Happiness"));
	namesDictionary.insert(std::pair<std::string,std::string>("FELICITY","From the name FELICIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("FELIMY","Ever Good"));
	namesDictionary.insert(std::pair<std::string,std::string>("FELIX","Happy and Prosperous"));
	namesDictionary.insert(std::pair<std::string,std::string>("FELL","A Field"));
	namesDictionary.insert(std::pair<std::string,std::string>("FELTON","Town in a Field"));
	namesDictionary.insert(std::pair<std::string,std::string>("FENNELLA","White Shoulder (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FEORAS","Smooth Rock (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FERDINAND","To be Courageous"));
	namesDictionary.insert(std::pair<std::string,std::string>("FERGAL","Man of Strength"));
	namesDictionary.insert(std::pair<std::string,std::string>("FERGUS","Manly"));
	namesDictionary.insert(std::pair<std::string,std::string>("FERGUSON","Son of FERGUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("FERN","A Fern Plant or See FERDINAND"));
	namesDictionary.insert(std::pair<std::string,std::string>("FERNANDO","Daring, Adventurous"));
	namesDictionary.insert(std::pair<std::string,std::string>("FERRIS","Iron Worker"));
	namesDictionary.insert(std::pair<std::string,std::string>("FERROL","Iron Ring"));
	namesDictionary.insert(std::pair<std::string,std::string>("FIACHRA","Irish Saint (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FICO","A Fig"));
	namesDictionary.insert(std::pair<std::string,std::string>("FIDEL","Faithful"));
	namesDictionary.insert(std::pair<std::string,std::string>("FIDELIA","Faithful (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FIDELIO","Faithful (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FIDELLA","Faithful"));
	namesDictionary.insert(std::pair<std::string,std::string>("FIELD","A Field"));
	namesDictionary.insert(std::pair<std::string,std::string>("FILBERT","Brilliant"));
	namesDictionary.insert(std::pair<std::string,std::string>("FILIA","Friendship (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FILIPINA","Lover of Horses (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FINEEN","Fair Offspring"));
	namesDictionary.insert(std::pair<std::string,std::string>("FINLEY","Fair Haired One"));
	namesDictionary.insert(std::pair<std::string,std::string>("FINN","Fair"));
	namesDictionary.insert(std::pair<std::string,std::string>("FINNA","Fair"));
	namesDictionary.insert(std::pair<std::string,std::string>("FINOLA","From the name FENELLA (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FIONA","White"));
	namesDictionary.insert(std::pair<std::string,std::string>("FIONAN","Fair (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FIONN","From FIONA (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FIONNULA","From the name FIONA"));
	namesDictionary.insert(std::pair<std::string,std::string>("FIORENZA","Flower (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FISK","A Fish"));
	namesDictionary.insert(std::pair<std::string,std::string>("FISSEHA","Happiness, Joy (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLAN","Arrow"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLANNERY","Flat Land"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLAVIAN","Yellow, Blonde"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLETCHER","Arrow Maker"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLEUR","From the name FLORENCE (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLINT","Hard Quartz Rock"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLO","From the name FLORENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLORA","From the name FLORENCE (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLORAMARIA","Flower of Mary"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLORENCE","Prosperous, Flowering"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLORIA","Flowering"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLORIANE","Flowering"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLORIDA","Flourishing"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLORRIE","From the name FLORENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLOWER","From the name FLORENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLOYD","The Hollow"));
	namesDictionary.insert(std::pair<std::string,std::string>("FLYNN","Heir to the Redheaded (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FOLA","Honor (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FONDA","To Melt"));
	namesDictionary.insert(std::pair<std::string,std::string>("FONDEA","To Melt"));
	namesDictionary.insert(std::pair<std::string,std::string>("FORBES","Prosperous"));
	namesDictionary.insert(std::pair<std::string,std::string>("FORD","Road"));
	namesDictionary.insert(std::pair<std::string,std::string>("FORDON","To Destroy"));
	namesDictionary.insert(std::pair<std::string,std::string>("FORREST","Of the Woods, Forest"));
	namesDictionary.insert(std::pair<std::string,std::string>("FORRESTER","Of the Forest"));
	namesDictionary.insert(std::pair<std::string,std::string>("FORSTER","From the name FORRESTER"));
	namesDictionary.insert(std::pair<std::string,std::string>("FORTUNE","Given to Luck (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FOSTER","From the name FORREST"));
	namesDictionary.insert(std::pair<std::string,std::string>("FOUNTAIN","A Spring"));
	namesDictionary.insert(std::pair<std::string,std::string>("FOX","A Fox"));
	namesDictionary.insert(std::pair<std::string,std::string>("FOY","A Journey"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRALEY","Friar"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRAN","From the name FRANCES"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRANCES","(F) A Free Woman"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRANCESCA","From the name FRANCES"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRANCIS","(M) A Free Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRANK","From the name FRANCIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRANKLIN","Free Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRANZ","From the name FRANCIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRASIER","Stawberry"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRAYNE","Ash Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRED","From the name FREDERICK"));
	namesDictionary.insert(std::pair<std::string,std::string>("FREDDY","From the name FREDERICK"));
	namesDictionary.insert(std::pair<std::string,std::string>("FREDERICA","From the name FREDRICA"));
	namesDictionary.insert(std::pair<std::string,std::string>("FREDERICK","Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("FREDRICA","Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("FREED","Form of FREDERICK"));
	namesDictionary.insert(std::pair<std::string,std::string>("FREEMAN","Free Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("FREJA","Norse Goddess of Love"));
	namesDictionary.insert(std::pair<std::string,std::string>("FREMONT","Freedom Mountain"));
	namesDictionary.insert(std::pair<std::string,std::string>("FREYA","Goddess of Love, Fertility and Beauty"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRIEDA","Peace, Joy"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRITZ","Contraction of FREDERICK"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRITZI","From the name FREIDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRONDE","Leafy Branch"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRUMA","One Who Is Religious (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("FRYE","Seed, Offspring"));
	namesDictionary.insert(std::pair<std::string,std::string>("FULBRIGHT","Very Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("FULLER","Occupational Surname"));
	namesDictionary.insert(std::pair<std::string,std::string>("FYNN","Form of FINN"));
	namesDictionary.insert(std::pair<std::string,std::string>("GABBY","From the name GABRIELLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("GABE","From the name GABRIEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("GABI","From the name GABRIELA"));
	namesDictionary.insert(std::pair<std::string,std::string>("GABRIEL","God is my Strength"));
	namesDictionary.insert(std::pair<std::string,std::string>("GABRIELA","From the name GABRIEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("GABRIELLA","From the name GABRIELLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("GABRIELLE","God is my Strength"));
	namesDictionary.insert(std::pair<std::string,std::string>("GABY","From the name GABRIELLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAETAN","From Gaeta (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAETANE","From Gaeta, Italy (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAFNA","Vine"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAGE","A Pledge, A Pawn"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAIL","From the name ABIGAIL"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAILLE","Merry"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAINELL","To Profit"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAIUS","Rejoicer"));
	namesDictionary.insert(std::pair<std::string,std::string>("GALE","A Stranger"));
	namesDictionary.insert(std::pair<std::string,std::string>("GALEN","Calm, tranquil"));
	namesDictionary.insert(std::pair<std::string,std::string>("GALENO","Illuminated Child (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GALI","Fountain (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GALLAGHER","Eager Helper"));
	namesDictionary.insert(std::pair<std::string,std::string>("GALLIA","Wherewithal (gall) (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GALVIN","Sparrow"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAMADA","Glad, Pleased (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAMAL","Camel"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAMALIEL","the Lord's Prize (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GANIT","Defender"));
	namesDictionary.insert(std::pair<std::string,std::string>("GANNON","Fair Complected"));
	namesDictionary.insert(std::pair<std::string,std::string>("GANYA","Garden of the Lord"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARDNER","A Gardener"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARETH","Gentle"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARFIELD","Battlefield"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARREN","Guardian"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARRET","To Watch"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARRETT","To Watch"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARRICK","Leads by the Spear"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARRISON","Troops in Battle"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARRON","Guardian"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARRY","From the name GARRET"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARSON","From the name GARRISON"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARTH","A Field, Garden"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARVEY","Peace (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GARY","Spear Carrier"));
	namesDictionary.insert(std::pair<std::string,std::string>("GATES","Barriers"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAURAV","Pride (Hn)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAUTIER","Mighty Leader"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAVAN","White Hawk"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAVIN","Little Hawk"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAVIVI","Money is Sweet (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAVRIL","Believer in God (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAY","Merry, Happy"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAYE","Merry, Happy"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAYLE","From the name GAIL"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAYLORD","Brave"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAYNELL","From the name GAINELL"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAZALI","Mystic (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAZELLE","Deer"));
	namesDictionary.insert(std::pair<std::string,std::string>("GAZIT","Hewn Stone"));
	namesDictionary.insert(std::pair<std::string,std::string>("GELLA","Joy"));
	namesDictionary.insert(std::pair<std::string,std::string>("GELSEY","Jasmine"));
	namesDictionary.insert(std::pair<std::string,std::string>("GEMMA","Precious Stone"));
	namesDictionary.insert(std::pair<std::string,std::string>("GENE","Born to Nobility"));
	namesDictionary.insert(std::pair<std::string,std::string>("GENET","Eden (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GENEVA","Juniper Berry"));
	namesDictionary.insert(std::pair<std::string,std::string>("GENEVIEVE","Form of GUINIVERE"));
	namesDictionary.insert(std::pair<std::string,std::string>("GENNA","From the name GENEVA"));
	namesDictionary.insert(std::pair<std::string,std::string>("GENT","Gentleman"));
	namesDictionary.insert(std::pair<std::string,std::string>("GEOFF","From the name JEFFREY"));
	namesDictionary.insert(std::pair<std::string,std::string>("GEOFFREY","From the name JEFFREY"));
	namesDictionary.insert(std::pair<std::string,std::string>("GEORDI","Hill Near Meadows"));
	namesDictionary.insert(std::pair<std::string,std::string>("GEORGE","A Tiller of the Soil (Farmer)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GEORGETTE","Fem. form of GEORGE"));
	namesDictionary.insert(std::pair<std::string,std::string>("GEORGIA","Fem. form of GEORGE"));
	namesDictionary.insert(std::pair<std::string,std::string>("GEORGINA","Fem. form of GEORGE"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERALD","Spear Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERALDENE","From the name GERALDINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERALDINE","Hard Spear"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERALDO","From the name GERALD (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERARD","Brave (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERDA","Guarded, Protected"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERI","From the name GERALDINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERIK","Swords and Riches (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERMAIN","A German (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERMAINE","A Srpout"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERODI","Hero or Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERRY","From the name GERALD"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERSHOM","A Stranger There (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GERTRUDE","Adored Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("GHITA","Pearl (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIACOMO","The Supplanter (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIANNA","God's Grace"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIBSON","Son of Gilbert"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIDEON","Great Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIGI","Brilliant, Trustworthy"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIL","Short for names beginning with GIL"));
	namesDictionary.insert(std::pair<std::string,std::string>("GILBERT","Trusted"));
	namesDictionary.insert(std::pair<std::string,std::string>("GILDA","Servant of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("GILES","Shield"));
	namesDictionary.insert(std::pair<std::string,std::string>("GILI","My Joy, Rejoice"));
	namesDictionary.insert(std::pair<std::string,std::string>("GILLESPIE","Servant of the Bishop"));
	namesDictionary.insert(std::pair<std::string,std::string>("GILLIAN","From the name JILL"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIN","From the name VIRGINIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("GINA","From the name REGINA or VIRGINIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("GINACARLO","From JOHN & CHARLES (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GINATA","Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("GINGER","From VIRGINIA or the Ginger Root"));
	namesDictionary.insert(std::pair<std::string,std::string>("GINNY","From the name VIRGINIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("GINO","Short for names ending with GINO"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIOLLA","Servant"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIORGIO","From the name GEORGE"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIOVANNI","God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("GISELA","From the name GISELLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("GISELLE","A Promise"));
	namesDictionary.insert(std::pair<std::string,std::string>("GITA","Good"));
	namesDictionary.insert(std::pair<std::string,std::string>("GITANO","Gypsy"));
	namesDictionary.insert(std::pair<std::string,std::string>("GITEL","From the name GITA"));
	namesDictionary.insert(std::pair<std::string,std::string>("GITTEL","From the name GITA"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIULIO","Youthful (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIUSEPPE","Form of JOSEPH"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIVA","Hill, High Place"));
	namesDictionary.insert(std::pair<std::string,std::string>("GIZA","Hewn Stone"));
	namesDictionary.insert(std::pair<std::string,std::string>("GLADYS","Lame"));
	namesDictionary.insert(std::pair<std::string,std::string>("GLEN","A Secluded, Woody Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("GLENDA","Divine Goodness"));
	namesDictionary.insert(std::pair<std::string,std::string>("GLENN","From the name GLEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("GLENNA","Fem. form of GLEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("GLENNIS","From the Valley or Glen"));
	namesDictionary.insert(std::pair<std::string,std::string>("GLENYS","Beautiful & Holy"));
	namesDictionary.insert(std::pair<std::string,std::string>("GLORA","From the name GLORIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("GLORIA","Glory"));
	namesDictionary.insert(std::pair<std::string,std::string>("GLORY","From the name GLORIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("GLYN","Valley (Wl)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GLYNIS","A Narrow Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("GLYNNIS","From the name GLYNIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("GODANA","Male Child (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GODFREY","God's Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("GOLDA","Made of Gold"));
	namesDictionary.insert(std::pair<std::string,std::string>("GOLDIE","From the name GOLDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("GOLDY","From the name GOLDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("GOMER","To Complete"));
	namesDictionary.insert(std::pair<std::string,std::string>("GORDON","Triangular Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("GORDY","From the name GORDON"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRACE","Grace of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRACIE","From the name GRACE"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRADY","Of High Rank"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRAHAM","The Gray Home"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRAM","A Grain"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRANIA","Grain Goddess"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRANT","Great"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRANVILLE","Large Village (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRATIA","Grace"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRATIANA","Grace"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRAYSON","Son of the Grey-Haired One"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRAZIA","From the name GRACE"));
	namesDictionary.insert(std::pair<std::string,std::string>("GREER","Watchful, Guardian"));
	namesDictionary.insert(std::pair<std::string,std::string>("GREG","From the name GREGORY"));
	namesDictionary.insert(std::pair<std::string,std::string>("GREGG","From the name GREGORY"));
	namesDictionary.insert(std::pair<std::string,std::string>("GREGORY","Vigilante, Watchman"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRETA","From the name MARGARET"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRETCHEN","From the name MARGARET"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRETEL","From the name MARGARET"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRIFFIN","Mythological Beast"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRISELDA","Gray"));
	namesDictionary.insert(std::pair<std::string,std::string>("GRIZELDA","Endless Patience"));
	namesDictionary.insert(std::pair<std::string,std::string>("GROVER","From the Grove"));
	namesDictionary.insert(std::pair<std::string,std::string>("GUADALUPE","River of Black Stones"));
	namesDictionary.insert(std::pair<std::string,std::string>("GUALTIER","From the name WALTER (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GUBAN","Burnt (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GUENEVERE","Fair One"));
	namesDictionary.insert(std::pair<std::string,std::string>("GUIDO","Life (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GUINEVERE","Fair One"));
	namesDictionary.insert(std::pair<std::string,std::string>("GUNNAR","Brave Soldiear"));
	namesDictionary.insert(std::pair<std::string,std::string>("GUNTHER","Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("GUR","Baby Lion (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GURE","Left Handed (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GURI","Hindu Goddess of Plenty"));
	namesDictionary.insert(std::pair<std::string,std::string>("GUSTAV","Lord's Cane"));
	namesDictionary.insert(std::pair<std::string,std::string>("GUY","Guide"));
	namesDictionary.insert(std::pair<std::string,std::string>("GWEN","Form of GWENDOLYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("GWENDOLYN","Goddess of the Moon"));
	namesDictionary.insert(std::pair<std::string,std::string>("GWYN","White, fair (Wl)"));
	namesDictionary.insert(std::pair<std::string,std::string>("GWYNETH","Fortunate, Blessed"));
	namesDictionary.insert(std::pair<std::string,std::string>("GYPSY","A Bohemian Traveler"));
	namesDictionary.insert(std::pair<std::string,std::string>("HABEN","Pride (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HABIB","Beloved One"));
	namesDictionary.insert(std::pair<std::string,std::string>("HADA","Salty Place (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HADAR","Glorious"));
	namesDictionary.insert(std::pair<std::string,std::string>("HADASSAH","Myrtle Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("HADLEY","Heath Near the Wasteland"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAILE","From the name HAYLEY"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAINES","From a Vined Cottage"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAJARI","Flight (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAL","Estate Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("HALEN","Hall (Sw)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HALEY","Hero"));
	namesDictionary.insert(std::pair<std::string,std::string>("HALI","Sea (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HALONA","Fortunate (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAM","Hot"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAMAL","Lamb"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAMILTON","From the Beautiful Mountain"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAMLET","Home"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAMLIN","Lover of Home"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAMPTON","Little Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("HANA","From the name HANNAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("HANK","From the name HENRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("HANLEY","Meadow on the Cliff"));
	namesDictionary.insert(std::pair<std::string,std::string>("HANNA","Goddess of Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("HANNAH","Grace of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("HANNELORE","Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("HANS","From the name JOHN (Nd)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HANZILA","Road, Path (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAO","Good, Perfect (Vt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARACHA","Frog (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARLAN","From the Army"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARLEY","Spacious Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARLOW","Troops on the Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARMON","From the name HERMAN (Bt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARMONY","A Beautiful Blending"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAROLD","Army Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAROUN","Lofty"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARPER","Harp Player"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARRIET","Home Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARRISON","Son of HARRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARRY","From the name HAROLD"));
	namesDictionary.insert(std::pair<std::string,std::string>("HART","Deer or Stag"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARTWELL","From the Well"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARU","Born in the Spring (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARUKI","Shining Brightly"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARUKO","First Born (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARUNI","Mountaineer (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARVA","Fem. form of HARVEY"));
	namesDictionary.insert(std::pair<std::string,std::string>("HARVEY","Army Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("HASAD","Harvest (Tk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HASANA","She Who Arrives First"));
	namesDictionary.insert(std::pair<std::string,std::string>("HASTIN","Elephant"));
	namesDictionary.insert(std::pair<std::string,std::string>("HATEYA","Footprint in the Sand (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAVEN","Safe Place"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAWA","Lazy"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAYDEN","The Rosy Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAYLEY","From the name HALEY"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAYWARD","Guardian of the Hedged Area"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAZEL","The Hazel Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAZELLE","From the name HAZEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("HAZINA","Treasure (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HEATH","Wasteland"));
	namesDictionary.insert(std::pair<std::string,std::string>("HEATHER","A Shrub, Plant"));
	namesDictionary.insert(std::pair<std::string,std::string>("HEAVYNNE","Heaven"));
	namesDictionary.insert(std::pair<std::string,std::string>("HECTOR","Anchor, steadfast"));
	namesDictionary.insert(std::pair<std::string,std::string>("HEDDA","War"));
	namesDictionary.insert(std::pair<std::string,std::string>("HEDIA","Voice of the Lord (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HEDVA","Joy (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HEDWIG","Battling"));
	namesDictionary.insert(std::pair<std::string,std::string>("HEDY","From the name HEDDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("HEDYA","From the name HEDIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("HEIDI","Short form of Adelaide"));
	namesDictionary.insert(std::pair<std::string,std::string>("HEINZ","Household Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("HELAINE","From the name HELEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("HELEN","Torchlight"));
	namesDictionary.insert(std::pair<std::string,std::string>("HELENA","From the name HELEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("HELENE","From the name HELEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("HELGA","Holy, faithful"));
	namesDictionary.insert(std::pair<std::string,std::string>("HELIA","Sun (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HELLER","The Sun"));
	namesDictionary.insert(std::pair<std::string,std::string>("HELOISE","From the name LOIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("HENRI","From the name HENRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("HENRIETTA","Feminine form of HENRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("HENRIK","From the name HENRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("HENRY","Ruler of the Home"));
	namesDictionary.insert(std::pair<std::string,std::string>("HERA","Queen of Heaven"));
	namesDictionary.insert(std::pair<std::string,std::string>("HERB","From the name HERBERT"));
	namesDictionary.insert(std::pair<std::string,std::string>("HERBERT","Bright, excellent army or ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("HERBST","Autumn"));
	namesDictionary.insert(std::pair<std::string,std::string>("HEREMON","Form of Irving (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HERMAN","Person of High Rank"));
	namesDictionary.insert(std::pair<std::string,std::string>("HERSCHEL","Deer"));
	namesDictionary.insert(std::pair<std::string,std::string>("HERTZ","My Strife"));
	namesDictionary.insert(std::pair<std::string,std::string>("HESPER","Evening Star (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HESTER","Star"));
	namesDictionary.insert(std::pair<std::string,std::string>("HESTIA","Goddess of the Hearth"));
	namesDictionary.insert(std::pair<std::string,std::string>("HEWITT","Little Smart One"));
	namesDictionary.insert(std::pair<std::string,std::string>("HIDALGO","Noble One"));
	namesDictionary.insert(std::pair<std::string,std::string>("HIDI","Root (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HIERO","Holy"));
	namesDictionary.insert(std::pair<std::string,std::string>("HIJA","Daughter (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HILA","Praise"));
	namesDictionary.insert(std::pair<std::string,std::string>("HILAIRE","Form of HILARY (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HILARY","Cheerful"));
	namesDictionary.insert(std::pair<std::string,std::string>("HILDA","Protector"));
	namesDictionary.insert(std::pair<std::string,std::string>("HILDE","From the name HILDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("HILLARY","From the name HILARY"));
	namesDictionary.insert(std::pair<std::string,std::string>("HILZARIE","Moon and Stars"));
	namesDictionary.insert(std::pair<std::string,std::string>("HINA","Goddess of the Moon"));
	namesDictionary.insert(std::pair<std::string,std::string>("HINDA","Female Deer"));
	namesDictionary.insert(std::pair<std::string,std::string>("HIROKO","Magnanimous (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HIRSI","Amulet (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOLDEN","Hollow in the Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOLIDAY","Festive Day"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOLLACE","From the name HALEY"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOLLI","From the name HOLLY"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOLLIS","Hero"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOLLY","Plant With Red Berries"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOLLYE","From the name HOLLY"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOLT","Wood"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOMER","Promise"));
	namesDictionary.insert(std::pair<std::string,std::string>("HONEY","Sweet as Honey"));
	namesDictionary.insert(std::pair<std::string,std::string>("HONORA","Honor"));
	namesDictionary.insert(std::pair<std::string,std::string>("HONORIA","Honor"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOPE","Trust, Faith"));
	namesDictionary.insert(std::pair<std::string,std::string>("HORACE","Hour in Time"));
	namesDictionary.insert(std::pair<std::string,std::string>("HORUS","Hawk (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOSEA","Salvation"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOSHI","Star (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOSHIKO","Star (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOUSTON","Town of Houses"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOWARD","Guardian of the Home"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOWE","From the name HOWARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOWELL","Alert One"));
	namesDictionary.insert(std::pair<std::string,std::string>("HOWIE","From the name HOWARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("HUBERT","Shining of Mind"));
	namesDictionary.insert(std::pair<std::string,std::string>("HUE","Flower (Vt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HUELA","Fem. form of HUGH"));
	namesDictionary.insert(std::pair<std::string,std::string>("HUEY","From the name HUGH"));
	namesDictionary.insert(std::pair<std::string,std::string>("HUGH","Bright in Mind and Spirit"));
	namesDictionary.insert(std::pair<std::string,std::string>("HUGO","From the name HUGH"));
	namesDictionary.insert(std::pair<std::string,std::string>("HUMPHREY","Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("HUNTER","One Who Hunts"));
	namesDictionary.insert(std::pair<std::string,std::string>("HUSO","Sadness of the Bride (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("HUSSEIN","Handsome One"));
	namesDictionary.insert(std::pair<std::string,std::string>("HY","From the name HYMAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("HYACINTH","The Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("HYMAN","He who Lives in High Place"));
	namesDictionary.insert(std::pair<std::string,std::string>("HYRONIEMUS","Holy Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("IAN","From the name JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("IANNA","Fem. form of IAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("IANTHE","Violet, Colored Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("IDA","A Fortunate Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("IDALEE","From IDA and LEE"));
	namesDictionary.insert(std::pair<std::string,std::string>("IDALIA","From IDALEE"));
	namesDictionary.insert(std::pair<std::string,std::string>("IDANA","From IDA & ANNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("IDANDE","Protection"));
	namesDictionary.insert(std::pair<std::string,std::string>("IDANIA","Hardworking, Prosperous"));
	namesDictionary.insert(std::pair<std::string,std::string>("IDRA","A Flag"));
	namesDictionary.insert(std::pair<std::string,std::string>("IFE","Wide, Love (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("IGE","Born by Breech (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("IGGI","Only Son (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("IGGY","From the name IGGI"));
	namesDictionary.insert(std::pair<std::string,std::string>("IGNATIUS","Firey One"));
	namesDictionary.insert(std::pair<std::string,std::string>("IKE","From the name DWIGHT or ISAAC"));
	namesDictionary.insert(std::pair<std::string,std::string>("ILANA","Great Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("ILARIO","Cheerful (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ILIT","The Best"));
	namesDictionary.insert(std::pair<std::string,std::string>("ILO","Light, Joyous, Sunshine"));
	namesDictionary.insert(std::pair<std::string,std::string>("ILOM","My Enemies Are Many"));
	namesDictionary.insert(std::pair<std::string,std::string>("ILORI","Special Treasure (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ILSE","Consecrated to God"));
	namesDictionary.insert(std::pair<std::string,std::string>("ILYSSA","Rational"));
	namesDictionary.insert(std::pair<std::string,std::string>("IMOGENE","Image, Likeness"));
	namesDictionary.insert(std::pair<std::string,std::string>("INA","Mother"));
	namesDictionary.insert(std::pair<std::string,std::string>("INARI","Shrimp"));
	namesDictionary.insert(std::pair<std::string,std::string>("INDEPENDENCE","Freedom"));
	namesDictionary.insert(std::pair<std::string,std::string>("INDIA","From India"));
	namesDictionary.insert(std::pair<std::string,std::string>("INDIRA","God of Heaven & Thunderstorms"));
	namesDictionary.insert(std::pair<std::string,std::string>("INDRA","God of Rain & Thunder"));
	namesDictionary.insert(std::pair<std::string,std::string>("INEZ","From the name AGNES"));
	namesDictionary.insert(std::pair<std::string,std::string>("INFINITY","Endless"));
	namesDictionary.insert(std::pair<std::string,std::string>("INGA","From the name INGRID"));
	namesDictionary.insert(std::pair<std::string,std::string>("INGE","Island"));
	namesDictionary.insert(std::pair<std::string,std::string>("INGRID","A Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("INOKE","Devoted (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("IOKINA","God will Develop (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("IOLA","Violet-Colored Dawn"));
	namesDictionary.insert(std::pair<std::string,std::string>("IOLANI","Royal Hawk"));
	namesDictionary.insert(std::pair<std::string,std::string>("ION","Moon Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("IONA","Purple Jewel"));
	namesDictionary.insert(std::pair<std::string,std::string>("IPO","Darling (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("IRA","Watchful, Descendant"));
	namesDictionary.insert(std::pair<std::string,std::string>("IRAM","Shining"));
	namesDictionary.insert(std::pair<std::string,std::string>("IRENE","Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("IRIA","From the name IRIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("IRINA","Form of IRENE (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("IRIS","A Play of Colors"));
	namesDictionary.insert(std::pair<std::string,std::string>("IRISA","Iris"));
	namesDictionary.insert(std::pair<std::string,std::string>("IRMA","God of War"));
	namesDictionary.insert(std::pair<std::string,std::string>("IRVING","Handsome and Fair"));
	namesDictionary.insert(std::pair<std::string,std::string>("IRYL","Play of Colors"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISAAC","He will laugh"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISABEL","Consecrated to God"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISABIS","Something Beautiful (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISADORA","Gift of Isis"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISAIAH","Salvation of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISHA","Woman (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISI","Dim. of Isabel"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISIS","Most Powerful of Greek Goddesses"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISLEEN","Form of EILEEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISMAELA","God Listens (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISMAIL","God will Hear"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISMET","Honor (Tk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISOLDE","Fair One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISRA","Freedom (Tk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISRAEL","Prince of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("ISSAY","Hairy (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ITA","Thirsty"));
	namesDictionary.insert(std::pair<std::string,std::string>("ITALIA","From Italy"));
	namesDictionary.insert(std::pair<std::string,std::string>("IVAN","From the name JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("IVI","From the name IVY"));
	namesDictionary.insert(std::pair<std::string,std::string>("IVIE","From the name IVY"));
	namesDictionary.insert(std::pair<std::string,std::string>("IVO","Form of Yves"));
	namesDictionary.insert(std::pair<std::string,std::string>("IVRIA","From the other side of the River"));
	namesDictionary.insert(std::pair<std::string,std::string>("IVRIT","The Hebrew Language"));
	namesDictionary.insert(std::pair<std::string,std::string>("IVY","A Vine"));
	namesDictionary.insert(std::pair<std::string,std::string>("IZEFIA","I have no child (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("IZELLAH","Little Princess"));
	namesDictionary.insert(std::pair<std::string,std::string>("JA","Magnetic"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAALI","Powerful"));
	namesDictionary.insert(std::pair<std::string,std::string>("JABARI","Fearless"));
	namesDictionary.insert(std::pair<std::string,std::string>("JABILO","Medicine Man (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JABIR","Comforter"));
	namesDictionary.insert(std::pair<std::string,std::string>("JABULANI","Happy"));
	namesDictionary.insert(std::pair<std::string,std::string>("JACE","Beautiful, Attractive"));
	namesDictionary.insert(std::pair<std::string,std::string>("JACINTA","Purple"));
	namesDictionary.insert(std::pair<std::string,std::string>("JACK","From the name JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("JACKIE","From JACQUELINE or JACLYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("JACKSON","Son of JACK"));
	namesDictionary.insert(std::pair<std::string,std::string>("JACLYN","To Protect"));
	namesDictionary.insert(std::pair<std::string,std::string>("JACOB","Held By the Heel"));
	namesDictionary.insert(std::pair<std::string,std::string>("JACOBA","Supplant"));
	namesDictionary.insert(std::pair<std::string,std::string>("JACQUELINE","To Protect"));
	namesDictionary.insert(std::pair<std::string,std::string>("JACQUES","From the name JACOB"));
	namesDictionary.insert(std::pair<std::string,std::string>("JACQUI","From JACQUELINE or JACLYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("JADA","Wise"));
	namesDictionary.insert(std::pair<std::string,std::string>("JADE","Green Gemstone"));
	namesDictionary.insert(std::pair<std::string,std::string>("JADEN","God Has Heard"));
	namesDictionary.insert(std::pair<std::string,std::string>("JADON","God Has Heard"));
	namesDictionary.insert(std::pair<std::string,std::string>("JADYN","God has Heard"));
	namesDictionary.insert(std::pair<std::string,std::string>("JADZIA","Jade"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAEL","Prominent"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAFARU","Brook, Creek (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAIME","From the name JAMES (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAIMIE","I Love"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAKE","From the name JACOB"));
	namesDictionary.insert(std::pair<std::string,std::string>("JALEN","From JAMES and LENORE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JALENE","From JAMES and LENORE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JALIL","Friend (Ar)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAMES","Supplanter"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAMESE","Form of JAMES"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAMIE","From the name JAMES"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAMILA","Beautiful"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAN","From the name JANET"));
	namesDictionary.insert(std::pair<std::string,std::string>("JANA","From the name JANE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JANAE","Form of JANET"));
	namesDictionary.insert(std::pair<std::string,std::string>("JANE","Gracious, merciful"));
	namesDictionary.insert(std::pair<std::string,std::string>("JANEL","God's Gracious Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("JANELLE","God is Gracious, Little Jane"));
	namesDictionary.insert(std::pair<std::string,std::string>("JANET","Pet form of JANE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JANETTE","God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("JANIA","God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("JANICE","From the name JANE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JANINA","Form of JANE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JANINE","From the name JANE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAPHETH","He Expands (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JARA","Slavic form of GERTRUDE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JARED","Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("JARIATH","Tributary Lord"));
	namesDictionary.insert(std::pair<std::string,std::string>("JARRETT","From the name JARED"));
	namesDictionary.insert(std::pair<std::string,std::string>("JARVIS","A Conqueror"));
	namesDictionary.insert(std::pair<std::string,std::string>("JASMINE","A Flower in the Olive Family"));
	namesDictionary.insert(std::pair<std::string,std::string>("JASON","Healer"));
	namesDictionary.insert(std::pair<std::string,std::string>("JASPER","Semi-precious stone"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAVEN","Son of Japheth"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAY","A Bird in the Crow Family"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAYDEN","God has Heard"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAYME","James"));
	namesDictionary.insert(std::pair<std::string,std::string>("JAZLYNN","From Jasmine & Lynn"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEAN","From the name JANE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEANINE","God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEANNE","From the name JANE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEB","From the name JACOB"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEFF","From the name JEFFREY"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEFFERSON","Son of Jeffrey"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEFFREY","Gift of Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEMIMA","A Dove"));
	namesDictionary.insert(std::pair<std::string,std::string>("JENGO","One with Reddish Complexion (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JENIS","Genesis"));
	namesDictionary.insert(std::pair<std::string,std::string>("JENNA","Small Bird"));
	namesDictionary.insert(std::pair<std::string,std::string>("JENNELLE","From JENNY and NELL"));
	namesDictionary.insert(std::pair<std::string,std::string>("JENNESSA","From JENNIFER and VANESSA"));
	namesDictionary.insert(std::pair<std::string,std::string>("JENNIE","White Wave"));
	namesDictionary.insert(std::pair<std::string,std::string>("JENNIFER","White Wave"));
	namesDictionary.insert(std::pair<std::string,std::string>("JENNY","From the name JENNIFER"));
	namesDictionary.insert(std::pair<std::string,std::string>("JENS","God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("JENSEN","God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("JERED","From JARED"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEREMIAH","From the name JEREMY"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEREMY","God Will Uplift"));
	namesDictionary.insert(std::pair<std::string,std::string>("JERI","From the name GERALDINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JERICA","Ruler, Spear Thrower"));
	namesDictionary.insert(std::pair<std::string,std::string>("JERICHO","Moon City"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEROD","Descendant"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEROEN","Holy Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEROLD","From the name GERALD"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEROM","Holy Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEROME","Of Holy Name"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEROMMEKE","Holy Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("JERRELL","From GERALD & DARRELL"));
	namesDictionary.insert(std::pair<std::string,std::string>("JERRICK","FROM JERICHO"));
	namesDictionary.insert(std::pair<std::string,std::string>("JERRY","From the name GERALD"));
	namesDictionary.insert(std::pair<std::string,std::string>("JERUSHA","Inheritance"));
	namesDictionary.insert(std::pair<std::string,std::string>("JESS","From the name JESSICA"));
	namesDictionary.insert(std::pair<std::string,std::string>("JESSE","From the name JESSICA"));
	namesDictionary.insert(std::pair<std::string,std::string>("JESSICA","God's Grace"));
	namesDictionary.insert(std::pair<std::string,std::string>("JESSIE","From the name JESSICA"));
	namesDictionary.insert(std::pair<std::string,std::string>("JESUS","God Will Help"));
	namesDictionary.insert(std::pair<std::string,std::string>("JETHRO","Outstanding, Excellent"));
	namesDictionary.insert(std::pair<std::string,std::string>("JETT","Jet Black Gem"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEWEL","Joy"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEWELL","From the name JEWEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("JEZEBEL","Impure"));
	namesDictionary.insert(std::pair<std::string,std::string>("JIANNA","God's Grace"));
	namesDictionary.insert(std::pair<std::string,std::string>("JIHAN","Of the World"));
	namesDictionary.insert(std::pair<std::string,std::string>("JILL","Girl, Sweetheart"));
	namesDictionary.insert(std::pair<std::string,std::string>("JILLIAN","From the name JILL"));
	namesDictionary.insert(std::pair<std::string,std::string>("JIM","From the name JAMES"));
	namesDictionary.insert(std::pair<std::string,std::string>("JIMMY","From the name JAMES"));
	namesDictionary.insert(std::pair<std::string,std::string>("JIN","Tenderness (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JIRA","Related by Blood (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JIRO","The Second Male (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOAN","From the name JOANNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOANN","From the name JOANNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOANNA","From the name JOANNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOANNE","God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOB","Afflicted One"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOCASTA","Cheerful"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOCELYN","Light Hearted"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOCK","Short form of JACOB or JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("JODI","From JOHANNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("JODIE","Praised"));
	namesDictionary.insert(std::pair<std::string,std::string>("JODY","Short for JOSEPH"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOE","From the name JOSEPH"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOEL","God is Willing"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOELLE","God is Willing"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOEY","From the name JOSEPH"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOHANNA","God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOHN","God Is Merciful"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOHNNY","From the name JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOIE","Joy"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOLA","Pretty"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOLENE","Dim. of JOLIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOLIE","Pleasant, Happy (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JON","From the name JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("JONAH","A Dove"));
	namesDictionary.insert(std::pair<std::string,std::string>("JONATHAN","From the name JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("JONNY","From the name JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("JORDAN","To Flow, Descend"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOREN","Farmer"));
	namesDictionary.insert(std::pair<std::string,std::string>("JORGE","From the name GEORGE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JORN","Vigilant Watchman"));
	namesDictionary.insert(std::pair<std::string,std::string>("JORRYN","The one God loves"));
	namesDictionary.insert(std::pair<std::string,std::string>("JORY","Descending"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOSE","From the name JOSEPH (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOSEF","God will Increase"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOSEPH","God will Increase"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOSEPHINE","Fem. form of JOSEPH"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOSH","From the name JOSHUA"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOSHUA","Jehovah Saves"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOSHWA","God Saves"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOSIAH","Fire of the Lord"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOSIE","God Will Add"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOSUE","Form of JOSHUA (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOVAN","Majestic"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOVIANNE","Majestic"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOVITA","Happy"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOY","Joy"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOYCE","Merry"));
	namesDictionary.insert(std::pair<std::string,std::string>("JOYLYN","Joyful One"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUAN","From the name JOHN (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUANA","God is beneficent (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUANDALYNN","FROM GWENDOLYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUANITA","From the name JOANNE (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUBAL","Ram (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUD","Praised"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUDAH","Praised"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUDD","Praised"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUDE","From the name JUDITH"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUDITH","Praise or Jewish Woman"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUDSON","Son of Jud"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUDY","From the name JUDITH"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUJI","Heap of Love (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JULES","Youthful"));
	namesDictionary.insert(std::pair<std::string,std::string>("JULIA","Soft-haired, youthful"));
	namesDictionary.insert(std::pair<std::string,std::string>("JULIAN","Youthful"));
	namesDictionary.insert(std::pair<std::string,std::string>("JULIANA","Soft-haired"));
	namesDictionary.insert(std::pair<std::string,std::string>("JULIANNA","From the name JULIA & ANNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JULIANNE","From the name JULIA & ANNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("JULIE","From the name JULIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("JULIET","Soft-haired"));
	namesDictionary.insert(std::pair<std::string,std::string>("JULIO","Form of JULIAN (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JULISHA","To Make Known (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JULY","From the name JULIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUMOKE","Everyone Loves Him (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUN","Truth (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUNE","From June"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUNIOR","The Young, Child"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUSTIN","Just or True"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUSTINE","From the name JUSTIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("JUSTISE","Just"));
	namesDictionary.insert(std::pair<std::string,std::string>("KABIBE","Little Lady"));
	namesDictionary.insert(std::pair<std::string,std::string>("KABILI","Possession (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KACELA","Hunter (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KACHINA","Sacred Dancer (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KACY","From initials K.C."));
	namesDictionary.insert(std::pair<std::string,std::string>("KADEEM","Servant (Ar)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAEL","Mighty Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAELIN","Rejoicer, Waterfall Pool"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAETHE","From the name KATHARINE (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAHLILIA","FROM KHALIL"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAI","Ocean (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAIKURA","Ground Squirrel (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAILEY","Laurel, Crown"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAITLYN","Pure"));
	namesDictionary.insert(std::pair<std::string,std::string>("KALEA","Bright, Clear"));
	namesDictionary.insert(std::pair<std::string,std::string>("KALEI","One who Works for the King (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KALEIGH","Laurel, Crown"));
	namesDictionary.insert(std::pair<std::string,std::string>("KALEY","Form of KELLY"));
	namesDictionary.insert(std::pair<std::string,std::string>("KALI","Dark Goddess"));
	namesDictionary.insert(std::pair<std::string,std::string>("KALIN","Form of CALEB"));
	namesDictionary.insert(std::pair<std::string,std::string>("KALINDA","The Sun"));
	namesDictionary.insert(std::pair<std::string,std::string>("KALISTA","Most Beautiful One"));
	namesDictionary.insert(std::pair<std::string,std::string>("KALLI","Energy, Black Goddess"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAMAL","The Perfect One"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAMALI","Spirit Guide, Protector"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAME","Desolate, Arid (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAMELLA","Young Ceremonial Attendant"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAMERYN","Crooked Nose"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAMILIA","Ceremonial Attendant (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KANDE","Firstborn Daughter (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KANE","Honor, Tribute"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARA","Sweet Melody"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARAN","Tyrant (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARE","Enormous"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAREEM","Noble, Exalted"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAREN","From Catharine"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARENA","Pure One"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARI","Pure of Heart"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARIK","Form of CARRICK"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARIM","From the name KAREEM"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARIMAH","Generous One (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARINA","Dear Little One"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARIS","Grace (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARL","From the name CHARLES (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARLA","Strong and Womanly"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARLI","Little and Womanly"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARMA","Fate"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARMINA","Song, Songstress"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARNA","Horn of an Animal"));
	namesDictionary.insert(std::pair<std::string,std::string>("KARSTON","Anointed"));
	namesDictionary.insert(std::pair<std::string,std::string>("KASEKO","Mock, Ridicule (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KASI","From the Holy City"));
	namesDictionary.insert(std::pair<std::string,std::string>("KASIM","Controller of Anger (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KASPAR","From the name CASPER (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KASSIA","Pure (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAT","From the name CATHERINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATA","Worthy (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATE","From the name CATHERINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATELIN","From KATHERINE and LYNN"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATHARINE","Pure, Virginal"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATHERINE","Pure, Virginal"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATHIE","Dim. of KATHERINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATHLEEN","From KATHERINE and LYNN"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATHRYN","Pure"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATHY","Dim. of KATHERINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATIE","From the name (K)CATHERINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATINA","Pure, Unsullied"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATO","Pure, Unsullied"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATRINA","Pure"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATUNGI","Rich"));
	namesDictionary.insert(std::pair<std::string,std::string>("KATY","From the name (K)CATHERINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAULA","Buying (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAWENA","Rosy Reflection in the Sky"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAY","From the name (K)CATHERINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAYA","Wise Child (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAYCEE","Initals K and C"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAYLA","From the name (K)CATHERINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAYLANA","From KAY and LANA"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAYLEE","From KAY and LEE also see CHAELI"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAYO","From Initials K.O."));
	namesDictionary.insert(std::pair<std::string,std::string>("KAYONGA","Ash"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAZ","Dim. of CASSIUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAZI","Work (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KAZU","First (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEAGAN","Son of Eagan, Fiery"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEAIRA","Little Dark One"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEB","Earth"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEDEM","Old, Ancient"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEDMA","Towards the East"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEEFE","From KEEFER"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEEFER","Noble, Gentle"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEEGAN","Son of Eagan, Fiery"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEELAN","Lean (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEELIA","From the name KEELY"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEELY","Beauty"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEENA","Brave"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEENAN","Little and Ancient"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEENE","Wise, Learned"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEEYA","Garden Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEFIRA","A Young Lioness"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEI","Sandy, White (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEIJI","Lead Cautiously (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEIKI","Child (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEIR","Black (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEIRA","Black Haired"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEIRAN","Little and Dark"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEITA","Forest"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEITARO","Blessed (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEITH","The Wind"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELBY","Place by the Flowing Water"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELDA","A Fountain"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELE","Sparrow Hawk (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELII","Chief (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELILA","Drinking Cup"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELLAN","Powerful"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELLEE","From the name KELLY"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELLEN","Powerful"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELLEY","Warrior or Warriorwoman"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELLI","From the name KELLY"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELLSIE","Island of the Ships"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELLY","Of the Kelts/Celts"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELSEY","Island of the Ships"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELTON","A Town of Celts"));
	namesDictionary.insert(std::pair<std::string,std::string>("KELVIN","Friend of Ships"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEN","From the name KENNETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENDA","Nine or December (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENDALL","Valley of the River Kent"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENDI","The Loved One (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENDIS","From the name KENNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENDRA","Water Baby, Magical"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENISHA","Gorgeous WOman"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENLEY","Royal Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENNA","Child, Kin"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENNAN","Form of KEENE"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENNEDI","Helmeted Chief"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENNEDY","Royal"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENNETH","Handsome"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENNY","From the name KENNETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENT","Bright White"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENTON","From the town of Kent"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENYI","Male Born after 3 Girls (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENYON","Blond, White-haired"));
	namesDictionary.insert(std::pair<std::string,std::string>("KENZIE","Light Skinned"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEOLA","the Life (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEON","Derivitive of Leon (Af-Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KERDA","Loyal"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEREN","Name (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KERMIT","Free Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("KERN","Dark Haired Child (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KERR","A Marshland"));
	namesDictionary.insert(std::pair<std::string,std::string>("KERRI","Dark and Mysterious"));
	namesDictionary.insert(std::pair<std::string,std::string>("KERRY","Dark Princess"));
	namesDictionary.insert(std::pair<std::string,std::string>("KESIN","Beggar"));
	namesDictionary.insert(std::pair<std::string,std::string>("KETARA","A Crown"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEVIN","Handsome, Beautiful"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEVINA","From KEVIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("KEYANNA","Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("KHALIDA","Immortal, Everlasting"));
	namesDictionary.insert(std::pair<std::string,std::string>("KHALIL","Friend"));
	namesDictionary.insert(std::pair<std::string,std::string>("KHALIPHA","Successor"));
	namesDictionary.insert(std::pair<std::string,std::string>("KHIRY","benevolent"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIA","Hill (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIAH","God is Strength"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIANA","From QUIANA"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIANDRA","From KENDRA"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIBIBE","Little Lady"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIDEN","Female Born after 3 Boys (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIERAN","Little Dark One"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIERSTEN","Annointed"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIHO","Fog (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIKI","Short for names beginning with K"));
	namesDictionary.insert(std::pair<std::string,std::string>("KILEY","Good Looking"));
	namesDictionary.insert(std::pair<std::string,std::string>("KILLIAN","Conflict (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIM","From the name KIMBERLY"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIMBALL","Leader of the Warriors"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIMBERLY","A Diamond-filled Rock"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIMI","She Who is Without Equal (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIMMY","From the name KIMBERLY"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIN","Golden"));
	namesDictionary.insert(std::pair<std::string,std::string>("KINA","China (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KINFE","Wing (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KING","Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("KINGSTON","From the King's town"));
	namesDictionary.insert(std::pair<std::string,std::string>("KINIPELA","Wave (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIOKO","Meets World with Happiness (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIONE","Someone Who Comes from Nowhere (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIORA","Love"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIPLING","Cured Salmon"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIPP","From the name KIPLING"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIRA","Sun"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIRABO","Gift from God (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIRAL","Supreme Chief (Tk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIRBY","A Church"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIRI","From the name KIRA"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIRIL","Lordly One (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIRK","From the Church"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIROS","The King (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIRRA","Leaf"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIRSI","Amaranth Blossoms"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIRSTEN","From the name KRISTEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("KISHA","Kitten"));
	namesDictionary.insert(std::pair<std::string,std::string>("KISHI","Night (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KITA","Translation of Kitty (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KITOKO","Beautiful (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KITRA","A Crown"));
	namesDictionary.insert(std::pair<std::string,std::string>("KITTY","Little Cat, or See CATHERINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIYOSHI","Quiet Child (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KIZZY","Cinnamon (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KLAUS","Leader in Victory (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KLITOS","General"));
	namesDictionary.insert(std::pair<std::string,std::string>("KNUT","Knot (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KODA","Last Born, Mother's Pet (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KOEN","Honest Counselor"));
	namesDictionary.insert(std::pair<std::string,std::string>("KOKO","Stork (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KOLTON","Coal Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("KONANE","Lunar Glow (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KOREN","Maiden (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KORENE","Maiden"));
	namesDictionary.insert(std::pair<std::string,std::string>("KORI","Girl (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KORY","Hollow"));
	namesDictionary.insert(std::pair<std::string,std::string>("KOSTYA","Faithful (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KOTO","Harp (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KOURTNEY","From the Court"));
	namesDictionary.insert(std::pair<std::string,std::string>("KOZUE","Tree Branches (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KRIS","From the name KRISTEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("KRISTA","From the name KRISTEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("KRISTEN","Christ-bearer"));
	namesDictionary.insert(std::pair<std::string,std::string>("KRISTIN","From the name KRISTEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("KRISTINA","From the name KRISTEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("KRISTINE","Christ-bearer"));
	namesDictionary.insert(std::pair<std::string,std::string>("KRISTOPHER","Christbearer"));
	namesDictionary.insert(std::pair<std::string,std::string>("KRYSTYN","Christian, Annointed"));
	namesDictionary.insert(std::pair<std::string,std::string>("KUMA","Bear (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KUMI","Braid (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KUMIKO","Braid (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KURA","Treasure House (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KURI","Chestnut (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KURON","Thanks (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KURT","From the name CURTIS OR CONRAD"));
	namesDictionary.insert(std::pair<std::string,std::string>("KWANITA","God is Gracious (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KYLA","From the name Lovely"));
	namesDictionary.insert(std::pair<std::string,std::string>("KYLE","Wood (Ir) or Handsome (Bt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KYLEIGH","Fem. form of KYLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("KYLENE","From the name Kyle"));
	namesDictionary.insert(std::pair<std::string,std::string>("KYLER","Form of TYLER"));
	namesDictionary.insert(std::pair<std::string,std::string>("KYLIA","Form of KYLA"));
	namesDictionary.insert(std::pair<std::string,std::string>("KYLIE","Fem. form of KYLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("KYNA","Family, Kin"));
	namesDictionary.insert(std::pair<std::string,std::string>("KYNAN","Chief (Wl)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KYNTHIA","Moon (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("KYRA","Ladylike"));
	namesDictionary.insert(std::pair<std::string,std::string>("KYRENE","Lord, God"));
	namesDictionary.insert(std::pair<std::string,std::string>("KYRIA","Ladylike"));
	namesDictionary.insert(std::pair<std::string,std::string>("L'PREE","The Prize"));
	namesDictionary.insert(std::pair<std::string,std::string>("LA DON","The Lady"));
	namesDictionary.insert(std::pair<std::string,std::string>("LACEY","From the name LARISSA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LACHLAN","Lake or Fjord"));
	namesDictionary.insert(std::pair<std::string,std::string>("LACY","From the name LARISSA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LADDIE","Attendant"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAEL","of God (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAHELA","Form of RACHEL (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAINA","Route or Path"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAIRD","Head of Household (Scot.)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAJUAN","From the name JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAJUANA","From the name JOHN (Af-Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAKIN","Sim. Lakia, Found Treasure"));
	namesDictionary.insert(std::pair<std::string,std::string>("LALE","To Sing a Lullabye, Soothe"));
	namesDictionary.insert(std::pair<std::string,std::string>("LALEH","From LEILA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LALI","Form of Eulalie"));
	namesDictionary.insert(std::pair<std::string,std::string>("LALITA","She Who Plays"));
	namesDictionary.insert(std::pair<std::string,std::string>("LALO","From the name LALE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAMAR","Of The Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAMONT","The Mountain"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAN","Flower Name (Vt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANA","A distant Place"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANAI","Terrace, Veranda"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANAYA","Lime Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANCE","Spear"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANCELOT","Land"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANDEN","Grassy Plain"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANDERS","From the name LANDRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANDIS","From the name LANDRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANDON","Grassy Plain"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANDRY","Rough Land"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANE","To Move On"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANELLE","Female Version of Lane, an English Place Name"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANG","Tall One"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANGER","From the name LANG"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANGSTON","A Long, Narrow Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANI","Sky"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANKSTON","From LANGSTON"));
	namesDictionary.insert(std::pair<std::string,std::string>("LANZA","Attendant"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAQUETA","The Quiet One"));
	namesDictionary.insert(std::pair<std::string,std::string>("LARA","From the name LAURA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LARAINE","Form of LORRAINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAREINA","The Queen (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LARISSA","Cheerful"));
	namesDictionary.insert(std::pair<std::string,std::string>("LARK","Songbird"));
	namesDictionary.insert(std::pair<std::string,std::string>("LARRY","From the name LAWRENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LARS","From the name LAWRENCE (Nd)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LARUE","The Street"));
	namesDictionary.insert(std::pair<std::string,std::string>("LARVALL","The Well in the Lowlands"));
	namesDictionary.insert(std::pair<std::string,std::string>("LASCA","Army or Soldier"));
	namesDictionary.insert(std::pair<std::string,std::string>("LASSIE","Young Girl, Maiden"));
	namesDictionary.insert(std::pair<std::string,std::string>("LASZLO","Form of LAZARUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("LATANYA","Daughter of TANYA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LATHAM","A Division"));
	namesDictionary.insert(std::pair<std::string,std::string>("LATHROP","Barn"));
	namesDictionary.insert(std::pair<std::string,std::string>("LATIKA","Hindu God"));
	namesDictionary.insert(std::pair<std::string,std::string>("LATIMER","Near the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("LATISHA","From LETICIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAURA","Laurel-Crowned"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAUREN","From the name LAURA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAURENCE","From the name LAWRENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAURIE","From the name LAURA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAVAL","Lord"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAVE","Lord"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAVERNE","Like the Spring"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAVEY","From the name LEVI"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAVI","Lion"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAVONN","Wood"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAVONNE","Wood"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAWANDA","Form of JOAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAWRENCE","Laurel-Crowned"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAWRENCIA","From the name LAWRENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAYLA","Dark Beauty"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAYNE","From the name LAYNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAZAR","From the name LAZARUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("LAZARUS","God Has Helped"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEA","Fatigued"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEAH","Female Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEAL","Faithful"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEALA","Loyal"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEANDER","Brave Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEANDER"," Lion Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEANE","Graceful Willow"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEANNA","Graceful Willow"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEANNE","Canoe Maker"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEAVITT","Baker"));
	namesDictionary.insert(std::pair<std::string,std::string>("LECEA","From ALICIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEDA","Spartan Queen"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEDELL","Spartan Queen"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEE","Field Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEENA","Illumination"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEETO","Journey (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEHANA","One Who Refuses (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEIA","Weary"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEIF","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEIGH","From the name LEE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEILA","Dark Beauty"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEILANI","Heavenly Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEIMOMI","Wreath of Pearls"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEL","Taker"));
	namesDictionary.insert(std::pair<std::string,std::string>("LELA","Lofty (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LELAND","Meadowland"));
	namesDictionary.insert(std::pair<std::string,std::string>("LELIA","Fair Speech (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEMUEL","Devoted to God (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LENA","Temptress, Illustrious"));
	namesDictionary.insert(std::pair<std::string,std::string>("LENCHO","Lion (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LENKA","Illumination (Cz)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LENORA","From the name LEONA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LENORE","From the name LEONA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LENTE","Spring"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEO","A Lion (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEOLA","From the name LEONA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEOMA","From the name LEONA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEON","From the name LEONARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEONA","Like A Lion"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEONARD","Like A Lion"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEONE","Lion (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEONIE","Lioness"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEONORA","From the name LEONA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEONZAL","Lion's House"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEOPOLD","Daring Ones (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEORA","Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("LERATO","Love"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEROY","The King"));
	namesDictionary.insert(std::pair<std::string,std::string>("LES","From the name LESTER"));
	namesDictionary.insert(std::pair<std::string,std::string>("LESA","Consecreted to God"));
	namesDictionary.insert(std::pair<std::string,std::string>("LESLEY","From the name LESLIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LESLIE","Meadowlands"));
	namesDictionary.insert(std::pair<std::string,std::string>("LESTER","From Leicester"));
	namesDictionary.insert(std::pair<std::string,std::string>("LETITIA","Joy, Gladness"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEV","Heart (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEVANA","Uplift"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEVERETT","Young Hare (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEVI","Joined To"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEVIA","Combine Forces (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEVON","Spice"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEWA","Beautiful (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEWIS","From the name LOUIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEX","A Word"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEXI","From the name ALEXANDER"));
	namesDictionary.insert(std::pair<std::string,std::string>("LEXINE","Defender of Mankind"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIA","From the name LEAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIAM","Determined Guardian"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIAN","Graceful as a Willow (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIANA","To Wrap or Bind"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIBBA","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIBBY","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIBERTY","Freedom"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIDA","Beloved by All"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIDIA","Province in Asia (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIEN","Lotus Flower (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIKO","Bud (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LILA","From the name LILAC"));
	namesDictionary.insert(std::pair<std::string,std::string>("LILAC","Bluish"));
	namesDictionary.insert(std::pair<std::string,std::string>("LILAH","From the name LILAC"));
	namesDictionary.insert(std::pair<std::string,std::string>("LILIA","From the name LILAC (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LILIHA","Angry Disregard (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LILITH","Of the Night"));
	namesDictionary.insert(std::pair<std::string,std::string>("LILLI","From the name LILLIAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("LILLIAN","A Lily, or God's Oath"));
	namesDictionary.insert(std::pair<std::string,std::string>("LILO","Generous One (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LILY","From the name LILLIAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIN","From the name LINDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LINA","Light (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LINCOLN","Lithe"));
	namesDictionary.insert(std::pair<std::string,std::string>("LINDA","Pretty One"));
	namesDictionary.insert(std::pair<std::string,std::string>("LINDLEY","Pasture"));
	namesDictionary.insert(std::pair<std::string,std::string>("LINDSAY","From the name LINDSEY"));
	namesDictionary.insert(std::pair<std::string,std::string>("LINDSEY","Linden Trees Near the Water"));
	namesDictionary.insert(std::pair<std::string,std::string>("LINDY","From the name LINDSEY OR LINDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LINUS","Flaxen Colored"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIONA","Lioness"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIONEL","From the name LEON"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIRIT","Musical Grace (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LISA","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("LISBET","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("LISETTE","Consecrated to God"));
	namesDictionary.insert(std::pair<std::string,std::string>("LISIMBA","Lion"));
	namesDictionary.insert(std::pair<std::string,std::string>("LISLE","Of the Island"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIV","From the name OLIVIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIVANA","Lunar"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIVI","From the name OLIVIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIVIA","From the name OLIVIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIVVY","From the name OLIVER"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIXUE","Beautiful Snow (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIZ","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIZA","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIZBETH","From the name ELIZABETH"));
	namesDictionary.insert(std::pair<std::string,std::string>("LIZINA","Suave"));
	namesDictionary.insert(std::pair<std::string,std::string>("LLEWELLYN","Like a Lion"));
	namesDictionary.insert(std::pair<std::string,std::string>("LLOYD","Grey"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOBA","To Talk (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOBO","Wolf (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOCKE","Forest"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOGAN","Small Cove"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOIS","Feminine form of LOUIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOLA","Form of CARLOTA (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOLONYO","Love is Beautiful (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOLOVIVI","Love is Sweet (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LONA","Lioness"));
	namesDictionary.insert(std::pair<std::string,std::string>("LONATO","Flint Stone (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LONDON","Fortress of the Moon"));
	namesDictionary.insert(std::pair<std::string,std::string>("LONNA","A Distant Place"));
	namesDictionary.insert(std::pair<std::string,std::string>("LONNIE","Handsome One"));
	namesDictionary.insert(std::pair<std::string,std::string>("LONNIT","Imposter"));
	namesDictionary.insert(std::pair<std::string,std::string>("LORA","From the name LAURA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LORELEI","Melody"));
	namesDictionary.insert(std::pair<std::string,std::string>("LORENA","Crowned with Laurel"));
	namesDictionary.insert(std::pair<std::string,std::string>("LORENZO","From the name LAWRENCE (It & Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LORETTA","Pet form of LAURA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LORI","From the name LAURA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LORIMER","Harness Maker (Lt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LORIN","Crowned with Laurel"));
	namesDictionary.insert(std::pair<std::string,std::string>("LORING","Famous in War (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LORNA","Alone, Solitude"));
	namesDictionary.insert(std::pair<std::string,std::string>("LORNE","From the name LAWRENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LORRAINE","From the name LAURA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LORRETTA","Dim. of LORETTA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOTTA","From the name CHARLOTTE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOTTE","From the name CHARLOTTE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOTUS","The Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOU","From the name LOUIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOUGHLIN","Scandinavian"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOUIS","Famous in Battle"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOUISA","Feminine form of LOUIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOUISE","From the name LOUISA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOURA","From LAURA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOURANA","From LOURA and ANA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOURDES","Section of France where Virgin Mary was seen"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOURINE","Pet Form of LOURA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOVE","Love"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOVEY","Loved One"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOVIE","Loved One"));
	namesDictionary.insert(std::pair<std::string,std::string>("LOWELL","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUAM","Peaceful, Calm (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUANA","Female Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUCAS","From the name LUCUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUCE","From the name LUCUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUCIA","Light (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUCIAN","Man of Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUCIE","From the name LUCILLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUCILLE","Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUCINDA","Beautiful Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUCIO","Bringer of Light (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUCIUS","From the name LUCUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUCRETIA","Full of Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUCUS","Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUCY","From the name LUCILLE OR LUCUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUDLOW","Mountain of the Chief"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUDWIG","Famous Victories (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUIGI","Warrior (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUIS","From the name LOUIS (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUKE","From the name LUCUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("LULA","From the name LOUISE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LULLI","From the name LALE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LULU","From the name LOUISA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUNA","The Moon"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUNDY","By the Island (Nd)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUNETTE","Form of LUNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUPE","From the name GUADALUPE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUPITA","From the name GUADALUPE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUTHANDO","Love"));
	namesDictionary.insert(std::pair<std::string,std::string>("LUTHER","Warring Ones"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYDE","Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYDIA","A Maiden from Lydia, Greece"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYLE","From the name LISLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYN","From the name LINDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNCH","Sailor (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNDA","From the name LINDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNDE","From the name LYNDON"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNDEL","Pretty"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNDON","Flexible"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNDSEY","Camp Near Stream"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNELLE","Pretty"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNETTE","From the name LINDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNLEY","Meadow near the Brook"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNN","From the name LINDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNNA","Waterfall"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNNE","From the name LINDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNNEA","Pretty"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYNTON","Town near the Brook"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYRE","A fork from river or glen"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYRIS","A Harp or Lyre"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYSA","From the name LISA"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYSANDER","He who will Free Us (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("LYSANDRA","Liberator"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAARTEN","Don't Deceive"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAAT","Truth, Law (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MABEL","My Beautiful One"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAC","Son Of .."));
	namesDictionary.insert(std::pair<std::string,std::string>("MACAYLE","Form of MICHAELA (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MACHA","Plain"));
	namesDictionary.insert(std::pair<std::string,std::string>("MACKENZIE","Son of Kenneth"));
	namesDictionary.insert(std::pair<std::string,std::string>("MACY","Enduring"));
	namesDictionary.insert(std::pair<std::string,std::string>("MADDOX","Son of the Patron"));
	namesDictionary.insert(std::pair<std::string,std::string>("MADELEINE","From the name MADELINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MADELIA","From the name MADELINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MADELINE","High Tower"));
	namesDictionary.insert(std::pair<std::string,std::string>("MADGE","From the name MARGARET"));
	namesDictionary.insert(std::pair<std::string,std::string>("MADISON","Son of Matthew"));
	namesDictionary.insert(std::pair<std::string,std::string>("MADONNA","Mother"));
	namesDictionary.insert(std::pair<std::string,std::string>("MADRA","From the name MADONNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MADRONA","From the name MADONNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAE","From the name MARY"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAEKO","Honest Child"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAEMI","Honest Child (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAERON","Bitter (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAERYN","Bitter"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAEVE","Goddess"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAGAN","Competant"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAGDA","High Tower"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAGDALENA","Woman from Magdala"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAGDALENE","From the name MADELINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAGEE","Son of Hugh"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAGGIE","From the name MARGARET"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAGNAR","Strength Warrior (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAGNOLIA","From the flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAHA","Beautiful Eyes (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAHALA","From the name MAHALIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAHALIA","Smart, Intelligent"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAHARI","Forgiver (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAHDI","The Expected One (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAIA","From MAYA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAIK","Now (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAILLE","Form of MOLLY (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAIMUN","Lucky"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAIRE","Irish form of Mary"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAIRI","Gaelic for Mary, Sea of Bitterness"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAISIE","Pearl"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAJ","A Pearl"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAJOR","Better (Lt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAKAILA","Who is Like God"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAKALE","From the name McHALE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAKALO","Wondering (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAKANI","The Wind (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAKENNA","Happiness (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAKYA","One who Hunts Eagles (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALACHI","My Messenger"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALAIKA","Angel (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALANA","Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALAYA","Free"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALCOLM","A Dove"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALEAH","Unique Little Girl"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALEAH","Beautiful Young Woman"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALIA","Bitter (Nat.Am) or Calm Waters (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALINA","Tower, Soothing"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALISSA","Honey Bee"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALKA","Queen"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALLORY","Ill-fated Luck (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALO","Winner (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALOMO","Don't Go Anymore (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALONE","Servant of St. John"));
	namesDictionary.insert(std::pair<std::string,std::string>("MALORY","From the name MALLORY"));
	namesDictionary.insert(std::pair<std::string,std::string>("MANA","Psychic Gifts"));
	namesDictionary.insert(std::pair<std::string,std::string>("MANDEL","Almond (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MANDELL","Almond (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MANDY","From the name AMANDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MANICA","From the Nica (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MANNING","Son of Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("MANON","Heroine in French Novel (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MANSA","King (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MANUEL","God In Us (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MANUELA","God is With Us"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARA","Bitter or Sorrowful"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARC","Warlike"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARCEL","From the name MARC"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARCELL","Warlike"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARCELLA","From the name MARCIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARCELLO","Brave"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARCELLUS","Young Fighter"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARCIA","Brave"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARCIE","From the name MARCIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARCO","From the name MARC (Sp & It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARCUS","From the name MARC"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARCY","From the name MARCIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARDELL","Meadow Near the Lake"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARDI","Form of MARTHA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARE","The Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAREE","From MARY or MARIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAREK","Warlike (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAREN","Contraction of MARILYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARENDA","Form of MIRANDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARGARET","A Pearl"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARGARITA","From the name MARGARET"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARGE","From the name MARGARET"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARGO","Pearl (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARGOT","From the name MARGARET"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARGUERITE","From the name MARGARET"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARI","Wished-For Child"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIA","From the name MARY"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIAH","Bitter, God is my Teacher"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIAM","Wished-For Child"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIANNE","From the name MARY AND ANNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIATU","Pure (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIBEL","From MARY and BELLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIBETH","Bitter Sea, House of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIE","From the name MARY"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIEL","Pet form of MARY"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIETTA","From the name MARY"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIGOLD","From the flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIJKE","Bitter"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIKA","Bitter"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARILU","From the name MARY and LUCILLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARILYN","Descendants of MARY"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIN","Of the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARINA","From the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARINEL","Of the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIO","Sailor"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARION","From the name MARY AND ANNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIS","Of the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARISA","Of the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARISELA","From the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARISOL","Sunny Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARISSA","Of the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARIUS","Sailor, Roman Clan Name"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARJEAN","Coral, Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARJORIE","From the name MARGARET"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARK","From the name MARC"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARKA","Steady Rain (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARLAS","High Tower"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARLENE","From the name MARILYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARLI","From the name MARILYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARLIE","From the name MARILYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARLIN","From the name MARILYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARLO","From the name MARILYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARLON","Wild Falcon (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARLOW","Slope by the Pond"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARLY","From the name MARILYN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARNIE","From the name MARINA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARNIN","Joy Giver (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARNINA","Rejoice"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARO","Myself (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARRIM","Chinese Tribe (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARSHA","Form of MARCIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARSHALL","Horse Keeper"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARTA","From the name MARTHA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARTHA","Lady"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARTIN","Warlike"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARTINA","Who Loves Everyone, Warlike"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARTY","From the name MARTIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARV","From the name MARVIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARVA","Sage (the plant)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARVEL","To Wonder, Admire"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARVELA","Marvelous"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARVENE","From the name MARVIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARVIN","Friend of the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MARY","From the name MIRIAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("MASADA","Foundation, Support"));
	namesDictionary.insert(std::pair<std::string,std::string>("MASHAKA","Trouble (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MASON","Stone worker"));
	namesDictionary.insert(std::pair<std::string,std::string>("MASSIMO","Greatest"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATANA","Blessing (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATEO","Devoted to God (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATHILDA","Might, Power"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATHILDE","From the name MATILDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATIA","From MATILDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATIAS","Var. of Matthias"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATILDA","Might, Power"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATILDE","Strong in War (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATRIKA","Mother"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATSU","Pine (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATT","From the name MATTHEW"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATTEO","From MATTHEW (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATTHEW","Gift of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATTHIAS","From the name MATTHEW"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATTOX","Sweet"));
	namesDictionary.insert(std::pair<std::string,std::string>("MATTY","From the name MATILDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAUDE","From the name MADELINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAULI","Black (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAURA","Dark"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAUREEN","Dark"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAURICE","Moor, Dark Skinned"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAURILIO","Moor"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAURIZIO","Moor, Dark Haired"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAURO","Of Brown Skin (Lt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAUVE","Purplish Color"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAVERICK","Wildly Independent (Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAVIS","The Thrush"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAX","From the name MAXIMILIAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAXIM","From the name MAXIMILIAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAXIMA","Miracle Worker"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAXIME","From the name MAXIMILIAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAXIMILIAN","Great"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAXIMOS","Greatest (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAXINE","Greatest"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAXWELL","Great Spring"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAY","Contraction of MARY"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAYA","Messenger of the Gods"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAYAN","Of the Earth"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAYDA","Maiden"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAYES","A Field"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAYLIN","Great Waterfall"));
	namesDictionary.insert(std::pair<std::string,std::string>("MAYNARD","Powerful, brave"));
	namesDictionary.insert(std::pair<std::string,std::string>("MCKALE","From the name MICHAEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("MCKAYLA","From MICHAELA (Who is Like God?)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MCKENNA","Son of Ken or Kenna"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEA","Mine"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEAD","From the Pasture"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEARA","Merry"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEDA","Prophet (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEDARD","A Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEDEA","Goddess"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEDEA","Sorceress (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEG","Pearl (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEGAN","Pearl (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEGED","Goodness"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEHALIA","From the name MAHALIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEI","May (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEIR","One Who Shines"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEKELLE","Who is like God?"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEL","From the name MELVIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELANIA","Dark Skinned (Lt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELANIE","Dark-Skinned"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELANTHA","Form of MELANIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELBA","Melvin"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELCHIOR","A King"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELE","Hawaiian form of MARY"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELI","Bitter (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELIA","Flatterer, Industrious"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELINA","Bright Yellow (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELINDA","From the name MELANIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELIORA","Better"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELISANDE","Strength (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELISSA","A Honey Bee"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELITA","Form of MELISSA (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELODY","Song-like"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELORA","Improve"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELOSA","Sweetlike (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELVA","From the name MELVIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELVIN","Mill Worker"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELVINA","Armored Chief"));
	namesDictionary.insert(std::pair<std::string,std::string>("MELVYN","From the name MELVIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MENDEL","Scholarly Accomplishments"));
	namesDictionary.insert(std::pair<std::string,std::string>("MENORA","Candelabra"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERCEDES","Mercies"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERCER","Merchant"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERCIA","Mercy"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERCY","Compassion"));
	namesDictionary.insert(std::pair<std::string,std::string>("MEREDITH","Protector from the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERIA","Rebellious One (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERIS","Of the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERLE","A Bird"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERLIN","By the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERRILL","From the name MERLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERRITT","Small but Famous"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERRY","From the name MEREDITH or Happy"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERTON","Town near the Pond"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERV","From the name MARVIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERVIN","From the name MARVIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERVYN","From the name MARVIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERYL","From the name MERLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MERYLE","From the name MERLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MESHAL","Born in the Lunar Month of Aries"));
	namesDictionary.insert(std::pair<std::string,std::string>("MESSINA","The Spoiler (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("METEA","Gentle (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("METTABEL","Favored by God"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIA","From the name AMELIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MICAH","Who is like God"));
	namesDictionary.insert(std::pair<std::string,std::string>("MICHAEL","Who is like God?"));
	namesDictionary.insert(std::pair<std::string,std::string>("MICHAELA","Feminine form of MICHAEL (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MICHAL","Brook, First Wife of King David"));
	namesDictionary.insert(std::pair<std::string,std::string>("MICHEL","Form of Michael (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MICHELE","From the name MICHAEL (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MICHELINE","Who Is Like God"));
	namesDictionary.insert(std::pair<std::string,std::string>("MICHELLE","From the name MICHAEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("MICHON","Who is like God"));
	namesDictionary.insert(std::pair<std::string,std::string>("MICK","From the name MICHAEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("MICKEY","From the name MICHAEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("MICOL","Queen (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIEKO","Already Prosperous"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIETTE","Small Sweet Thing"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIGDANA","Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIGNON","Delicate, Graceful"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIKA","Wise Little Raccoon (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIKAILI","God Like (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIKE","From the name MICHAEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIKHAIL","From the name MICHAEL (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIKI","Flower Stalk (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIKKEL","Who is like God?"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILAN","From Milan Italy"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILANDU","A Case to Answer (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILDRED","Mild Strength"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILES","Soldier"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILI","Who is for Me?"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILIANI","Gentle Caress (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILLER","Mill Worker"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILLICENT","Strong Work"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILLIE","From the name MILDRED"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILLS","Near the Mills"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILLY","From the name MILDRED"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILO","From the name MILES (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILT","From the name MILTON"));
	namesDictionary.insert(std::pair<std::string,std::string>("MILTON","From the Mill Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIMI","From the name MIRIAM (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MINA","South (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MINDA","Knowledge"));
	namesDictionary.insert(std::pair<std::string,std::string>("MINDY","Honey"));
	namesDictionary.insert(std::pair<std::string,std::string>("MINERVA","Goddess of Wisdom (Lt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MINIYA","Much Expected of Her (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MINNA","Remembrance"));
	namesDictionary.insert(std::pair<std::string,std::string>("MINNIE","Contraction of MARY"));
	namesDictionary.insert(std::pair<std::string,std::string>("MINOR","Junior,Younger"));
	namesDictionary.insert(std::pair<std::string,std::string>("MINTY","Collector of Thoughts, Determined Protector"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIO","Mine (Sp) or 3-times strong (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIRA","From the name MIRANDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIRABEL","Of Uncommon Beauty"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIRABELLE","Of wondrous Beauty"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIRACLE","Miracle"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIRANDA","Admirable, Beautiful"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIRCEA","Marvelous, Wonderful"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIREILLE","From of MIRELLA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIRELLA","Jehovah Spoke"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIRIAM","Mistress of the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIRIT","Bitter"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIROSLAV","Peace Celebration"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIRRA","From the name MIRANDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MISAE","White Hot Sun (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MISHA","From the name MICHAEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("MISTY","Covered With Mist, Dew"));
	namesDictionary.insert(std::pair<std::string,std::string>("MISU","Ripples in the Water (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MITCH","From the name MICHAEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("MITCHEL","From the name MICHAEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("MITCHELL","Form of MICHAEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIYA","Sacred House"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIYANDA","Roots (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIYOKO","Beautiful Child (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MIZELL","Tiny Gnat"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOANA","Ocean"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOANNA","Ocean (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MODESTA","Shy, Modest"));
	namesDictionary.insert(std::pair<std::string,std::string>("MODESTY","Without Conceit"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOHAMMED","From the name MUHAMMAD"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOHAN","Wonderful"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOINA","Gentle, Soft"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOIRA","Great"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOKE","Form of Moses (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOLLY","From the name MARY"));
	namesDictionary.insert(std::pair<std::string,std::string>("MONA","Noble"));
	namesDictionary.insert(std::pair<std::string,std::string>("MONAHAN","Religious Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("MONICA","From the name MONA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MONITA","Single, Alone"));
	namesDictionary.insert(std::pair<std::string,std::string>("MONROE","Near the river Roe (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MONTAGUE","Sharp Cliff (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MONTANA","Mountain"));
	namesDictionary.insert(std::pair<std::string,std::string>("MONTE","From the name MONTGOMERY"));
	namesDictionary.insert(std::pair<std::string,std::string>("MONTEGO","Mountainous"));
	namesDictionary.insert(std::pair<std::string,std::string>("MONTGOMERY","Of the Mountain"));
	namesDictionary.insert(std::pair<std::string,std::string>("MONTY","From the name MONTGOMERY"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOON","From the Moon"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOON-UNIT","One that Orbits the Moon"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORA","Sweet Berry (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORAL","Lovely Thoughts"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORATHI","Wise Man (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORDECAI","Warrior, Warlike"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORE","Great"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORELA","Apricot"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOREY","From the name MORRIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORGAN","From the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORGANA","Seashore"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORIAH","God is my Teacher"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORIBA","Curious Seeker of Knowledge"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORLEY","Pasture of the Moor"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORNA","Affection, Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORRIE","From the name MORRIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORRIGAN","War Goddess"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORRIS","Dark Skinned"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORRISON","Son of Morris"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORSE","Son of Morris"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORT","From the name MORTON"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORTIMER","Lives Near the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORTON","From the Town Near the Moor"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORTY","From the name MORTIMER"));
	namesDictionary.insert(std::pair<std::string,std::string>("MORWENNA","Sea Wave"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOSES","Drawn Out of the Water"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOSHE","From the name MOSES"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOSS","From the name MOSES"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOSTYN","Fortress in a Field (Wl)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOYA","Great"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOYNA","Gentle, Soft"));
	namesDictionary.insert(std::pair<std::string,std::string>("MRENA","White Eyes"));
	namesDictionary.insert(std::pair<std::string,std::string>("MUHAMMAD","Praised"));
	namesDictionary.insert(std::pair<std::string,std::string>("MUNA","The Lord is With You (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MURA","Village"));
	namesDictionary.insert(std::pair<std::string,std::string>("MURIEL","From the name MERLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("MURPHY","Sea Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("MURRAY","Sailor (Nd)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MURRON","Bitter (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MUSOKE","Rainbow (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MUTIA","Honored One (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MYKEL","Peaceful"));
	namesDictionary.insert(std::pair<std::string,std::string>("MYLES","Soldier"));
	namesDictionary.insert(std::pair<std::string,std::string>("MYRA","From the name MIRANDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("MYRILLA","Wonderful"));
	namesDictionary.insert(std::pair<std::string,std::string>("MYRLADIS","Attractive"));
	namesDictionary.insert(std::pair<std::string,std::string>("MYRNA","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("MYRON","Fragrant"));
	namesDictionary.insert(std::pair<std::string,std::string>("MYRTLE","The Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("MYRTLE", "Victory"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAAL","Birth (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NADIA","From the name NADINE (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NADIE","From the name NADIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("NADINE","Hope"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAFIS","Precious"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAFUNA","Delivered Feet-First (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAISER","Founder of Clans (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAKIMA","Noah's Sea (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NALO","Lovable (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAMIR","Swift Cat"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAN","From the name ANNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("NANCY","From the name ANNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("NANETTE","Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("NANI","Charming (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAOLIN","Aztec God of the Sun"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAOLL","Aztec God of the Sun - Dim. of Naolin"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAOMI","Pleasant"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAPOLEON","Fierce One from Naples (Fr & It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NARA","Happy"));
	namesDictionary.insert(std::pair<std::string,std::string>("NARCISSE","Daffodil (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NARDO","From the name BERNARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("NARIAH","Bitter"));
	namesDictionary.insert(std::pair<std::string,std::string>("NASCHA","Owl (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NASHA","Born During Rainy Season (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NASIA","From the name NATALIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("NASSER","Triumphant"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAT","From the name NATHAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATALA","From the name NATALIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATALIA","From the name NATALIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATALIE","To Be Born"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATALYA","From the name NATALIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATANE","Female Child (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATASHA","From the name NATALIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATE","From the name NATHAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATHALIE","From the name NATALIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATHAN","He Gave"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATHANIEL","Gift of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATINE","of the Natine Tribe (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATIVIDAD","Of the Nativity"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATORI","Bird"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATSU","Born in Summer (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NATURE","Nature"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAVARRO","Plains (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAVEEN","Beautiful, Pleasant"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAVID","Good News"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAWAL","Christmas, Birth Day"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAYATI","Wrestler"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAYELI","I love you"));
	namesDictionary.insert(std::pair<std::string,std::string>("NAYER","Sunshine"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEAL","A Champion"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEALON","Chief, Champion"));
	namesDictionary.insert(std::pair<std::string,std::string>("NECIA","Fiery, Intense"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEDA","Christ's Day"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEDRA","Below the Earth"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEELY","Victor"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEENA","Form of NINA"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEETEE","Moral"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEIL","Champion"));
	namesDictionary.insert(std::pair<std::string,std::string>("NELIA","Form of NEAL"));
	namesDictionary.insert(std::pair<std::string,std::string>("NELLIE","From HELEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("NELSON","Son of NEAL"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEN","Ancient Waters (Bt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NENET","Goddess of the Deep (Bt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEOLA","New"));
	namesDictionary.insert(std::pair<std::string,std::string>("NERINA","Sea Nymph"));
	namesDictionary.insert(std::pair<std::string,std::string>("NERINE","Sea Nymph"));
	namesDictionary.insert(std::pair<std::string,std::string>("NERISSA","Sea Nymph"));
	namesDictionary.insert(std::pair<std::string,std::string>("NERITA","Sea Snail"));
	namesDictionary.insert(std::pair<std::string,std::string>("NERO","Powerful"));
	namesDictionary.insert(std::pair<std::string,std::string>("NESSA","From the name AGNES"));
	namesDictionary.insert(std::pair<std::string,std::string>("NESSAN","Stoat"));
	namesDictionary.insert(std::pair<std::string,std::string>("NESTOR","Wisdom"));
	namesDictionary.insert(std::pair<std::string,std::string>("NETANYA","God's Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEVA","Snow"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEVADA","Covered in Snow"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEVAN","Little Saint"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEVILLE","New Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("NEWMAN","New Comer"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIA","Champion"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIABI","Fawn"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIALL","Champion"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIAMH","Bright"));
	namesDictionary.insert(std::pair<std::string,std::string>("NICHELLE","Victorious Maiden"));
	namesDictionary.insert(std::pair<std::string,std::string>("NICHOLAI","Victorious People"));
	namesDictionary.insert(std::pair<std::string,std::string>("NICHOLAS","Victorious People"));
	namesDictionary.insert(std::pair<std::string,std::string>("NICK","From the name NICHOLAS"));
	namesDictionary.insert(std::pair<std::string,std::string>("NICKI","From the name NICOLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("NICODEMUS","Conqueror of the People"));
	namesDictionary.insert(std::pair<std::string,std::string>("NICOLA","Fem. form of Nicholas"));
	namesDictionary.insert(std::pair<std::string,std::string>("NICOLE","Victory of the People"));
	namesDictionary.insert(std::pair<std::string,std::string>("NICOLETTE","From the name NICOLE (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIEL","From the name NATHANIEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIGEL","From the name NATHANIEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIJOLE","Slavic form of NICOLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIKHIL","Complete, Victorious"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIKITA","Victorious People"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIKKI","From the name NICOLE"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIKKOS","Victorious People"));
	namesDictionary.insert(std::pair<std::string,std::string>("NILES","Son of Neil"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIMEESHA","Princess"));
	namesDictionary.insert(std::pair<std::string,std::string>("NINA","Ninth"));
	namesDictionary.insert(std::pair<std::string,std::string>("NINON","Form of ANNE (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIRA","National Ind. Recovery Act"));
	namesDictionary.insert(std::pair<std::string,std::string>("NISSA","Sign, Emblem"));
	namesDictionary.insert(std::pair<std::string,std::string>("NITA","Dim. of JUANITA"));
	namesDictionary.insert(std::pair<std::string,std::string>("NITARA","Having Deep Roots"));
	namesDictionary.insert(std::pair<std::string,std::string>("NITESH","Heartbeat of the Earth"));
	namesDictionary.insert(std::pair<std::string,std::string>("NITIS","Friend"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIV","Speech"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIXIE","Water Sprite"));
	namesDictionary.insert(std::pair<std::string,std::string>("NIZANA","Flower Bud"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOAH","Rest, Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOAM","Sweet, Friend"));
	namesDictionary.insert(std::pair<std::string,std::string>("NODIN","Windy Day (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOE","From NOEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOEL","Born on Christmas Day"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOELANI","Beautiful One from Heaven"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOKOMIS","Moon Daughter"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOLA","Of High Birth"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOLAN","Famous"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOLAND","From the name NOLAND"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOMA","Farming (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOMLANGA","Sun"));
	namesDictionary.insert(std::pair<std::string,std::string>("NONA","The Ninth"));
	namesDictionary.insert(std::pair<std::string,std::string>("NONNIE","Ninth"));
	namesDictionary.insert(std::pair<std::string,std::string>("NORA","Honor, Respect"));
	namesDictionary.insert(std::pair<std::string,std::string>("NORAH","Form of NORA"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOREEN","Diminuitive of NORA"));
	namesDictionary.insert(std::pair<std::string,std::string>("NORI","Belief (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("MOIRA","Great"));
	namesDictionary.insert(std::pair<std::string,std::string>("NORM","From the name NORMAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("NORMA","Pattern, Rule"));
	namesDictionary.insert(std::pair<std::string,std::string>("NORMAN","Norseman or Rule"));
	namesDictionary.insert(std::pair<std::string,std::string>("NORMANDY","Provence in France"));
	namesDictionary.insert(std::pair<std::string,std::string>("NORRIS","From the North"));
	namesDictionary.insert(std::pair<std::string,std::string>("NORTON","From the North"));
	namesDictionary.insert(std::pair<std::string,std::string>("NORWOOD","Guard at the North Gate"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOVA","New"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOVIA","New"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOWLES","Forest Cove"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOXOLO","Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("NOYA","Beautiful, Ornamented"));
	namesDictionary.insert(std::pair<std::string,std::string>("NUNCIO","Messenger (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NURI","Flaming LIghts (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NURU","Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("NYAKO","Girl (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NYDIA","A Safe Place"));
	namesDictionary.insert(std::pair<std::string,std::string>("NYEKI","Second Wife (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NYOKA","Snake (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("NYSA","The Goal"));
	namesDictionary.insert(std::pair<std::string,std::string>("NYX","Goddess of Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("OAFE","Your Descent Matters (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OAKES","Beside the Oak Trees"));
	namesDictionary.insert(std::pair<std::string,std::string>("OAKLEY","Field of Oak Trees"));
	namesDictionary.insert(std::pair<std::string,std::string>("OBEDIENCE","To Obey"));
	namesDictionary.insert(std::pair<std::string,std::string>("OBERON","Bear Heart (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OBERT","Otter"));
	namesDictionary.insert(std::pair<std::string,std::string>("OCEANA","Ocean (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OCTAVIA","The Eighth"));
	namesDictionary.insert(std::pair<std::string,std::string>("OCTAVIO","The Eighth"));
	namesDictionary.insert(std::pair<std::string,std::string>("OCTAVIOUS","Eighth"));
	namesDictionary.insert(std::pair<std::string,std::string>("ODELE","Wealthy"));
	namesDictionary.insert(std::pair<std::string,std::string>("ODELIA","I will praise God"));
	namesDictionary.insert(std::pair<std::string,std::string>("ODELL","Otter"));
	namesDictionary.insert(std::pair<std::string,std::string>("ODESSA","The Odyssey"));
	namesDictionary.insert(std::pair<std::string,std::string>("ODETTA","Melody"));
	namesDictionary.insert(std::pair<std::string,std::string>("ODETTE","Ode, Melodic"));
	namesDictionary.insert(std::pair<std::string,std::string>("ODINA","Mountain (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ODYSSEUS","Full of Wrath"));
	namesDictionary.insert(std::pair<std::string,std::string>("OFER","A Young Deer"));
	namesDictionary.insert(std::pair<std::string,std::string>("OGDEN","Lives beside the Oaks"));
	namesDictionary.insert(std::pair<std::string,std::string>("OGIMA","Chief"));
	namesDictionary.insert(std::pair<std::string,std::string>("OHIO","Large River"));
	namesDictionary.insert(std::pair<std::string,std::string>("OISTIN","Venerable (Lt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OKAL","To Cross (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OKALIK","Arctic Hare"));
	namesDictionary.insert(std::pair<std::string,std::string>("OKAPI","Animal with Long Neck (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OKE","Form of OSCAR (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OKECHUKU","God's Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("OKOTH","Born when it was Raining (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OKSANA","God is With Us (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OLA","Ancestor"));
	namesDictionary.insert(std::pair<std::string,std::string>("OLAF","Ancestor (Dan)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OLATHE","Lovely"));
	namesDictionary.insert(std::pair<std::string,std::string>("OLEG","Sacred (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OLESIA","Protector of Humanity (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OLGA","Holy (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OLIN","Holly"));
	namesDictionary.insert(std::pair<std::string,std::string>("OLINDA","Form of YOLANDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("OLIVE","From the name OLIVER"));
	namesDictionary.insert(std::pair<std::string,std::string>("OLIVER","Olive Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("OLIVIA","From the name OLIVER"));
	namesDictionary.insert(std::pair<std::string,std::string>("OLLIE","From the name OLIVER"));
	namesDictionary.insert(std::pair<std::string,std::string>("OLYMPIA","Mountain of the Gods"));
	namesDictionary.insert(std::pair<std::string,std::string>("OMAR","First born son"));
	namesDictionary.insert(std::pair<std::string,std::string>("OMEGA","Great"));
	namesDictionary.insert(std::pair<std::string,std::string>("ONA","Full of Grace"));
	namesDictionary.insert(std::pair<std::string,std::string>("ONAN","Wealthy (Tk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ONEIDA","Standing Rock"));
	namesDictionary.insert(std::pair<std::string,std::string>("ONI","Born on Holy Ground"));
	namesDictionary.insert(std::pair<std::string,std::string>("ONSLOW","Hill of the Passionate One (Bt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OONA","One"));
	namesDictionary.insert(std::pair<std::string,std::string>("OPA","Owl"));
	namesDictionary.insert(std::pair<std::string,std::string>("OPAL","From the Opal Gemstone"));
	namesDictionary.insert(std::pair<std::string,std::string>("OPHELIA","Help"));
	namesDictionary.insert(std::pair<std::string,std::string>("OPHIRA","Gold"));
	namesDictionary.insert(std::pair<std::string,std::string>("OPRAH","From the name OPHIRA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORA","Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORAL","Spoken Word"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORALEE","My Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORAN","Green"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORANE","Rising (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORDE","Order"));
	namesDictionary.insert(std::pair<std::string,std::string>("OREN","A Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORENDA","Magic Power"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORIA","From the Orient"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORIANA","Golden One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORIEL","Gold"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORIEN","The Orient, East"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORINGO","He Who Likes the Hunt (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORINO","Workman's Meadow (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORIOLE","From the name ORIEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORION","A Hunter in Greek Mythology"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORLA","Golden Woman"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORLANDO","Land of Gold"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORLEANS","Golden"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORLEE","From the name ORLI"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORLI","The Light is Mine"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORLY","From the name ORLI"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORMA","Free Men (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORMAND","Serpent"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORRICK","Venerable Oak"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORSEN","From the name ORSON"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORSIN","From the name ORSON"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORSON","A Bear"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORTON","Wealthy One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ORVILLE","Golden City"));
	namesDictionary.insert(std::pair<std::string,std::string>("OSANNA","Praise"));
	namesDictionary.insert(std::pair<std::string,std::string>("OSAZE","Whom God Likes"));
	namesDictionary.insert(std::pair<std::string,std::string>("OSBORN","Bear of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("OSBORNE","Soldier of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("OSCAR","Divine Strength"));
	namesDictionary.insert(std::pair<std::string,std::string>("OSGOOD","Goth of the Heavens"));
	namesDictionary.insert(std::pair<std::string,std::string>("OSIAS","Salvation"));
	namesDictionary.insert(std::pair<std::string,std::string>("OSKAR","From the name OSCAR"));
	namesDictionary.insert(std::pair<std::string,std::string>("OSMA","Protective Hero"));
	namesDictionary.insert(std::pair<std::string,std::string>("OSMOND","Godly Defense"));
	namesDictionary.insert(std::pair<std::string,std::string>("OSSIAN","Fawn"));
	namesDictionary.insert(std::pair<std::string,std::string>("OSSIE","Divine"));
	namesDictionary.insert(std::pair<std::string,std::string>("OSWALD","God of the Forest"));
	namesDictionary.insert(std::pair<std::string,std::string>("OTHELLO","Prosperous"));
	namesDictionary.insert(std::pair<std::string,std::string>("OTIS","One Who Hears Well"));
	namesDictionary.insert(std::pair<std::string,std::string>("OTTO","From the name OTHELLO"));
	namesDictionary.insert(std::pair<std::string,std::string>("OURAY","Arrow's Shot (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("OVA","Egg"));
	namesDictionary.insert(std::pair<std::string,std::string>("OVERTON","The Upper Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("OVID","Egg Shaped"));
	namesDictionary.insert(std::pair<std::string,std::string>("OWEN","From the name EVAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("OWNAH","Form of UNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("OZ","Strength"));
	namesDictionary.insert(std::pair<std::string,std::string>("OZZIE","From the name OZ"));
	namesDictionary.insert(std::pair<std::string,std::string>("PABLA","From the name PAULINE (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PABLO","From the name PAUL"));
	namesDictionary.insert(std::pair<std::string,std::string>("PACKARD","One Who Packs"));
	namesDictionary.insert(std::pair<std::string,std::string>("PACO","From the name PACKARD (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PADDY","From the name PATRICK (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAGE","Youthful Assistant"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAIGE","From the name PAGE"));
	namesDictionary.insert(std::pair<std::string,std::string>("PALANI","Free Man (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PALESA","Flower (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PALEY","From the name PAUL"));
	namesDictionary.insert(std::pair<std::string,std::string>("PALLAS","Understanding (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PALMA","From the name PAMELA"));
	namesDictionary.insert(std::pair<std::string,std::string>("PALMER","From the name PAMELA"));
	namesDictionary.insert(std::pair<std::string,std::string>("PALOMA","A Dove (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PALTI","My Escape, Deliverance"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAMELA","A Palm Tree (Invented by a poet)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAMELIA","From the name PAMELA"));
	namesDictionary.insert(std::pair<std::string,std::string>("PANCHO","Tuft"));
	namesDictionary.insert(std::pair<std::string,std::string>("PANCHO"," Plume (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PANDORA","Gifted"));
	namesDictionary.insert(std::pair<std::string,std::string>("PANFILA","Loved by ALL"));
	namesDictionary.insert(std::pair<std::string,std::string>("PANIGA","My Daughter"));
	namesDictionary.insert(std::pair<std::string,std::string>("PANYA","Enthroned (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAOLA","Small"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAOLO","From the name PAUL"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAPINA","Ivy (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PARIS","Lover"));
	namesDictionary.insert(std::pair<std::string,std::string>("PARKER","Keeper of the Park"));
	namesDictionary.insert(std::pair<std::string,std::string>("PARKIN","Young Peter"));
	namesDictionary.insert(std::pair<std::string,std::string>("PARLAN","From the name BARTHOLOMEW (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PARLEY","To Speak"));
	namesDictionary.insert(std::pair<std::string,std::string>("PARRISH","Neighborhood (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PARRY","Son of HARRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("PARSON","Minister, Clergy"));
	namesDictionary.insert(std::pair<std::string,std::string>("PASCAL","Easter's Infant (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PASCALE","Passover"));
	namesDictionary.insert(std::pair<std::string,std::string>("PASCALE","Easter"));
	namesDictionary.insert(std::pair<std::string,std::string>("PASCHA","To Pass Over"));
	namesDictionary.insert(std::pair<std::string,std::string>("PASI","King"));
	namesDictionary.insert(std::pair<std::string,std::string>("PATCH","Form of PETER"));
	namesDictionary.insert(std::pair<std::string,std::string>("PATIENCE","From the Virtue"));
	namesDictionary.insert(std::pair<std::string,std::string>("PATRICIA","Of Noble Descent"));
	namesDictionary.insert(std::pair<std::string,std::string>("PATRICK","Nobleman"));
	namesDictionary.insert(std::pair<std::string,std::string>("PATSY","From the name PATRICIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("PATTY","From the name PATRICIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAUL","Small"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAULA","From the name PAUL"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAULETTE","Small"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAULINA","From the name PAULINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAULINE","From the name PAUL"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAULO","Place of Rest (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAULOS","Form of PAUL (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAXTON","Town of Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAYTON","Village Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("PAZ","Peace or Gold"));
	namesDictionary.insert(std::pair<std::string,std::string>("PEALE","Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("PEARL","A Gem of the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("PEARLIE","From the name PEARL"));
	namesDictionary.insert(std::pair<std::string,std::string>("PEARLY","From the name PEARL"));
	namesDictionary.insert(std::pair<std::string,std::string>("PEBBLES","Small Rocks"));
	namesDictionary.insert(std::pair<std::string,std::string>("PEDRO","From the name PETER (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PEGGY","From the name MARGARET"));
	namesDictionary.insert(std::pair<std::string,std::string>("PELAGIA","Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("PELHAM","Fur Skin"));
	namesDictionary.insert(std::pair<std::string,std::string>("PEMBROKE","A Broken Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("PENELOPE","A Silent Worker"));
	namesDictionary.insert(std::pair<std::string,std::string>("PENN","Corral"));
	namesDictionary.insert(std::pair<std::string,std::string>("PENNEY","From the name PENELOPE"));
	namesDictionary.insert(std::pair<std::string,std::string>("PENNIE","From the name PENELOPE"));
	namesDictionary.insert(std::pair<std::string,std::string>("PENNY","From the name PENELOPE"));
	namesDictionary.insert(std::pair<std::string,std::string>("PEONY","Physician of the Gods"));
	namesDictionary.insert(std::pair<std::string,std::string>("PEPPER","From the Pepper Plant"));
	namesDictionary.insert(std::pair<std::string,std::string>("PERCIVAL","Piercing the Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("PERCY","From the name PERCIVAL"));
	namesDictionary.insert(std::pair<std::string,std::string>("PERDITA","She Who Is Lost"));
	namesDictionary.insert(std::pair<std::string,std::string>("PERDY","From PERDITA"));
	namesDictionary.insert(std::pair<std::string,std::string>("PEREGRINE","Wanderer"));
	namesDictionary.insert(std::pair<std::string,std::string>("PERI","Fem. form of PERRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("PERRIN","From the name PERRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("PERRY","A Form of Peter"));
	namesDictionary.insert(std::pair<std::string,std::string>("PETE","From the name PETER"));
	namesDictionary.insert(std::pair<std::string,std::string>("PETER","A Rock"));
	namesDictionary.insert(std::pair<std::string,std::string>("PETRA","Stone"));
	namesDictionary.insert(std::pair<std::string,std::string>("PETULA","Impatient"));
	namesDictionary.insert(std::pair<std::string,std::string>("PETUNIA","Of the Petunia Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("PEYTON","From PAYTON"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHAEDRA","Glowing (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHEMIA","God of Speech"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHIALA","Irish Saint"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHIL","From the name PHILLIP"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHILA","Love"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHILANA","Lover of Mankind"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHILENA","Lover of Mankind"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHILIP","From the name PHILLIP"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHILLIP","Loving"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHILOMENA","Loving"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHILYRA","To Love Music"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHINDIWE","Another One"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHOEBE","Bright, Shining One"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHYLICIA","From the name FELICIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHYLISS","From the name PHYLLIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHYLLIS","A Leaf"));
	namesDictionary.insert(std::pair<std::string,std::string>("PHYRE","Burning Bright"));
	namesDictionary.insert(std::pair<std::string,std::string>("PIA","Pious"));
	namesDictionary.insert(std::pair<std::string,std::string>("PICABO","Peek-A-Boo child's game"));
	namesDictionary.insert(std::pair<std::string,std::string>("PIER","Form of PIERRE"));
	namesDictionary.insert(std::pair<std::string,std::string>("PIERA","Small Rock"));
	namesDictionary.insert(std::pair<std::string,std::string>("PIERCE","Form of PETER"));
	namesDictionary.insert(std::pair<std::string,std::string>("PIERRE","From the name PETER (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PIERRETTE","From the name PIERRE"));
	namesDictionary.insert(std::pair<std::string,std::string>("PILAR","A Basin"));
	namesDictionary.insert(std::pair<std::string,std::string>("PILLAN","God of Stormy Weather (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PIPER","Flute Player"));
	namesDictionary.insert(std::pair<std::string,std::string>("PIRRO","Hair on Fire (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PIUTA","Poetry"));
	namesDictionary.insert(std::pair<std::string,std::string>("PLACIDO","Calm, Quiet"));
	namesDictionary.insert(std::pair<std::string,std::string>("PLATO","Strong Shoulders (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PLATT","Ground Without Slope"));
	namesDictionary.insert(std::pair<std::string,std::string>("PLEASANCE","Agreeable"));
	namesDictionary.insert(std::pair<std::string,std::string>("PLENNIE","Full, Complete"));
	namesDictionary.insert(std::pair<std::string,std::string>("POLLY","Pet form of Molly"));
	namesDictionary.insert(std::pair<std::string,std::string>("POLO","Alligator (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PONCE","Fifth (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("POPPY","From the Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("PORIA","Fruitful"));
	namesDictionary.insert(std::pair<std::string,std::string>("PORTER","Door Guard"));
	namesDictionary.insert(std::pair<std::string,std::string>("POSY","Small Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("POWA","Wealthy (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PRENTICE","Beginner, Learning"));
	namesDictionary.insert(std::pair<std::string,std::string>("PRESCOTT","Priest's Cottage"));
	namesDictionary.insert(std::pair<std::string,std::string>("PRESENCIA","Presence"));
	namesDictionary.insert(std::pair<std::string,std::string>("PRESTON","Priest's Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("PRICE","Passion's Son"));
	namesDictionary.insert(std::pair<std::string,std::string>("PRIMO","First Born (Lt) or Cousin (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("PRINCE","First, Prince"));
	namesDictionary.insert(std::pair<std::string,std::string>("PRISCILLA","Ancient"));
	namesDictionary.insert(std::pair<std::string,std::string>("PROCOPIA","Progressive"));
	namesDictionary.insert(std::pair<std::string,std::string>("PRUDENCE","Cautious, Intelligent"));
	namesDictionary.insert(std::pair<std::string,std::string>("PRUE","Form of PRUDENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("PRUNELLA","Little Plum"));
	namesDictionary.insert(std::pair<std::string,std::string>("PSYCHE","The Soul"));
	namesDictionary.insert(std::pair<std::string,std::string>("PYRALIS","Of Fire"));
	namesDictionary.insert(std::pair<std::string,std::string>("QABIL","Able (Ara)"));
	namesDictionary.insert(std::pair<std::string,std::string>("QAMAR","Moon (Ara)"));
	namesDictionary.insert(std::pair<std::string,std::string>("QIANA","Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("QING-JAO","Gloriously Bright"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUADE","Scottish Clan Name"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUANA","Aromatic (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUANDA","A Companion"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUANG","Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUEENIE","Queen or Female Companion"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUELLA","to Kill"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUENNELL","Oak Tree (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUENTIN","The Fifth"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUERIDA","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUIANA","Soft, Synthetic Material"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUILLA","A Quill"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUILLAN","Cub"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUIMBY","At the Mother's House"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUIN","Quintuplet"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUINCY","From the name QUENTIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUINLAN","Very Strong"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUINN","Fifth's Son Estate"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUINTA","The Fifth"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUINTIN","From the name QUENTIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUINTO","Fifth Child (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUINTON","Queen's Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUIRINO","Mars, God of War"));
	namesDictionary.insert(std::pair<std::string,std::string>("QUON","Bright"));
	namesDictionary.insert(std::pair<std::string,std::string>("QWIN","Quintuplet"));
	namesDictionary.insert(std::pair<std::string,std::string>("RABIA","Spring (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RACH","Frog (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RACHAEL","From the name RACHEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("RACHEL","A Female Sheep, Ewe"));
	namesDictionary.insert(std::pair<std::string,std::string>("RACHELLE","Ewe"));
	namesDictionary.insert(std::pair<std::string,std::string>("RADLEY","Red Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("RADWAN","Delight (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAE","From the name RACHEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAEANNE","Doe, Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAEGAN","Wise"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAFAEL","From the name RAPHAEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAFFAELLO","From the name RAPHAEL (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAFI","From the name RAPHAEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAIMI","Compassionate (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAINA","Peaceful, Queen"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAINE","Queen"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAISA","Rose"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAJA","Hope"));
	namesDictionary.insert(std::pair<std::string,std::string>("RALEIGH","Field of Birds"));
	namesDictionary.insert(std::pair<std::string,std::string>("RALPH","Wolf Counselor"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAMIRO","Supreme Judge (Pg)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAMON","From the name RAYMOND (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAMONA","Protector"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAMSES","Sun Born (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RANAE","Form of RENEE"));
	namesDictionary.insert(std::pair<std::string,std::string>("RANDALL","From the name RALPH"));
	namesDictionary.insert(std::pair<std::string,std::string>("RANDILYN","Protected Waterfall"));
	namesDictionary.insert(std::pair<std::string,std::string>("RANDOLPH","From the name RALPH"));
	namesDictionary.insert(std::pair<std::string,std::string>("RANDY","From the name RANDOLPH"));
	namesDictionary.insert(std::pair<std::string,std::string>("RANE","Queen"));
	namesDictionary.insert(std::pair<std::string,std::string>("RANEE","Queen"));
	namesDictionary.insert(std::pair<std::string,std::string>("RANIA","Queen"));
	namesDictionary.insert(std::pair<std::string,std::string>("RANIT","Song (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAPHAEL","God Has Healed"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAPHAELA","Fem. form of RAPHAEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAQUEL","From the name RACHEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("RASHA","Young Gazelle"));
	namesDictionary.insert(std::pair<std::string,std::string>("RASHIDA","Righteous (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RASIA","Queen (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAUL","Strong (Wolf) Counselor"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAVEN","Blackbrid"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAVI","Sun"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAY","A Stream"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAYMOND","Wise Protection"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAYYA","No Longer Thirsty"));
	namesDictionary.insert(std::pair<std::string,std::string>("RAZI","Secret"));
	namesDictionary.insert(std::pair<std::string,std::string>("REA","Brook"));
	namesDictionary.insert(std::pair<std::string,std::string>("READ","From the name REED"));
	namesDictionary.insert(std::pair<std::string,std::string>("REAGAN","Wise"));
	namesDictionary.insert(std::pair<std::string,std::string>("REBA","From the name REBECCA"));
	namesDictionary.insert(std::pair<std::string,std::string>("REBECCA","To Tie, To Bind"));
	namesDictionary.insert(std::pair<std::string,std::string>("REBEKAH","From the name REBECCA (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RED","Redheaded One, or Dim. of REDMOND"));
	namesDictionary.insert(std::pair<std::string,std::string>("REDELL","Red Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("REDFORD","Over the Red River"));
	namesDictionary.insert(std::pair<std::string,std::string>("REED","A Reed or Red Haired"));
	namesDictionary.insert(std::pair<std::string,std::string>("REESE","Enthusiastic"));
	namesDictionary.insert(std::pair<std::string,std::string>("REEVES","Steward"));
	namesDictionary.insert(std::pair<std::string,std::string>("REGAN","Wise"));
	namesDictionary.insert(std::pair<std::string,std::string>("REGINA","Queen"));
	namesDictionary.insert(std::pair<std::string,std::string>("REGINALD","King"));
	namesDictionary.insert(std::pair<std::string,std::string>("REILLY","A Small Stream"));
	namesDictionary.insert(std::pair<std::string,std::string>("REINA","Peaceful, Queen"));
	namesDictionary.insert(std::pair<std::string,std::string>("REMEDY","Cure"));
	namesDictionary.insert(std::pair<std::string,std::string>("REMI","From Reims (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("REMINGTON","From the Raven"));
	namesDictionary.insert(std::pair<std::string,std::string>("REMY","From Rheims (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("REN","Arranger (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RENA","From the name RENEE"));
	namesDictionary.insert(std::pair<std::string,std::string>("RENATA","From the name RENEE"));
	namesDictionary.insert(std::pair<std::string,std::string>("RENATE","Reborn"));
	namesDictionary.insert(std::pair<std::string,std::string>("RENE","Reborn"));
	namesDictionary.insert(std::pair<std::string,std::string>("RENEE","Reborn"));
	namesDictionary.insert(std::pair<std::string,std::string>("RENNY","Compact Strength (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RETH","King (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("REUBEN","Behold - A Son"));
	namesDictionary.insert(std::pair<std::string,std::string>("REVELIN","Form of ROLAND (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("REX","King"));
	namesDictionary.insert(std::pair<std::string,std::string>("REY","King"));
	namesDictionary.insert(std::pair<std::string,std::string>("REYNA","Peaceful, Queen"));
	namesDictionary.insert(std::pair<std::string,std::string>("REYNARD","Fox"));
	namesDictionary.insert(std::pair<std::string,std::string>("REYNOLD","From the name REGINALD"));
	namesDictionary.insert(std::pair<std::string,std::string>("REZA","Reaper"));
	namesDictionary.insert(std::pair<std::string,std::string>("RHEA","Rivers"));
	namesDictionary.insert(std::pair<std::string,std::string>("RHETT","From the name REESE"));
	namesDictionary.insert(std::pair<std::string,std::string>("RHIANNON","Witch-Nymph-Goddess"));
	namesDictionary.insert(std::pair<std::string,std::string>("RHODA","Roses"));
	namesDictionary.insert(std::pair<std::string,std::string>("RHODES","Field of Roses (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RHONA","Rough Island"));
	namesDictionary.insert(std::pair<std::string,std::string>("RHONDA","Grand"));
	namesDictionary.insert(std::pair<std::string,std::string>("RHOSWEN","White Rose"));
	namesDictionary.insert(std::pair<std::string,std::string>("RHYS","A Stream"));
	namesDictionary.insert(std::pair<std::string,std::string>("RIA","From the River's Origin"));
	namesDictionary.insert(std::pair<std::string,std::string>("RIANNA","Sweet Basil, Virtuous"));
	namesDictionary.insert(std::pair<std::string,std::string>("RIANNE","FROM JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("RICARDO","From the name RICHARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("RICH","From the name RICHARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("RICHARD","Powerful, Rich Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("RICJUNETTE","Intelligent and Dependable"));
	namesDictionary.insert(std::pair<std::string,std::string>("RICK","From the name RICHARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("RICO","From the name RICHARD"));
	namesDictionary.insert(std::pair<std::string,std::string>("RIDER","Farmer"));
	namesDictionary.insert(std::pair<std::string,std::string>("RIGG","Lives near the Ridge"));
	namesDictionary.insert(std::pair<std::string,std::string>("RILEY","A Small Stream"));
	namesDictionary.insert(std::pair<std::string,std::string>("RIMCA","Form of REBECCA"));
	namesDictionary.insert(std::pair<std::string,std::string>("RIMONA","Pomegranate"));
	namesDictionary.insert(std::pair<std::string,std::string>("RINA","Catherine"));
	namesDictionary.insert(std::pair<std::string,std::string>("RINGO","A Ring"));
	namesDictionary.insert(std::pair<std::string,std::string>("RIONA","Form of REGINA (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RIORDAN","The King's Poet"));
	namesDictionary.insert(std::pair<std::string,std::string>("RISA","Laughter"));
	namesDictionary.insert(std::pair<std::string,std::string>("RITA","From MARGARITA"));
	namesDictionary.insert(std::pair<std::string,std::string>("RIVA","Riverbank"));
	namesDictionary.insert(std::pair<std::string,std::string>("RIVKA","Link Together"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROB","From the name ROBERT"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROBBIN","From the name ROBIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROBERT","Bright Fame"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROBIN","A Small, Tame Bird"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROBYN","From the name ROBIN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROCCO","Pet form of ROCKNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROCHELLE","Little Rock"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROCIO","Dewdrops"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROCK","From the name ROCKNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROCKNE","A Rock"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROCKWELL","From the Rocky Spring"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROCKY","Pet form of ROCKNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROD","From the name RODNEY"));
	namesDictionary.insert(std::pair<std::string,std::string>("RODD","From the name RODNEY"));
	namesDictionary.insert(std::pair<std::string,std::string>("RODDY","From the name RODNEY"));
	namesDictionary.insert(std::pair<std::string,std::string>("RODERICK","Fame Rule"));
	namesDictionary.insert(std::pair<std::string,std::string>("RODNEY","Land Near the Water"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROGER","Fame Spear"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROLAND","Famed Throughout the Land"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROLANDO","From the name ROLAND (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROLF","From the name RALPH or RUDOLF (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROLLO","From the name ROLAND"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROMAINE","Fem. form of ROMAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROMAN","Of Rome"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROMEO","Of the Romans"));
	namesDictionary.insert(std::pair<std::string,std::string>("RONA","Seal"));
	namesDictionary.insert(std::pair<std::string,std::string>("RONALD","From the name REGINALD (Sc)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RONALEE","From RONA and LEE"));
	namesDictionary.insert(std::pair<std::string,std::string>("RONAN","Little Seal"));
	namesDictionary.insert(std::pair<std::string,std::string>("RONAT","Seal"));
	namesDictionary.insert(std::pair<std::string,std::string>("RONDA","Grand"));
	namesDictionary.insert(std::pair<std::string,std::string>("RONIA","My Joy is the Lord"));
	namesDictionary.insert(std::pair<std::string,std::string>("RONLI","Joy is Mine"));
	namesDictionary.insert(std::pair<std::string,std::string>("RONNA","From the name VERONICA"));
	namesDictionary.insert(std::pair<std::string,std::string>("RONNIE","From the name VERONICA"));
	namesDictionary.insert(std::pair<std::string,std::string>("RONNY","From the name VERONICA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROOSEVELT","Field of Roses"));
	namesDictionary.insert(std::pair<std::string,std::string>("RORI","From the name RORY"));
	namesDictionary.insert(std::pair<std::string,std::string>("RORY","The Ruddy One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROS","From the name ROSALIND"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSALBA","White Rose"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSALIA","Rose Garlands"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSALIND","From the name ROSE and LINDA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSALYN","From the name ROSALIND"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSAMUNDE","Wild Roses"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSE","Of the Rose Blossom"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSEANNE","Rose and Anne"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSELANI","Heavenly Rose"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSEMARY","Bitter Rose"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSHAUN","Shining Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSIE","From the name ROSE"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSINE","Little Rose"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSS","Woody Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROSSA","Fem. form of ROSS"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROTHROCK","Weak One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROWAN","Tree with Red Berries, Mountain Ash"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROWDY","Spirited"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROWENA","Slender & Fair"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROXANNE","Dawn"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROY","King"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROYCE","King's Son"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROZ","From the name ROSALIND"));
	namesDictionary.insert(std::pair<std::string,std::string>("ROZA","Rose (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUBY","A Ruby Jewel (Red)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUDOLPH","Famous Wolf"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUDRA","Berry Plant"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUDY","From the name RUDOLPH"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUFINA","Red-Haired"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUFUS","Redhead (Lt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUMER","A Gypsy"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUNA","To Flow"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUNE","A Rune"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUPERT","From the name ROBERT (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUSS","From the name RUSSELL"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUSSELL","Red Head"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUSSOM","Head, Boss (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUSTI","Red Head"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUSTY","Red Head"));
	namesDictionary.insert(std::pair<std::string,std::string>("RUTH","A Companion, Friendship"));
	namesDictionary.insert(std::pair<std::string,std::string>("RYAN","Little King"));
	namesDictionary.insert(std::pair<std::string,std::string>("RYDER","Horseman"));
	namesDictionary.insert(std::pair<std::string,std::string>("RYLAN","Island"));
	namesDictionary.insert(std::pair<std::string,std::string>("RYLAND","From the Rye Land"));
	namesDictionary.insert(std::pair<std::string,std::string>("RYLEE","From RILEY"));
	namesDictionary.insert(std::pair<std::string,std::string>("RYLIE","A Small Stream"));
	namesDictionary.insert(std::pair<std::string,std::string>("RYO","Dragon (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SABA","Olds, Ancient"));
	namesDictionary.insert(std::pair<std::string,std::string>("SABINA","From the name SABINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("SABINE","Of Ancient Italian Culture"));
	namesDictionary.insert(std::pair<std::string,std::string>("SABRA","Thorny Cactus"));
	namesDictionary.insert(std::pair<std::string,std::string>("SABRINA","From the name SABRA"));
	namesDictionary.insert(std::pair<std::string,std::string>("SACHI","Girl Child of Bliss"));
	namesDictionary.insert(std::pair<std::string,std::string>("SADIE","From the name SARAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("SADIKI","Believe (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SADIRA","Ostrich from Water"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAFARA","Her Place (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAFFRON","Yellow"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAFINA","Noah's Ark (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAGE","From the spice OR Prophet"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAHARA","Inca Gold"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAIDI","Helper (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAKU","From the name ZACHERY"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAL","From the name SALVADOR"));
	namesDictionary.insert(std::pair<std::string,std::string>("SALENA","Salt"));
	namesDictionary.insert(std::pair<std::string,std::string>("SALENE","From SALVATORE and IRENE"));
	namesDictionary.insert(std::pair<std::string,std::string>("SALLY","Form of SARAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("SALOME","Shalom"));
	namesDictionary.insert(std::pair<std::string,std::string>("SALOME","Welcome"));
	namesDictionary.insert(std::pair<std::string,std::string>("SALOME"," Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("SALVADOR","Savior (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SALVATORE","Savior (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAM","From the name SAMUEL"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAMANTHA","The Listener"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAMSON","Bright as the Sun (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAMUEL","God Has Heard"));
	namesDictionary.insert(std::pair<std::string,std::string>("SANDRA","From the name ALEXANDER"));
	namesDictionary.insert(std::pair<std::string,std::string>("SANDRO","From ALEXANDER (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SANDY","From the name ALEXANDER"));
	namesDictionary.insert(std::pair<std::string,std::string>("SANFORD","A Crossing"));
	namesDictionary.insert(std::pair<std::string,std::string>("SANJAY","Protector"));
	namesDictionary.insert(std::pair<std::string,std::string>("SANJEET","Invincible"));
	namesDictionary.insert(std::pair<std::string,std::string>("SANNE","Lily"));
	namesDictionary.insert(std::pair<std::string,std::string>("SANTO","A Saint"));
	namesDictionary.insert(std::pair<std::string,std::string>("SANTOS","From the name SANTO"));
	namesDictionary.insert(std::pair<std::string,std::string>("SANYU","Happiness"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAPPHIRE","From the Gem"));
	namesDictionary.insert(std::pair<std::string,std::string>("SARA","From the name SARAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("SARAH","Princess"));
	namesDictionary.insert(std::pair<std::string,std::string>("SARAID","Excellent"));
	namesDictionary.insert(std::pair<std::string,std::string>("SARAMA","Nice (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SARDA","Hurried (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SARGENT","Military Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("SARKI","Chief (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SASHA","Pet form of ALEXANDER (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SASILVIA","From the name Silvia"));
	namesDictionary.insert(std::pair<std::string,std::string>("SASKIA","FROM ALEXANDRA (Hl)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SATCHEL","Bag"));
	namesDictionary.insert(std::pair<std::string,std::string>("SATIN","Smooth Fabric"));
	namesDictionary.insert(std::pair<std::string,std::string>("SATINKA","Sacred Dancer"));
	namesDictionary.insert(std::pair<std::string,std::string>("SATU","Fairytale"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAUL","Borrowed"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAVANNAH","Treeless Plain"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAWYER","Woodcutter"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAXEN","Swordsman"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAXON","Swordsman"));
	namesDictionary.insert(std::pair<std::string,std::string>("SAXTON","Swordsman"));
	namesDictionary.insert(std::pair<std::string,std::string>("SCARLET","Flaming Red"));
	namesDictionary.insert(std::pair<std::string,std::string>("SCARLETT","Red"));
	namesDictionary.insert(std::pair<std::string,std::string>("SCHUYLER","Scholar"));
	namesDictionary.insert(std::pair<std::string,std::string>("SCOT","From the name SCOTT"));
	namesDictionary.insert(std::pair<std::string,std::string>("SCOTT","Of Scottish Origin"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEAMUS","From the name JAMES (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEAN","From the name JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEANNA","God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEASON","Sowing, Planting"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEBASTIAN","Venerable"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEBASTIEN","Form of SEBASTIAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEDA","Forest Voices (Arm)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEEMA","A Sign"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEGHEN","Ostrich (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEIKO","Force, Truth (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SELAS","Trinity (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SELENA","The Moon"));
	namesDictionary.insert(std::pair<std::string,std::string>("SELENE","From SELENA"));
	namesDictionary.insert(std::pair<std::string,std::string>("SELIA","Variant of SHEILA (Ir) or CELIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("SELIMA","Brings Comfort, Peace"));
	namesDictionary.insert(std::pair<std::string,std::string>("SELINA","Lunar Glow"));
	namesDictionary.insert(std::pair<std::string,std::string>("SELMA","Fair"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEMA","Divine Omen (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEMELE","To Sow"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEMIRA","Fulfilled (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SENALDA","A Sign, Symbol"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEPTEMBER","8th Month"));
	namesDictionary.insert(std::pair<std::string,std::string>("SERA","From SERAFINA"));
	namesDictionary.insert(std::pair<std::string,std::string>("SERAFINA","Heavenly, Winged Angel"));
	namesDictionary.insert(std::pair<std::string,std::string>("SERENA","Serene, Calm"));
	namesDictionary.insert(std::pair<std::string,std::string>("SERENDIPITY","Good Fortune"));
	namesDictionary.insert(std::pair<std::string,std::string>("SERENITY","Peaceful Disposition"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEREPTA","Peaceful"));
	namesDictionary.insert(std::pair<std::string,std::string>("SERGE","Servant"));
	namesDictionary.insert(std::pair<std::string,std::string>("SERGIO","Attendant"));
	namesDictionary.insert(std::pair<std::string,std::string>("SERWA","Jewel (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SETH","Appointed"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEVEN","7"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEVERINO","Severe"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEVINC","Delight"));
	namesDictionary.insert(std::pair<std::string,std::string>("SEYMOUR","Marshy Land Near the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHACHER","Early Morning, Dawn"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAINA","Beautiful"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAKIA","Season's Beginning"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAKILA","Pretty"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAKIR","Grateful"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAKIRA","Thankful"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAKTI","Divine Woman"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHALAIDAH","Celtic"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAMAN","Holy Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAMARA","Ready for Battle"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAMIRA","Precious Stone"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAMUS","From the name JAMES (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHANA","God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHANDI","God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHANE","From the name JOHN (Ir) from Sean"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHANI","Marvelous"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHANNEN","FROM SHANNON"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHANNON","Ancient God (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHANON","From the name SHANNON"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHANTELL","Rocky Area"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAQUILLE","Pretty"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHARIS","Flat Plain"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHARLENE","From the name CHARLES"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHARNE","Desert Plain"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHARON","A Flat clearing"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHASA","Precious Water (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAUN","From the name JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAUNA","Fem. form of SHAUN"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAUNNA","Fem. form of SHAUN"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAW","A Grove"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAWN","From the name JOHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAWNA","Fem. form of SHAUN"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHAY","A Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHEA","Fairy Place (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHEBA","Kingdom in Arabia"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHEEHAN","Peacemaker (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHEENA","Jane, God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHEERA","A Song"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHEILA","From the name CECILIA (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHEL","From the name SHELDON"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHELBY","A Sheltered Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHELDON","On a Hill, Protected"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHELLEY","Dim. of CECELIA or SHELDON"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHELLY","Dim. of CECELIA or SHELDON"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHERI","Beloved, Dearest"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHERIDAN","Wild"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHERINE","Beloved, Dearest"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHERISE","From the name CHARISSE"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHERMAN","Shearer or Servant"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHERRI","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHERRIE","Beloved, Dearest"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHERRY","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHERYL","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHIELA","Blind"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHILOH","Peaceful"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHING","Victory (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHINO","Stem of Bamboo (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHIRA","A Song"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHIRI","Song of my Soul (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHIRLEY","Song is Mine"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHIRLYN","Bright Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHLOMO","Peaceful (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHONA","Fem. form of John"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHOSHANA","Lily"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHOSHANAH","Rose (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SHUBHA","Auspicious"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIAN","God's Gracious Gift (Wl)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIBYL","From the name CYBILL"));
	namesDictionary.insert(std::pair<std::string,std::string>("SID","From the name SIDNEY"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIDNEY","Contraction of St. Denys"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIDONIA","To Entice"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIDRA","Star Born (Lt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIENNA","Reddish Brown"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIERRA","Black"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIGNA","Signal, Sign"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIKA","Money (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SILVAIN","Forest (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SILVANA","Forest"));
	namesDictionary.insert(std::pair<std::string,std::string>("SILVER","The Color Silver"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIMA","Treasure, Prize"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIMON","It is heard"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIMONE","It is heard"));
	namesDictionary.insert(std::pair<std::string,std::string>("SINCLAIR","A Clear Sign"));
	namesDictionary.insert(std::pair<std::string,std::string>("SINE","Jane, God is Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("SINEAD","Irish form of JANE"));
	namesDictionary.insert(std::pair<std::string,std::string>("SINJIN","Saint John"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIOBHAN","Form of  JOAN (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SISSY","From the name CECILIA (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SIVNEY","Well-going"));
	namesDictionary.insert(std::pair<std::string,std::string>("SKIP","From the name SKIPPER"));
	namesDictionary.insert(std::pair<std::string,std::string>("SKIPPER","Shipmaster"));
	namesDictionary.insert(std::pair<std::string,std::string>("SKYLAR","Sheltering"));
	namesDictionary.insert(std::pair<std::string,std::string>("SKYLER","Sheltering"));
	namesDictionary.insert(std::pair<std::string,std::string>("SLADE","Child of the Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("SLOAN","Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("SLOANE","Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("SLONE","Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("SMEDLEY","Flat Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("SNOW","Fair Complected"));
	namesDictionary.insert(std::pair<std::string,std::string>("SNOWY","Dim. of SNOW"));
	namesDictionary.insert(std::pair<std::string,std::string>("SOFIA","From the name SOPHIA (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SOL","Sun or See SOLOMON"));
	namesDictionary.insert(std::pair<std::string,std::string>("SOLACE","Comfort"));
	namesDictionary.insert(std::pair<std::string,std::string>("SOLANA","Wind from the East"));
	namesDictionary.insert(std::pair<std::string,std::string>("SOLANGE","Solitary (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SOLEIL","Sun (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SOLOMON","Peaceful"));
	namesDictionary.insert(std::pair<std::string,std::string>("SONDO","Born on Sunday (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SONDRA","Helper"));
	namesDictionary.insert(std::pair<std::string,std::string>("SONDRA","Defender of Mankind"));
	namesDictionary.insert(std::pair<std::string,std::string>("SONIA","Wisdom"));
	namesDictionary.insert(std::pair<std::string,std::string>("SONNAGH","A mound or rampart"));
	namesDictionary.insert(std::pair<std::string,std::string>("SONORA","Pleasant Sounding"));
	namesDictionary.insert(std::pair<std::string,std::string>("SONYA","From the name SONIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("SOPHIA","From the name SOPHIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("SOPHIE","Wisdom"));
	namesDictionary.insert(std::pair<std::string,std::string>("SORA","Chirping Songbird"));
	namesDictionary.insert(std::pair<std::string,std::string>("SORCHA","Form of SARAH or Bright"));
	namesDictionary.insert(std::pair<std::string,std::string>("SOREN","From the name THOR (God of War)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SORLEY","viking"));
	namesDictionary.insert(std::pair<std::string,std::string>("SPENCE","From the name SPENCER"));
	namesDictionary.insert(std::pair<std::string,std::string>("SPENCER","Administrator"));
	namesDictionary.insert(std::pair<std::string,std::string>("SPERANZA","Hope (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SPIKE","Long, Heavy Nail"));
	namesDictionary.insert(std::pair<std::string,std::string>("STACEY","Resurrection"));
	namesDictionary.insert(std::pair<std::string,std::string>("STACIA","Resurrection"));
	namesDictionary.insert(std::pair<std::string,std::string>("STACY","Resurrection"));
	namesDictionary.insert(std::pair<std::string,std::string>("STAN","From the name STANLEY"));
	namesDictionary.insert(std::pair<std::string,std::string>("STANISLAUS","Camp glory"));
	namesDictionary.insert(std::pair<std::string,std::string>("STANISLAV","Glory of the Camp"));
	namesDictionary.insert(std::pair<std::string,std::string>("STANISLAW","From the name STANISLAV"));
	namesDictionary.insert(std::pair<std::string,std::string>("STANLEY","Rocky Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("STAR","A Star"));
	namesDictionary.insert(std::pair<std::string,std::string>("STARR","From the name STAR"));
	namesDictionary.insert(std::pair<std::string,std::string>("STAVROS","Crowned (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEFAN","From the name STEVEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEFANIE","From STEPHANIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEFFI","From the name STEVEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEFFIE","From the name STEVEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("STELLA","From the name STAR (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEP","From the name STEVEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEPHAN","From the name STEVEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEPHANIE","From the name STEVEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEPHEN","From the name STEVEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEPHENIE","From the name STEVEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("STERLING","Valuable"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEVE","From the name STEVEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEVEN","A Crown"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEVIE","From the name STEVEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEW","From the name STUART"));
	namesDictionary.insert(std::pair<std::string,std::string>("STEWART","From the name STUART"));
	namesDictionary.insert(std::pair<std::string,std::string>("STILLMAN","Quiet, Gentle"));
	namesDictionary.insert(std::pair<std::string,std::string>("STOCKTON","Town Near Tree Trunk"));
	namesDictionary.insert(std::pair<std::string,std::string>("STONE","Stone"));
	namesDictionary.insert(std::pair<std::string,std::string>("STORM","A Storm"));
	namesDictionary.insert(std::pair<std::string,std::string>("STORMY","Impetuous Nature"));
	namesDictionary.insert(std::pair<std::string,std::string>("STU","From the name STUART"));
	namesDictionary.insert(std::pair<std::string,std::string>("STUART","Keeper of the Estate"));
	namesDictionary.insert(std::pair<std::string,std::string>("STUDS","A House"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUE","From the name SUSAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUGAR","Sugar"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUKEY","From the name SUSAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUKI","Beloved (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SULIS","Goddess who Watched OVer Bath"));
	namesDictionary.insert(std::pair<std::string,std::string>("SULLY","To Stain"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUMANA","Wealthy (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUMMER","The Season"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUNEE","Good Thing (Tk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUNNY","Brilliant, of the Sun"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUSAN","A Rose or Lilly"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUSANE","Lily"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUSANNA","From the name SUSAN (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUSANNAH","From the name SUSAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUSIE","From the name SUSAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUTTON","The Town to the South"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUZANNE","From the name SUSAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUZETTE","From the name SUSAN (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SUZY","From the name SUSAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("SVEIN","Youth"));
	namesDictionary.insert(std::pair<std::string,std::string>("SVETA","Bright Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("SYBIL","Form of Isabel"));
	namesDictionary.insert(std::pair<std::string,std::string>("SYDNEE","Contraction of St. Denys"));
	namesDictionary.insert(std::pair<std::string,std::string>("SYDNEY","Contraction of St. Denys"));
	namesDictionary.insert(std::pair<std::string,std::string>("SYLVAIN","Of the Forest"));
	namesDictionary.insert(std::pair<std::string,std::string>("SYLVESTER","From the Forest, Woods"));
	namesDictionary.insert(std::pair<std::string,std::string>("SYLVIA","From the Forest"));
	namesDictionary.insert(std::pair<std::string,std::string>("SYLVIE","From the name SYLVIA (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("SYNAN","Old"));
	namesDictionary.insert(std::pair<std::string,std::string>("SYNCLAIR","A Clear Sign"));
	namesDictionary.insert(std::pair<std::string,std::string>("SYSHE","Street (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TA'IB","Good"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAB","Form of DAVID or Drummer"));
	namesDictionary.insert(std::pair<std::string,std::string>("TABAN","Sunshine, Exhausted"));
	namesDictionary.insert(std::pair<std::string,std::string>("TABER","Drummer"));
	namesDictionary.insert(std::pair<std::string,std::string>("TABITHA","A Gazelle"));
	namesDictionary.insert(std::pair<std::string,std::string>("TACITA","Silent"));
	namesDictionary.insert(std::pair<std::string,std::string>("TACY","Silence"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAD","From the name THAD"));
	namesDictionary.insert(std::pair<std::string,std::string>("TADELESH","Lucky (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TADHG","Poet, Philosopher"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAFFY","Of Welsh Origin"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAI","From THAILAND"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAIFA","Nation, Tribe (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAILYNN","From TAI and LYNN"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAIMA","Loud Thunder"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAIT","Cheerful (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TALA","Wolf (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TALEN","My Dew"));
	namesDictionary.insert(std::pair<std::string,std::string>("TALIA","Morning Dew (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TALIESIN","Radiant Brow"));
	namesDictionary.insert(std::pair<std::string,std::string>("TALISA","Form of LISA (Af.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TALISHA","Damsel Arise"));
	namesDictionary.insert(std::pair<std::string,std::string>("TALITHA","Maiden, Child"));
	namesDictionary.insert(std::pair<std::string,std::string>("TALLIS","Forest"));
	namesDictionary.insert(std::pair<std::string,std::string>("TALLULAH","Running Water"));
	namesDictionary.insert(std::pair<std::string,std::string>("TALMAI","Mound"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAM","Heart"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAMA","Whole, Perfect"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAMAH","From the name TAMA"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAMARA","A Spice or Palm Tree (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAMASHA","Pageant (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAMASINE","Twin"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAMATHA","Dear Tammy"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAMBRE","Great Joy, Music"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAMERA","A Spice or Palm Tree (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAMERON","From CAMERON"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAMIKA","People (Af-Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAMMY","From the name TAMARA"));
	namesDictionary.insert(std::pair<std::string,std::string>("TANA","Form of DANA"));
	namesDictionary.insert(std::pair<std::string,std::string>("TANDICE","Team"));
	namesDictionary.insert(std::pair<std::string,std::string>("TANESIA","Born on Monday"));
	namesDictionary.insert(std::pair<std::string,std::string>("TANIA","A Fairy Queen"));
	namesDictionary.insert(std::pair<std::string,std::string>("TANISHA","Monday's Child (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TANITH","An Estate"));
	namesDictionary.insert(std::pair<std::string,std::string>("TANNER","Leather Worker"));
	namesDictionary.insert(std::pair<std::string,std::string>("TANYA","From the name TANIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAO","Peach, Long Life (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TARA","To Throw or Carry"));
	namesDictionary.insert(std::pair<std::string,std::string>("TARAN","Rocky Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("TARANA","Daytime (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TARIKA","Star (Hn)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TARIN","Rocky Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("TARU","Myth"));
	namesDictionary.insert(std::pair<std::string,std::string>("TARU","Legend"));
	namesDictionary.insert(std::pair<std::string,std::string>("TARYN","Fem. form of TYRONE"));
	namesDictionary.insert(std::pair<std::string,std::string>("TASHA","From the name NATALIE"));
	namesDictionary.insert(std::pair<std::string,std::string>("TASIDA","Horse Rider"));
	namesDictionary.insert(std::pair<std::string,std::string>("TASMINE","Twin"));
	namesDictionary.insert(std::pair<std::string,std::string>("TASSOS","Harvester (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TATE","A measure of land"));
	namesDictionary.insert(std::pair<std::string,std::string>("TATIANA","Fairy Queen"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAUREAN","Strong, Forceful"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAVE","FROM GUSTAVE (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAVI","Good"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAVIA","From OCTAVIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAVITA","From the name DAVID"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAWANA","Created (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAYLOR","Tailor"));
	namesDictionary.insert(std::pair<std::string,std::string>("TAZARA","Railway Line (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEA","Princess, Aunt"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEAGAN","Attractive (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEAGUE","A Poet"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEAL","Greenish Blue Color"));
	namesDictionary.insert(std::pair<std::string,std::string>("TECLA","Divine Fame"));
	namesDictionary.insert(std::pair<std::string,std::string>("TED","Divine Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEDDY","Divine Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEENIE","Small One"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEFO","Payment (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEIGE","A Poet"));
	namesDictionary.insert(std::pair<std::string,std::string>("TELEZA","Slippery"));
	namesDictionary.insert(std::pair<std::string,std::string>("TELI","A Lamb"));
	namesDictionary.insert(std::pair<std::string,std::string>("TELLY","Pet form of THEODORE"));
	namesDictionary.insert(std::pair<std::string,std::string>("TELMA","Nursling"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEMIMA","Whole, Honest"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEMIRA","Tall"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEMPLE","A Sanctuary"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEMPLETON","Town of Sanctuary"));
	namesDictionary.insert(std::pair<std::string,std::string>("TENEN","Born on Monday (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEO","From TOM (Vt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERENA","FROM TERENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERENCE","Tender, Good Gracious"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERENTIA","Tender"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERESA","From the name THERESA (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERMON","Church land"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERRA","Earth (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERRAN","Earth"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERREL","From the name TERENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERRENCE","From the name TERENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERRIS","From the name TERRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERRY","From the name TERENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERRYAL","Form of TERRY"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERTIUS","The Third"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERTULLIAN","Catholic Saint"));
	namesDictionary.insert(std::pair<std::string,std::string>("TERWEDUWE","Of the Widow"));
	namesDictionary.insert(std::pair<std::string,std::string>("TESHI","Cheerful, Full of Laughter (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TESS","To reap"));
	namesDictionary.insert(std::pair<std::string,std::string>("TESSA","From the name TESS"));
	namesDictionary.insert(std::pair<std::string,std::string>("TEX","Nickname for a Texan"));
	namesDictionary.insert(std::pair<std::string,std::string>("THAD","From the name THADDEUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("THADDEUS","Gift of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("THADEUS","Form of THADDEUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("THADY","Dim. of THADDEUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("THALASSA","The Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("THALIA","Joyful (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("THAN","Death"));
	namesDictionary.insert(std::pair<std::string,std::string>("THANDEKA","Loved One"));
	namesDictionary.insert(std::pair<std::string,std::string>("THANDEKA","Lovable"));
	namesDictionary.insert(std::pair<std::string,std::string>("THANE","To Beget"));
	namesDictionary.insert(std::pair<std::string,std::string>("THANH","Finish, Complete (Vt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("THATCHER","Roof Fixer"));
	namesDictionary.insert(std::pair<std::string,std::string>("THAYER","Of the Nation's Army"));
	namesDictionary.insert(std::pair<std::string,std::string>("THEA","Gift of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("THEL","Upper Story"));
	namesDictionary.insert(std::pair<std::string,std::string>("THELMA","Nursling"));
	namesDictionary.insert(std::pair<std::string,std::string>("THEMA","Queen (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("THEMBA","Trusted (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("THEO","From the name THEODORE"));
	namesDictionary.insert(std::pair<std::string,std::string>("THEODORA","From THEODORE"));
	namesDictionary.insert(std::pair<std::string,std::string>("THEODORE","Divine Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("THERESA","Feminine form of TERENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("THERESE","From the name THERESA"));
	namesDictionary.insert(std::pair<std::string,std::string>("THINA","Christian"));
	namesDictionary.insert(std::pair<std::string,std::string>("THOM","Twin"));
	namesDictionary.insert(std::pair<std::string,std::string>("THOMAS","A Twin"));
	namesDictionary.insert(std::pair<std::string,std::string>("THOR","Thunder"));
	namesDictionary.insert(std::pair<std::string,std::string>("THORA","Thunderer"));
	namesDictionary.insert(std::pair<std::string,std::string>("THORNTON","From the Thorny Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("THRINE","The Pure One"));
	namesDictionary.insert(std::pair<std::string,std::string>("THRON","Throne, Seat of Royalty"));
	namesDictionary.insert(std::pair<std::string,std::string>("THURMAN","Servant of Thor"));
	namesDictionary.insert(std::pair<std::string,std::string>("THYRA","A Window or Goddess of Dawn (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TIA","Princess or Aunt (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TIANA","Princess"));
	namesDictionary.insert(std::pair<std::string,std::string>("TIARET","Lioness (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TIASSALE","It is Forgotten (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TIERNEY","Lordly (Ir)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TIFFANY","Three, the Trinity"));
	namesDictionary.insert(std::pair<std::string,std::string>("TILDEN","Fertile Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("TILLIE","Might, Power"));
	namesDictionary.insert(std::pair<std::string,std::string>("TILLY","Dim. of TILDEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("TIM","From the name TIMOTHY"));
	namesDictionary.insert(std::pair<std::string,std::string>("TIMOTHY","To Honor God"));
	namesDictionary.insert(std::pair<std::string,std::string>("TINA","Short for names ending in TINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("TINO","Small"));
	namesDictionary.insert(std::pair<std::string,std::string>("TIP","Nickname for THOMAS"));
	namesDictionary.insert(std::pair<std::string,std::string>("TIRZA","Pleasantness"));
	namesDictionary.insert(std::pair<std::string,std::string>("TIRZAH","Delight"));
	namesDictionary.insert(std::pair<std::string,std::string>("TISHA","Dim. of PATRICIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("TIVONA","Lover of Nature"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOAN","Safe, Secure (Vt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOBIT","Good (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOBY","The Lord Is Good"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOD","From the name TODD"));
	namesDictionary.insert(std::pair<std::string,std::string>("TODD","Fox"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOKI","Time of Opportunity (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOLLA","Victor"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOM","From the name THOMAS"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOMAS","A Twin"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOMMY","A Twin"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOMO","Intelligent"));
	namesDictionary.insert(std::pair<std::string,std::string>("TONI","Worthy of Praise"));
	namesDictionary.insert(std::pair<std::string,std::string>("TONY","Worthy of Praise"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOPAZ","From the Gem"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOPAZA","From the name TOPAZ"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOPO","Mole, Gopher"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOPPER","Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("TORI","From TORRANCE or VICTORIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("TORIE","Victorious"));
	namesDictionary.insert(std::pair<std::string,std::string>("TORN","Form of TORRENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("TORRANCE","Form of TERENCE"));
	namesDictionary.insert(std::pair<std::string,std::string>("TORRIN","Bird"));
	namesDictionary.insert(std::pair<std::string,std::string>("TORY","From TORRANCE or VICTORIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOSHI","Mirror Image (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOTIE","Gift of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOVA","Good"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOVAH","Good"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOVI","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOWNSEND","End of the Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("TOYAH","Toy (Nd)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRACEY","Brave"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRACY","Brave"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRAELIC-AN","Smooth"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRAHERN","Strong as Iron"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRANQUILLA","Calm, Tranquil"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRAPPER","Trapper"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRAVA","Fresh Grasses (Cz)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRAVIS","Crossroads"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRELLA","From ESTHER"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRENT","Thirty"));
	namesDictionary.insert(std::pair<std::string,std::string>("TREVOR","Prudent"));
	namesDictionary.insert(std::pair<std::string,std::string>("TREY","Three (Lt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRICIA","From the name PATRICIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRILBY","A Soft Hat"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRINA","From the name CATHERINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRINI","The Trinity"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRINITY","Holy Three"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRISH","Of Noble Descent"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRISHA","Noblewoman"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRISTA","Sad"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRISTAN","From the name TRISTRAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRISTANA","Sad"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRISTESSA","Bold"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRISTRAM","Sad"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRIXIE","Bringer of Joy"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRORY","Variation of Rory"));
	namesDictionary.insert(std::pair<std::string,std::string>("TROY","Water or Footsoldier"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRUDA","Warrior Woman (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRUDE","From GERTRUDE"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRUDY","Beloved"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRULA","True"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRULY","True"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRUMAN","Faithful Man"));
	namesDictionary.insert(std::pair<std::string,std::string>("TRYPHENA","Delicate"));
	namesDictionary.insert(std::pair<std::string,std::string>("TUDOR","Divine Gift (Wl)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TUESDAY","From Tuesday"));
	namesDictionary.insert(std::pair<std::string,std::string>("TULLA","A little hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("TULLY","Little Hill"));
	namesDictionary.insert(std::pair<std::string,std::string>("TUMO","Fame (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TUYEN","Angel (Vt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TWILA","From the name TWYLA"));
	namesDictionary.insert(std::pair<std::string,std::string>("TWYLA","Thread"));
	namesDictionary.insert(std::pair<std::string,std::string>("TY","House"));
	namesDictionary.insert(std::pair<std::string,std::string>("TYANNE","From TYRUS & ANNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("TYBAL","A Holy Place"));
	namesDictionary.insert(std::pair<std::string,std::string>("TYLER","House Builder"));
	namesDictionary.insert(std::pair<std::string,std::string>("TYME","Thyme Herb"));
	namesDictionary.insert(std::pair<std::string,std::string>("TYNE","River"));
	namesDictionary.insert(std::pair<std::string,std::string>("TYRA","God of Battle (Sc)"));
	namesDictionary.insert(std::pair<std::string,std::string>("TYREE","Island off of Scotland"));
	namesDictionary.insert(std::pair<std::string,std::string>("TYRONE","Land of Owen, Young Soldier"));
	namesDictionary.insert(std::pair<std::string,std::string>("TYSON","Son of TY"));
	namesDictionary.insert(std::pair<std::string,std::string>("UANG","Great (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("UBA","Father, Lord (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("UDAY","To Arrive (Hn)"));
	namesDictionary.insert(std::pair<std::string,std::string>("UGO","Intelligence, Spirit (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("UJANA","Youth (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ULA","Jewel of the Sea"));
	namesDictionary.insert(std::pair<std::string,std::string>("ULAN","First Born of Twins (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ULANI","Cheerful (HI)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ULEMA","Intelligent One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ULF","Wolf"));
	namesDictionary.insert(std::pair<std::string,std::string>("ULL","Glory"));
	namesDictionary.insert(std::pair<std::string,std::string>("ULLA","To Fill Up"));
	namesDictionary.insert(std::pair<std::string,std::string>("ULRIC","Wolf (Da)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ULYSSES","Form of ODYSSEUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("UMA","Form of UNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("UMAY","Hope (Tk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("UMBERTO","Color of Earth (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("UMEKO","Plum Blossom Child (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("UMI","Servant (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("UMMI","My Mother (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("UNA","The One"));
	namesDictionary.insert(std::pair<std::string,std::string>("UNITY","Oneness (Bt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("UPENDO","Love (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("URANIA","Heavenly"));
	namesDictionary.insert(std::pair<std::string,std::string>("URBAIN","Form of URBAN"));
	namesDictionary.insert(std::pair<std::string,std::string>("URBAN","From the City"));
	namesDictionary.insert(std::pair<std::string,std::string>("URI","My Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("URIAH","God is my Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("URIEL","Angel of Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("URILLA","God is my Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("URIT","Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("URSA","Form of URSULA"));
	namesDictionary.insert(std::pair<std::string,std::string>("URSALA","Female Bear"));
	namesDictionary.insert(std::pair<std::string,std::string>("URSULA","Female Bear"));
	namesDictionary.insert(std::pair<std::string,std::string>("UTA","From the Mountains"));
	namesDictionary.insert(std::pair<std::string,std::string>("UTE","From the Mountains"));
	namesDictionary.insert(std::pair<std::string,std::string>("VAIL","Valley"));
	namesDictionary.insert(std::pair<std::string,std::string>("VAL","Power"));
	namesDictionary.insert(std::pair<std::string,std::string>("VALARIE","Strength, Valor"));
	namesDictionary.insert(std::pair<std::string,std::string>("VALENCIA","Bravery"));
	namesDictionary.insert(std::pair<std::string,std::string>("VALENTINA","From the name Valentine"));
	namesDictionary.insert(std::pair<std::string,std::string>("VALENTINE","Health (or Love)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VALERIA","Strength, Valor"));
	namesDictionary.insert(std::pair<std::string,std::string>("VALERIE","To be strong"));
	namesDictionary.insert(std::pair<std::string,std::string>("VALIANT","Brave"));
	namesDictionary.insert(std::pair<std::string,std::string>("VALLERIE","To be strong"));
	namesDictionary.insert(std::pair<std::string,std::string>("VALTINA","From the name VALENTINA"));
	namesDictionary.insert(std::pair<std::string,std::string>("VAN","From the family of.."));
	namesDictionary.insert(std::pair<std::string,std::string>("VANCE","High"));
	namesDictionary.insert(std::pair<std::string,std::string>("VANDALIN","Wanderer"));
	namesDictionary.insert(std::pair<std::string,std::string>("VANESSA","Butterfly"));
	namesDictionary.insert(std::pair<std::string,std::string>("VANGIE","Like an Angel"));
	namesDictionary.insert(std::pair<std::string,std::string>("VANNA","From the name VANESSA"));
	namesDictionary.insert(std::pair<std::string,std::string>("VAREN","Superior (Hn)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VASCHEL","Little Ash Tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("VATUSIA","They Leave Us Behind (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VAUGHAN","From the name VAUGHN"));
	namesDictionary.insert(std::pair<std::string,std::string>("VAUGHN","Small"));
	namesDictionary.insert(std::pair<std::string,std::string>("VEA","Chief"));
	namesDictionary.insert(std::pair<std::string,std::string>("VEASNA","Luckily (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VEGA","Falling Star"));
	namesDictionary.insert(std::pair<std::string,std::string>("VELMA","Desire to Protect"));
	namesDictionary.insert(std::pair<std::string,std::string>("VENEDICT","Blessed (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VENETIA","Woman of Venice"));
	namesDictionary.insert(std::pair<std::string,std::string>("VERA","Truth (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VERDA","Truth (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VERDI","Green (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VERN","Youthful"));
	namesDictionary.insert(std::pair<std::string,std::string>("VERNA","Youthful"));
	namesDictionary.insert(std::pair<std::string,std::string>("VERNE","Youthful"));
	namesDictionary.insert(std::pair<std::string,std::string>("VERNON","Youthful"));
	namesDictionary.insert(std::pair<std::string,std::string>("VERONICA","The Truth"));
	namesDictionary.insert(std::pair<std::string,std::string>("VESTA","Goddess of the Hearth (Lt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VEVAY","A White Wave"));
	namesDictionary.insert(std::pair<std::string,std::string>("VEVINA","Sweet Lady"));
	namesDictionary.insert(std::pair<std::string,std::string>("VI","From the name VIOLET"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIC","Victorious"));
	namesDictionary.insert(std::pair<std::string,std::string>("VICKI","From the name VICTORIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("VICKY","From the name VICTORIA"));
	namesDictionary.insert(std::pair<std::string,std::string>("VICTOR","Winner, Conqueror"));
	namesDictionary.insert(std::pair<std::string,std::string>("VICTORIA","Victorious"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIDA","Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIDAL","Vital (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIDOR","Happy (Hg)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIENNA","From Wine Country"));
	namesDictionary.insert(std::pair<std::string,std::string>("VILA","From WILLIAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("VINCE","From the name VINCENT"));
	namesDictionary.insert(std::pair<std::string,std::string>("VINCENT","Conqueror, Victor"));
	namesDictionary.insert(std::pair<std::string,std::string>("VINE","Vineyard Worker"));
	namesDictionary.insert(std::pair<std::string,std::string>("VINNIE","From the name VINCENT"));
	namesDictionary.insert(std::pair<std::string,std::string>("VINNY","From the name VINCENT"));
	namesDictionary.insert(std::pair<std::string,std::string>("VINSON","Son of Vincent"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIOLA","From the name VIOLET (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIOLET","Violet Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIRGIL","Strong"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIRGINIA","Virginal, Pure"));
	namesDictionary.insert(std::pair<std::string,std::string>("VISOLA","Longings are Waterfalls (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VITA","Life (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VITALIS","Life (Lt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VITO","Life (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VITTORIO","Conqueror (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIVEK","Wisdom (Hn)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIVI","Alive (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIVIAN","Gracious in Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIVIANA","Lovely (It)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VIVIENNE","Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("VLAD","Prince (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VLADIMIR","Prince (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VOLLENY","National Spirit"));
	namesDictionary.insert(std::pair<std::string,std::string>("VON","From.. (diminutive of a surname)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VONDA","True Image"));
	namesDictionary.insert(std::pair<std::string,std::string>("VONDILA","Lost a Child (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VONDRA","The Love of a Woman (Cz)"));
	namesDictionary.insert(std::pair<std::string,std::string>("VUI","Cheerful (Vt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WADE","To Wade in Water"));
	namesDictionary.insert(std::pair<std::string,std::string>("WAFA","Faithful (Ar)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WAGGONER","From the name WAYNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("WALDA","Ruler (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WALDO","A Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("WALKER","Forest Walker"));
	namesDictionary.insert(std::pair<std::string,std::string>("WALLACE","A Stranger"));
	namesDictionary.insert(std::pair<std::string,std::string>("WALT","From the name WALTER"));
	namesDictionary.insert(std::pair<std::string,std::string>("WALTA","Shield (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WALTER","Woods or Army General"));
	namesDictionary.insert(std::pair<std::string,std::string>("WANDA","A slender, young tree"));
	namesDictionary.insert(std::pair<std::string,std::string>("WANETA","Shape-shifter (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WARD","Guardian (Bt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WARNER","From the name WARREN"));
	namesDictionary.insert(std::pair<std::string,std::string>("WARREN","To Preserve"));
	namesDictionary.insert(std::pair<std::string,std::string>("WASAKI","The Enemy (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WASHI","Eagle (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WASHINGTON","Town of the Smart"));
	namesDictionary.insert(std::pair<std::string,std::string>("WAVERLY","To Wave"));
	namesDictionary.insert(std::pair<std::string,std::string>("WAYNE","Wagoner"));
	namesDictionary.insert(std::pair<std::string,std::string>("WEBSTER","Weaver"));
	namesDictionary.insert(std::pair<std::string,std::string>("WELCOME","Welcome Guest (Bt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WENDA","From the name WENDY"));
	namesDictionary.insert(std::pair<std::string,std::string>("WENDELL","Valley or Wanderer"));
	namesDictionary.insert(std::pair<std::string,std::string>("WENDI","From the name WENDY"));
	namesDictionary.insert(std::pair<std::string,std::string>("WENDY","Fair One"));
	namesDictionary.insert(std::pair<std::string,std::string>("WERNER","From the name WARREN"));
	namesDictionary.insert(std::pair<std::string,std::string>("WES","From the name WESLEY"));
	namesDictionary.insert(std::pair<std::string,std::string>("WESLEY","The West Meadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("WESTON","From the West Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("WHEELER","A Driver"));
	namesDictionary.insert(std::pair<std::string,std::string>("WHITBY","Farm with White Walls"));
	namesDictionary.insert(std::pair<std::string,std::string>("WHITFIELD","From the Small Field"));
	namesDictionary.insert(std::pair<std::string,std::string>("WHITLEY","A Small Field"));
	namesDictionary.insert(std::pair<std::string,std::string>("WHITNEY","White Island"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILBUR","From the name GILBERT (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILEY","Of the Willows"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILFORD","From the name WILFRED"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILFRED","Peaceful or Willow Tree Near Ford"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILHELMINA","Desire to Protect"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILL","From the name WILLIAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILLA","Fem. form of WILLIAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILLARD","Brave"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILLEM","Contraction of WILLIAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILLIAM","Desire to Protect"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILLIS","Son of WILLIAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILMA","Short for WILHEMINA"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILSON","Son of WILLIAM"));
	namesDictionary.insert(std::pair<std::string,std::string>("WILTON","Farm by the Spring"));
	namesDictionary.insert(std::pair<std::string,std::string>("WINDA","Chasing for Food (Swh)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WINFRED","Friend of Peace (m)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WINIFRED","Friend of Peace (f)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WINONA","First Born"));
	namesDictionary.insert(std::pair<std::string,std::string>("WINSLOW","Hill of Victory"));
	namesDictionary.insert(std::pair<std::string,std::string>("WINSTON","Victory Town"));
	namesDictionary.insert(std::pair<std::string,std::string>("WINTA","Desire (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("WINTHROP","Friendly"));
	namesDictionary.insert(std::pair<std::string,std::string>("WOLFGANG","Path of a Wolf"));
	namesDictionary.insert(std::pair<std::string,std::string>("WOOD","From the name WOODY"));
	namesDictionary.insert(std::pair<std::string,std::string>("WOODROW","The Path thru the Woods"));
	namesDictionary.insert(std::pair<std::string,std::string>("WOODS","Of the Woods"));
	namesDictionary.insert(std::pair<std::string,std::string>("WOODY","From the name WOODS"));
	namesDictionary.insert(std::pair<std::string,std::string>("WORDEN","Warden, Guardian"));
	namesDictionary.insert(std::pair<std::string,std::string>("WYATT","Water"));
	namesDictionary.insert(std::pair<std::string,std::string>("WYMAN","Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("WYNN","Light Complected"));
	namesDictionary.insert(std::pair<std::string,std::string>("WYNNE","From the name WYNN"));
	namesDictionary.insert(std::pair<std::string,std::string>("WYNONA","From the name WINONA"));
	namesDictionary.insert(std::pair<std::string,std::string>("WYOME","Plain (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("XANDY","From the name ALEXANDER"));
	namesDictionary.insert(std::pair<std::string,std::string>("XANTHE","From the name XANTHUS"));
	namesDictionary.insert(std::pair<std::string,std::string>("XANTHUS","Yellow"));
	namesDictionary.insert(std::pair<std::string,std::string>("XANTO","Blond Haired (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("XAVIER","Bright"));
	namesDictionary.insert(std::pair<std::string,std::string>("XAVIERA","From the name XAVIER"));
	namesDictionary.insert(std::pair<std::string,std::string>("XENA","Welcome Guest (Gr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("XENIA","Hospitable"));
	namesDictionary.insert(std::pair<std::string,std::string>("XENOPHON","Strange Voice"));
	namesDictionary.insert(std::pair<std::string,std::string>("XENOS","Guest (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("XERXES","King"));
	namesDictionary.insert(std::pair<std::string,std::string>("XI-WANG","Desire (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("XINAVANE","Spread, Propagate (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("XOLANI","Please Forgive (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("XUXA","Fem. form of XERXES (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("XYLON","Lives in the Forest (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YACHI","Eight Thousand (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YADID","Beloved (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YAEL","Strength of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("YAHOLO","One who Yells (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YAHTO","Blue (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YAIR","God Will Teach (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YALE","From the corner of the land"));
	namesDictionary.insert(std::pair<std::string,std::string>("YAMAL","One of a Twin (Hn)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YAMIN","Right Hand (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YANA","He Answers (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YANCY","Englishman"));
	namesDictionary.insert(std::pair<std::string,std::string>("YANK","From the name YANCY"));
	namesDictionary.insert(std::pair<std::string,std::string>("YANKA","God is Good (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YANNI","From the name YANNIS"));
	namesDictionary.insert(std::pair<std::string,std::string>("YANNIS","Gift of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("YARDAN","King (Ar)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YARDLEY","Of the Yard"));
	namesDictionary.insert(std::pair<std::string,std::string>("YARO","Son (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YARON","Singing (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YASER","Easy Going"));
	namesDictionary.insert(std::pair<std::string,std::string>("YASIN","Prophet, Happiness"));
	namesDictionary.insert(std::pair<std::string,std::string>("YASMIN","From the name JASMINE"));
	namesDictionary.insert(std::pair<std::string,std::string>("YASUO","Peaceful One (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YATES","Gates"));
	namesDictionary.insert(std::pair<std::string,std::string>("YE","Universe (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YEARDLEIGH","Of the Yard"));
	namesDictionary.insert(std::pair<std::string,std::string>("YEHUDI","A Man from Judah, A Jew"));
	namesDictionary.insert(std::pair<std::string,std::string>("YELENA","Form of HELEN"));
	namesDictionary.insert(std::pair<std::string,std::string>("YEN","Calm (Vt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YENGE","Work (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YEPA","Winter Princess (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YERED","To come Down (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YERIEL","Founded by God (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YESTIN","Just (Wl)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YETTY","Ruler of the Household"));
	namesDictionary.insert(std::pair<std::string,std::string>("YEVA","Life-Enhancing (Rs)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YIHANA","Congratulations (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YITRO","Plenty (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YMIR","Mythological character"));
	namesDictionary.insert(std::pair<std::string,std::string>("YO","Bright (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YOGI","Of the Yoga Practice"));
	namesDictionary.insert(std::pair<std::string,std::string>("YOKO","Positive"));
	namesDictionary.insert(std::pair<std::string,std::string>("YOLAND","Violet Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("YOLANDA","Violet Flower (Sp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YONAH","From the name JONAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("YONINAH","Little Dove (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YORICK","Form of GEORGE (Da)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YORK","Form of GEORGE (Da)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YOSEF","Form of JOSEPH (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YOSEFU","From the name JOSEPH"));
	namesDictionary.insert(std::pair<std::string,std::string>("YOSHI","Quiet (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YOSHINO","Field of Good Prospects (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YUK","Moon (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YUKI","Snow or Lucky (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YUKIO","Gets What He Wants (Jp)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YUL","Past the Horizon (Ch)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YULE","Of Christmastime"));
	namesDictionary.insert(std::pair<std::string,std::string>("YUMA","Son of the Chief (Nat.Am)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YURI","From the name URIAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("YUVAL","Brook (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YVES","Archer (Fr)"));
	namesDictionary.insert(std::pair<std::string,std::string>("YVETTE","Form of YVONNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("YVON","Male form of YVONNE"));
	namesDictionary.insert(std::pair<std::string,std::string>("YVONNE","From the name EVE AND ANNA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZACCHEUS","Innocent (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZACH","Remembrance of the Lord"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZACHARIAH","Remembered by the Lord"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZACHARY","Remembrance of the Lord"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZACI","God of Fatherhood (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZADA","Good Fortune (Arm)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAHUR","Flower (Ara)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAIDA","Growing"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAIDE","Elder (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAILA","Female (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAIRE","From Zaire (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAKI","Lion's Prowess (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZALMAN","Peaceful & Quiet (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAN","Well Fed (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZANE","From the name John (Bt)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZANNA","Lily"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZARA","From the name SARA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAREB","Guardian (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZARED","Trap (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAREH","May God Protect the King"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAREK","May God Protect the King"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZARIFA","Successful"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZARINA","Golden (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAVAD","Present (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAYN","Beauty (Ara)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAZA","Movement (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZAZU","From the name ZAZA"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZBIGNIEW","To get rid of Anger (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZE'EV","Wolf (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZEA","Wheat"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZEB","God's Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZEBIDY","God's Gift"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZEBULON","Exalted"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZED","From ZEDEKIAH"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZEDEKIAH","God is Fair"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZEF","I Have no Child"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZEHEB","Gold (Tk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZEKE","Strength of God"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZEKI","Smart (Tk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZELDA","Woman Warrior"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZELIA","Zeal (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZELIG","The Blessed One"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZENA","Hospitable"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZENAS","Generous (Gk)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZENE","Beautiful (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZENIA","Hospitable"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZENOBIA","Sign, Symbol"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZENON","Stranger"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZEPHAN","Irish Saint"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZESIRO","First born of twins (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZEV","Wolf (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZIA","To Tremble"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZIAZAN","Rainbow (Arm)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZIKOMO","Thank You (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZILI","My Shadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZILLI","My Shadow"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZIMRI","Protected, Sacred"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZINNA","Created"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZINNIA","From the Flower"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZION","A Sign"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZIRAILI","Help of God (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZITA","The Seeker"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZIV","Very Bright (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZIVAN","Alive (Cz)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZIVEN","Vigorous, Alive (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZIYA","Light (Ara)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZIZI","Consecrated to God (Hg)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZO","Spiritual Leader (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZOAN","Departure (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZOE","Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZOEY","Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZOFIA","Wisdom (Po)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZOHAR","Light, Brilliance"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZOIE","Life"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZOLA","Earth"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZOLTAN","Sultan, Ruler"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZOLTIN","Life (Hg)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZONA","Sash"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZORADA","Dawn's Light"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZSA ZSA","From the name SUSAN (Hg)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZULA","Brilliant, Ahead (Af)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZULEIKA","Brilliant and Lovely"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZULEMA","Healthy and Vigorous"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZURIEL","The Lord is my Rock (Hb)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZWI","Gazelle (Nd)"));
	namesDictionary.insert(std::pair<std::string,std::string>("ZYTA","FROM Teresa (Po)"));
}
